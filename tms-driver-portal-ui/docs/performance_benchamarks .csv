"performance_area","benchmark_type","target_value","measurement_unit","measurement_conditions","test_environment","load_profile","monitoring_tools","baseline_value","acceptable_range","alert_threshold","degradation_trend","improvement_opportunities","business_relevance"
"Dashboard Page Load","Largest Contentful Paint (LCP)","3","seconds","Measured on a standard broadband connection as per REQ-1-500.","Staging","Single user, clean cache.","Lighthouse, WebPageTest, Grafana Frontend Monitoring","2.5","0-3.0 seconds","3.5","N/A","Optimize dashboard query aggregation; Lazy-load non-critical widgets.","Direct impact on manager's user experience and efficiency."
"Standard API GET Requests","Server-Side Response Time (p95)","200","milliseconds","Under a load of 100 concurrent users as per REQ-1-500 & REQ-1-501.","Performance","100 concurrent users performing standard operations.","JMeter, Prometheus, Grafana","150","0-200 ms","250","N/A","Database indexing; ORM query optimization.","Overall system responsiveness and user satisfaction."
"Disaster Recovery Time","Recovery Time Objective (RTO)","4","hours","Simulated regional AWS failure as per REQ-1-502.","Production/DR-Simulation","N/A","Manual timing; AWS Console; Custom scripts.","","0-4.0 hours","4.1","N/A","Automate recovery steps using Terraform and Ansible/runbooks.","Guarantees business continuity and meets availability SLAs."