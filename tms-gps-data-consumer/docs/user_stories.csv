"story_id","epic","title","user_role","description","business_value","priority","story_points","dependencies","acceptance_criteria","technical_tasks","definition_of_done"
"US-001","User and Access Management","Admin creates a new user account with a primary role","Admin","As an Admin, I want to create a new user account by providing their name, email, and assigning a primary role, so that I can securely grant a new employee the appropriate level of system access to perform their job duties.","Enables secure and controlled onboarding of new employees by provisioning role-based access to the system, ensuring users have the correct permissions from their first login.","Must Have","2","[]","[{""scenario"":""Successful creation of a new user with a primary role"",""given"":""I am logged in as an Admin and am on the 'Create User' screen"",""when"":""I enter a unique, valid email address, the user's full name, and select a 'Primary Role' (e.g., 'Dispatch Manager') from the available options"",""then"":""The system creates the new user account, the user appears in the list of system users, and the user is automatically assigned to the security group corresponding to the 'Dispatch Manager' role.""},{""scenario"":""Attempt to create a user with a non-unique email address"",""given"":""I am logged in as an Admin and am on the 'Create User' screen"",""when"":""I enter an email address that already exists for another user in the system and attempt to save"",""then"":""The system prevents the creation of the user and displays a clear, user-friendly error message such as 'A user with this email address already exists.'""},{""scenario"":""Attempt to create a user with missing required information"",""given"":""I am logged in as an Admin and am on the 'Create User' screen"",""when"":""I attempt to save the new user without providing a name, email, or selecting a primary role"",""then"":""The system prevents the record from being saved and visually indicates which mandatory fields are missing.""}]","[""Extend the 'res.users' form view to include a 'Primary Role' selection field."",""Override the 'create' and 'write' methods of 'res.users' to manage security group membership based on the selected role."",""Ensure Odoo's unique constraint on the email/login field is active.""]","[""All acceptance criteria are met and validated in a staging environment."",""Code is peer-reviewed and merged to the main branch."",""Unit tests for role assignment logic are created and passing with >80% coverage."",""Security is verified to ensure only Admins can create users."",""Feature is documented for the administrator's guide.""]"
"US-002","User and Access Management","Admin edits an existing user account's details and permissions","Admin","As an Admin, I want to edit an existing user's details, primary role, and specific permissions, so that I can maintain accurate user records and ensure their access rights align with their current job responsibilities, upholding system security and operational integrity.","Ensures system security by enforcing the principle of least privilege. Maintains data accuracy for user records. Supports operational changes (promotions, role changes) and facilitates compliance with audit requirements.","Must Have","2","[""US-001"",""US-004""]","[{""scenario"":""Admin successfully changes a user's primary role"",""given"":""I am logged in as an Admin and I am editing the record of a user whose primary role is 'Driver'"",""when"":""I change their primary role to 'Dispatch Manager' and click 'Save'"",""then"":""The system saves the change, the user is now assigned the default permissions associated with the 'Dispatch Manager' role, and the 'Driver' role permissions are removed.""},{""scenario"":""Admin attempts to remove their own administrative privileges"",""given"":""I am logged in as an Admin and I am editing my own user account"",""when"":""I attempt to remove the 'Admin' role or the 'Settings' access group from my account and click 'Save'"",""then"":""The system must prevent the change and display a clear warning message, such as 'Action blocked: You cannot remove administrative privileges from your own account.'""}]","[""Implement logic in the 'write' method of 'res.users' to handle role changes."",""Add a server-side check to prevent an admin from removing their own admin rights."",""Ensure changes are logged in the audit trail (chatter).""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for self-lockout prevention logic is implemented and passing."",""Audit trail generation is confirmed to be working."",""E2E test confirms an Admin can edit a user and the user's permissions are correctly enforced.""]"
"US-003","User and Access Management","Admin deactivates a user account","Admin","As an Admin, I want to deactivate a user's account, so that I can immediately revoke their system access when they are no longer with the company, ensuring data security and maintaining an accurate list of active users.","Enhances system security by preventing unauthorized access from former employees. Preserves data integrity by retaining historical user actions for audit purposes instead of deletion.","Must Have","2","[""US-001"",""US-002""]","[{""scenario"":""Successful deactivation of a standard user account"",""given"":""I am logged in as an 'Admin' and I am on the user management screen"",""when"":""I select an active user account and trigger the 'Deactivate' action (Archive in Odoo), then confirm the action"",""then"":""The system sets the user's status to 'Inactive', and the user is immediately unable to log in with their credentials.""},{""scenario"":""Admin attempts to deactivate their own account"",""given"":""I am logged in as an 'Admin' and I am viewing my own user record"",""when"":""I attempt to use the 'Deactivate' action for my own account"",""then"":""The 'Deactivate' action must be disabled, hidden, or result in an error message stating that self-deactivation is not permitted.""},{""scenario"":""Deactivated user's active session is terminated"",""given"":""A user is currently logged into the system in an active session"",""when"":""An 'Admin' deactivates that user's account from a separate session"",""then"":""The user's active session is immediately invalidated, and upon their next action, they are forcefully logged out.""}]","[""Leverage Odoo's standard 'active' field and 'Archive' action on the 'res.users' model."",""Implement a check to prevent an admin from archiving their own user record."",""Investigate and implement a mechanism to immediately invalidate sessions for a deactivated user.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for self-deactivation prevention is implemented and passing."",""Security requirement for immediate session termination is validated."",""Audit trail logging for the status change is confirmed.""]"
"US-004","User and Access Management","Admin assigns a primary role to a user","Admin","As an Admin, I want to assign a single, predefined primary role (like Dispatch Manager, Finance Officer, or Driver) to a user account, so that I can efficiently manage access control and ensure each user has the appropriate permissions to perform their job duties according to the principle of least privilege.","Enforces a secure and manageable Role-Based Access Control (RBAC) system. Simplifies user onboarding and role changes, reduces the risk of unauthorized access, and ensures compliance with the principle of least privilege.","Must Have","2","[""US-001"",""US-070""]","[{""scenario"":""Assign a primary role to a user"",""given"":""I am logged in as an Admin and am viewing the user management form for an existing user."",""when"":""I select a primary role, for example 'Dispatch Manager', from the 'Primary Role' dropdown and save the user's record."",""then"":""The system successfully saves the change, assigns the user to the 'Dispatch Manager' security group, and their permissions are immediately updated.""},{""scenario"":""Role selection is mutually exclusive"",""given"":""I am logged in as an Admin and am on the user management form."",""when"":""I interact with the 'Primary Role' field."",""then"":""The UI element must only allow the selection of a single role, enforcing Business Rule BR-001.""}]","[""Define the four primary security groups in XML: Admin, Dispatch Manager, Finance Officer, Driver."",""Add a 'Selection' field for 'Primary Role' to the 'res.users' model."",""Override the 'write' method on 'res.users' to add the user to the selected group and remove them from other primary role groups.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for the role-switching logic are implemented and passing."",""Audit trail functionality for role changes is verified."",""E2E testing confirms permissions are correctly applied after a role change.""]"
"US-005","User and Access Management","Admin grants additional specific permissions to a user group","Admin","As an Admin, I want to grant specific, granular permissions (like 'read-only access to invoices') to a user group, so that I can customize access rights beyond the standard roles to meet unique operational needs and enforce the principle of least privilege.","Provides the flexibility to tailor user access to specific business needs without creating numerous rigid roles. Enhances security by allowing adherence to the principle of least privilege.","Should Have","1","[""US-001"",""US-004""]","[{""scenario"":""Granting a new 'Read' permission to a standard role"",""given"":""I am logged in as an Admin, and a 'Dispatch Manager' user exists."",""when"":""I navigate to 'Settings > Users & Companies > Groups', select the 'Dispatch Manager' group, and add a new 'Read' access right for the 'Invoice' model."",""then"":""The 'Dispatch Manager' user, upon their next login or page refresh, can now access the Invoicing menu and view invoices in a read-only state.""},{""scenario"":""Revoking a previously granted permission"",""given"":""The 'Dispatch Manager' group has 'Read' access to the 'Invoice' model."",""when"":""I, as an Admin, remove the 'Read' access right for the 'Invoice' model from the 'Dispatch Manager' group."",""then"":""The 'Dispatch Manager' user immediately loses access to the Invoicing menu and can no longer view any invoices.""}]","[""Ensure all custom TMS models are correctly registered and appear in the Access Rights management UI."",""Verify that Odoo's standard group management UI is accessible and functional for an Admin user."",""Integrate audit logging for changes to 'res.groups' or 'ir.model.access'.""]","[""All acceptance criteria are met and validated."",""Manual E2E testing confirms permissions are applied and revoked correctly."",""Security testing confirms audit logging of permission changes."",""User documentation on customizing roles is updated.""]"
"US-006","Core Module Setup & Master Data","Admin creates a new vehicle record","Admin","As an Admin, I want to create a new vehicle record by entering its key details like truck number, model, capacity, and ownership status, so that the vehicle is officially registered in the system and can be managed, assigned to trips, and tracked for operational and financial purposes.","Establishes the foundational master data for the vehicle fleet, enabling core functionalities like trip assignment, expense tracking, and operational reporting.","Must Have","3","[""US-001""]","[{""scenario"":""Successful creation of a new vehicle record"",""given"":""I am logged in as an Admin and am on the 'Vehicles' list view"",""when"":""I click the 'Create' button, fill in all mandatory fields (Truck Number, Model, Capacity) with valid and unique data, and click 'Save'"",""then"":""A new vehicle record is successfully created in the system, and its status defaults to 'Active'.""},{""scenario"":""Attempt to create a vehicle with a duplicate Truck Number"",""given"":""A vehicle with the Truck Number 'KA01AB1234' already exists"",""when"":""I attempt to create a new vehicle and enter 'KA01AB1234' in the Truck Number field and click 'Save'"",""then"":""The system prevents the record from being saved and displays a clear error message stating 'Truck Number must be unique'.""},{""scenario"":""Attempt to create a vehicle with an invalid Truck Number format"",""given"":""I am on the 'Create Vehicle' form"",""when"":""I enter 'INVALID-FORMAT' into the Truck Number field and attempt to save"",""then"":""The system prevents the save action and displays a validation error indicating the format is incorrect.""}]","[""Define the `tms.vehicle` Odoo model with all fields from REQ-1-200."",""Implement `_sql_constraints` for the `truck_number` uniqueness (REQ-1-900)."",""Create the form and list views (XML) for the `tms.vehicle` model."",""Create the menu item and action window to make the feature accessible."",""Implement a regex-based validation for the Indian vehicle registration number format.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for model constraints (uniqueness, format) are implemented and passing."",""E2E test for vehicle creation is automated."",""UI is confirmed to be responsive and meets accessibility standards.""]"
"US-007","Core Module Setup & Master Data","Admin edits an existing vehicle record","Admin","As an Admin, I want to edit the details of an existing vehicle record, so that I can ensure all vehicle information is accurate and up-to-date, which is critical for operational planning, compliance, and financial reporting.","Ensures data integrity for the vehicle fleet, which is foundational for accurate trip planning, compliance tracking, and operational reporting.","Must Have","2","[""US-006"",""US-025""]","[{""scenario"":""Successfully edit and save a vehicle record"",""given"":""I am an 'Admin' user viewing the form for an existing vehicle"",""when"":""I modify one or more fields (e.g., change 'Capacity' from 20 to 25) and click 'Save'"",""then"":""The system successfully saves the changes, and the updated information is immediately visible.""},{""scenario"":""Attempt to save with a duplicate Truck Number"",""given"":""I am an 'Admin' user editing vehicle 'V-001', and another vehicle 'V-002' already exists with the Truck Number 'KA01AB1234'"",""when"":""I change the 'Truck Number' of 'V-001' to 'KA01AB1234' and click 'Save'"",""then"":""The system must prevent the save operation and display a clear error message that the truck number must be unique.""},{""scenario"":""Audit trail is created upon successful edit"",""given"":""The audit trail feature is active"",""when"":""I successfully change a tracked field and save the record"",""then"":""The system must create an immutable audit log entry that records the change.""}]","[""Ensure the form view for `tms.vehicle` is configured for editing."",""Verify that Odoo's standard 'Edit' and 'Save' functionality works as expected."",""Ensure uniqueness and format validations are triggered on the 'write' method, not just 'create'."",""Integrate with the audit trail mechanism by inheriting `mail.thread`.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for validations on 'write' are implemented and passing."",""Audit trail generation is confirmed to be working as expected."",""Security is verified to ensure only authorized users can edit.""]"
"US-008","Core Module Setup & Master Data","Admin sets a vehicle's status to 'Active' or 'Inactive'","Admin","As an Admin, I want to set the status of a vehicle to 'Active' or 'Inactive', so that I can control which vehicles are available for new trip assignments while preserving the records of retired or unavailable vehicles for historical reporting.","Improves data integrity by preventing the assignment of unavailable vehicles, enhances operational efficiency by simplifying selection lists for dispatchers, and ensures complete historical data is retained.","Must Have","1","[""US-006"",""US-027""]","[{""scenario"":""Admin deactivates an available vehicle"",""given"":""I am an Admin viewing an 'Active' vehicle record not assigned to any ongoing trips"",""when"":""I change the vehicle's status to 'Inactive' (Archive) and save"",""then"":""The vehicle's status is saved as 'Inactive', and it no longer appears in the list of selectable vehicles when creating a new trip.""},{""scenario"":""Attempting to deactivate a vehicle assigned to an active trip"",""given"":""I am an Admin viewing a vehicle currently assigned to a trip with a status of 'Assigned' or 'In-Transit'"",""when"":""I attempt to change the vehicle's status to 'Inactive' and save"",""then"":""The system prevents the status change and displays a user-friendly error message.""}]","[""Use Odoo's standard 'active' boolean field on the `tms.vehicle` model."",""Implement a server-side constraint to check for active trips before allowing deactivation."",""Apply a domain filter `[('active', '=', True)]` to the vehicle selection field on the trip form.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for the 'active trip' constraint is implemented and passing."",""Integration testing confirms the vehicle selection list on the trip form is correctly filtered.""]"
"US-009","Core Module Setup & Master Data","Admin attaches a document with an expiry date to a vehicle record","Admin","As an Admin, I want to upload vehicle-specific documents (like Insurance, RC), categorize them, and set their expiry dates, so that I can maintain a centralized, digital record of all compliance documents and enable the system to generate timely renewal alerts.","Ensures legal and regulatory compliance by tracking critical vehicle documents, preventing fines and operational downtime. Centralizes documentation for easy access and auditing.","Must Have","3","[""US-006""]","[{""scenario"":""Successfully upload a new, valid document to a vehicle"",""given"":""I am an Admin viewing the form for an existing vehicle"",""when"":""I add a document, select a 'Document Type', choose a future 'Expiry Date', upload a valid file (PDF, JPG, PNG under 5MB), and 'Save'"",""then"":""The document is successfully uploaded and associated with the vehicle record, appearing in the list of documents for that vehicle.""},{""scenario"":""Attempt to upload a file with an unsupported format or size"",""given"":""I am an Admin on the 'Add Document' form"",""when"":""I attempt to upload a file that is a .zip file or is larger than 5MB"",""then"":""The system rejects the file and displays a user-friendly error message specifying the allowed types and size limit.""}]","[""Create a `tms.vehicle.document` model with fields for type, expiry date, and a binary/attachment field."",""Add a One2many field on the `tms.vehicle` model to link to the documents."",""Implement validation for file type and size on the attachment field."",""Ensure Odoo's filestore is configured to use Amazon S3.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Integration testing confirms files are correctly stored in and retrieved from the S3 bucket."",""Security testing confirms file access is restricted to authorized users.""]"
"US-011","Core Module Setup & Master Data","Admin creates a new driver record by extending an HR employee","Admin","As an Admin, I want to create a new driver record by adding driver-specific details (like license information) to an existing HR employee record, so that I can properly onboard drivers into the TMS, ensure compliance, and make them available for trip assignments.","Enables the creation of a compliant and operational driver pool, which is fundamental for trip assignment and management. Supports compliance by tracking license validity.","Must Have","2","[]","[{""scenario"":""Successfully designate an existing HR employee as a driver"",""given"":""I am an Admin on the form view of an 'hr.employee' record"",""when"":""I enable a flag 'Is a Driver', enter a valid 'License Number' and a future 'License Expiry Date', and save"",""then"":""The system saves the record, and this employee now appears in the list of available drivers for trip assignments.""},{""scenario"":""Driver-specific fields are hidden for non-driver employees"",""given"":""I am an Admin viewing the form of an 'hr.employee' record"",""when"":""The 'Is a Driver' flag is not enabled"",""then"":""The fields for 'License Number', 'License Expiry Date', etc., are not visible on the form.""}]","[""Inherit the `hr.employee` model to add driver-specific fields as per REQ-1-203."",""Inherit the `hr.employee` form view to add a new tab or section for TMS information."",""Use the `attrs` attribute in the view XML to conditionally show/hide the TMS section based on the 'Is a Driver' flag.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Integration testing ensures the new driver is available for trip assignment."",""Security rules restrict editing of driver fields to Admins.""]"
"US-012","Core Module Setup & Master Data","Admin adds and manages driver license details and expiry date","Admin","As an Admin, I want to add and edit a driver's license number and license expiry date on their employee record so that I can maintain accurate compliance records, enable automated expiry alerts, and ensure the system can prevent drivers with expired licenses from being assigned to trips.","Enables enforcement of critical business rules, supports compliance, and provides data for the automated license expiry alert system.","Must Have","1","[""US-011""]","[{""scenario"":""Successfully add license details to a driver record"",""given"":""I am an Admin viewing a driver's employee record"",""when"":""I enter a valid 'License Number', select a future date in the 'License Expiry Date' field, and save"",""then"":""The system saves the record without errors, and the new data is displayed.""},{""scenario"":""System prevents saving with a past expiry date"",""given"":""I am an Admin editing a driver's record"",""when"":""I attempt to save the record after selecting a date in the past for the 'License Expiry Date'"",""then"":""The system must prevent the save and display a validation error message, such as 'License expiry date cannot be in the past.'""}]","[""Add 'license_number' (Char) and 'license_expiry_date' (Date) fields to the `hr.employee` model extension."",""Add the fields to the 'TMS Driver Information' section of the employee form view."",""Implement an `@api.constrains` in Python to validate the expiry date.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for the expiry date constraint is implemented and passing."",""Security rules are verified to restrict editing to Admins.""]"
"US-014","Core Module Setup & Master Data","Admin sets a driver's status to 'Active' or 'Inactive'","Admin","As an Admin, I want to change a driver's status between 'Active' and 'Inactive' so that I can accurately manage the pool of available drivers and prevent unavailable drivers from being assigned to new trips.","Ensures operational accuracy by preventing assignments to unavailable drivers and preserves historical data for reporting.","Must Have","1","[""US-011"",""US-027""]","[{""scenario"":""Admin deactivates an available driver"",""given"":""I am an Admin viewing an 'Active' driver's record who is not on an ongoing trip"",""when"":""I change the driver's status to 'Inactive' (Archive) and save"",""then"":""The driver's status is saved as 'Inactive', and they no longer appear in the list of selectable drivers for new trips.""},{""scenario"":""Admin attempts to deactivate a driver with an active trip"",""given"":""I am an Admin viewing a driver assigned to an 'In-Transit' trip"",""when"":""I attempt to change that driver's status to 'Inactive'"",""then"":""The system must prevent the change and display an error message like 'Cannot deactivate a driver with an active trip.'""}]","[""Leverage the standard 'active' field on the `hr.employee` model."",""Implement a constraint or override the `write` method to check for active trips before allowing deactivation."",""Update the domain filter on the trip assignment field to only show active drivers.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for the active trip constraint is implemented and passing."",""Integration testing confirms the driver selection list on the trip form is correctly filtered.""]"
"US-015","Core Module Setup & Master Data","Admin creates a new customer record","Admin","As an Admin, I want to create a new customer record by entering their essential business details, including name, billing address, GSTIN, and contact information, so that the new customer is available for trip planning, accurate invoicing, and maintaining a centralized client database.","Enables new business by onboarding clients into the system. Ensures data accuracy for logistics and financial operations.","Must Have","2","[]","[{""scenario"":""Successful creation of a new customer with valid data"",""given"":""The Admin is on the Customer management screen"",""when"":""The Admin clicks 'Create', fills in all mandatory fields with valid data, and clicks 'Save'"",""then"":""The system successfully creates a new customer record with a default 'Active' status.""},{""scenario"":""Attempt to save a new customer with an invalid GSTIN format"",""given"":""The Admin is on the new customer creation form"",""when"":""The Admin enters a GSTIN that does not match the standard Indian format and attempts to save"",""then"":""The system prevents the record from being saved and displays an error message next to the GSTIN field.""}]","[""Inherit the `res.partner` model to add TMS-specific logic."",""Implement an `@api.constrains` on the `vat` (GSTIN) field to validate its format using a regex."",""Ensure the standard Odoo customer creation UI is accessible and configured with any necessary TMS fields.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for GSTIN validation logic is written and passing."",""Integration test confirms the extended `res.partner` model functions correctly."",""Security check confirms access is restricted to authorized roles.""]"
"US-019","Core Module Setup & Master Data","Admin creates and manages pre-defined transportation routes","Admin","As an Admin, I want to create and manage a master list of pre-defined transportation routes, including a name, source, destination, standard distance, and estimated transit time, so that Dispatch Managers can quickly select a standard route during trip creation.","Improves operational efficiency by reducing manual data entry for trip creation. Enhances data accuracy and consistency by standardizing common routes.","Must Have","2","[""US-001""]","[{""scenario"":""Admin successfully creates a new pre-defined route"",""given"":""The user is logged in as an 'Admin' and has navigated to the 'Routes' management screen"",""when"":""The user fills in all mandatory fields ('Route Name', 'Source', 'Destination', 'Standard Distance') with valid data"",""then"":""The system saves the new route record to the database and it appears in the list.""},{""scenario"":""System prevents route creation with missing mandatory information"",""given"":""The user is on the new route creation form"",""when"":""The user attempts to save the route without providing a 'Route Name', 'Source', or 'Destination'"",""then"":""The system prevents the record from being saved and displays a validation message.""}]","[""Create a new `tms.route` Odoo model with all fields from REQ-1-206."",""Implement model constraints for uniqueness of 'Route Name' and positive 'Standard Distance'."",""Create the standard form and list views, menu item, and action window for the `tms.route` model."",""Configure access rights to restrict management to the 'Admin' role.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests covering model constraints are implemented and passing."",""Security testing confirms that non-Admin roles cannot access the functionality.""]"
"US-020","Core Module Setup & Master Data","Admin manages the list of material types","Admin","As an Admin, I want to create, view, edit, and deactivate material types, so that I can ensure data consistency across the system for trip creation and reporting.","Ensures data integrity for accurate reporting and improves efficiency in the trip creation process by providing a predefined list of materials.","Must Have","1","[""US-001""]","[{""scenario"":""Admin creates a new material type successfully"",""given"":""The user is logged in as an Admin and is on the 'Material Types' list view"",""when"":""The user clicks 'New', enters a unique name (e.g., 'Industrial Solvents'), and clicks 'Save'"",""then"":""The system creates a new, active material type record, and it appears in the list view.""},{""scenario"":""System prevents creation of a material type with a duplicate name"",""given"":""A material type with the name 'Cement Bags' already exists"",""when"":""The Admin attempts to create a new material type and enters 'Cement Bags' as the name"",""then"":""The system prevents saving and displays a validation error message.""},{""scenario"":""Deactivated material types are not available for selection on new trips"",""given"":""The material type 'Obsolete Part' has been archived"",""when"":""A Dispatch Manager creates a new trip and accesses the 'Material' selection field"",""then"":""The 'Obsolete Part' material type does not appear in the list of available options.""}]","[""Create a simple `tms.material` Odoo model with a 'name' field and a unique constraint."",""Create standard form and list views, a menu item, and an action window."",""Configure access rights to restrict management to the 'Admin' role.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for model constraints are implemented and passing."",""Integration testing with the Trip model's selection field is completed."",""Access control rules are implemented and verified.""]"
"US-021","GPS Tracking & Real-Time Monitoring","Admin defines a geofence for a key location","Admin","As an Admin, I want to create, view, and manage named geographical boundaries (geofences) on a map for key locations like customer sites and warehouses, so that the system can automatically detect and trigger alerts when a vehicle enters or exits these areas.","Enables automated, real-time monitoring of vehicle movements at critical locations, improving operational efficiency, security, and providing data for performance analysis.","Should Have","8","[""US-029""]","[{""scenario"":""Admin successfully creates a new polygonal geofence"",""given"":""The Admin is logged in and has navigated to the 'Geofence Management' screen"",""when"":""The Admin clicks 'Create', enters a unique name, draws a closed polygon on the map, and clicks 'Save'"",""then"":""The system saves the geofence with its name and coordinates, and the new geofence appears in the list and is rendered on the map.""},{""scenario"":""Attempt to save a geofence with a duplicate name"",""given"":""A geofence named 'Main Depot' already exists"",""when"":""The Admin enters 'Main Depot' as the name for a new geofence and clicks 'Save'"",""then"":""The system prevents the save and displays a validation error.""},{""scenario"":""Non-Admin user attempts to access the geofence management page"",""given"":""A user with a 'Dispatch Manager' role is logged in"",""when"":""The user attempts to navigate to the geofence management URL"",""then"":""The system denies access and displays an 'Access Denied' error.""}]","[""Enable PostGIS extension on the PostgreSQL database."",""Create a `tms.geofence` model with a geospatial data type field."",""Develop a custom Odoo view component using a JavaScript library (e.g., Leaflet.js) for map drawing."",""Implement CRUD operations and validation rules in the Python backend."",""Configure strict access controls for the model and views.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for backend models and validation logic achieve >80% coverage."",""E2E tests for the geofence creation and editing flow are implemented and passing."",""Access control rules are verified to restrict access to Admins only.""]"
"US-025","Audit & Compliance","Admin views the immutable audit trail for critical data changes","Admin","As an Admin, I want to access and filter a detailed, immutable audit trail of all changes made to critical data records, so that I can ensure system security, enforce accountability, and perform forensic analysis for compliance and troubleshooting.","Provides a tamper-proof record of all critical system activities, enhancing security, enabling forensic analysis, ensuring user accountability, and supporting regulatory compliance audits.","Must Have","5","[""US-001"",""US-026"",""US-037"",""US-039""]","[{""scenario"":""Audit log entry for an 'Update' action shows old and new values"",""given"":""A user has changed the status of an Invoice from 'Draft' to 'Posted'"",""when"":""I view the details of the corresponding 'Update' log entry in the audit trail"",""then"":""I should clearly see the field that was changed ('status'), the 'Old Value' ('Draft'), and the 'New Value' ('Posted').""},{""scenario"":""Admin attempts to modify or delete an audit log entry"",""given"":""I am logged in as an Admin and am viewing the audit trail"",""when"":""I attempt to edit or delete any log entry"",""then"":""The system must prevent the action, and no 'Edit' or 'Delete' options should be available.""}]","[""Inherit the `mail.thread` mixin on critical models (Trip, Invoice, Payment, User)."",""Add `tracking=True` to specific fields on these models that require auditing."",""Add the `oe_chatter` widget to the form views of the audited models."",""Configure access rights to ensure only Admins can view potentially sensitive logs, if needed.""]","[""All acceptance criteria are met and validated."",""Integration testing completed for all audited models."",""Security testing confirms the immutability of the logs (within Odoo's framework)."",""Performance testing ensures the logging mechanism adds minimal overhead to standard operations.""]"
"US-026","Trip Lifecycle Management","Dispatch Manager creates a new trip","Dispatch Manager","As a Dispatch Manager, I want to create a new trip record by selecting a customer, defining the route, and specifying the material details and rate, so that I can formally initiate a transport job and move it into the planning and assignment phase.","Initiates the primary revenue-generating workflow of the system. Enables formal planning, resource allocation, tracking, and subsequent invoicing for a transport job.","Must Have","5","[""US-015"",""US-019"",""US-020""]","[{""scenario"":""Successful trip creation with all valid manual inputs"",""given"":""I am a Dispatch Manager on the 'New Trip' form"",""when"":""I select an 'Active' customer, enter a Source and Destination, select a Material, enter a Weight, select a Rate Type, and enter a Rate value"",""then"":""The system successfully creates a new trip record with an initial status of 'Planned'.""},{""scenario"":""Attempt to save a trip with missing mandatory fields"",""given"":""I am on the 'New Trip' form"",""when"":""I attempt to save the form without selecting a Customer (or Source, or Destination)"",""then"":""The system prevents the record from being saved and displays a validation message.""}]","[""Create the `tms.trip` Odoo model with all necessary fields and relationships."",""Implement server-side validation rules (BR-006, BR-008)."",""Implement client-side `onchange` events for route selection and dynamic revenue calculation."",""Create the form, list, and kanban views for trips."",""Set up the menu item and window action.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for all business logic and validations are written and passing."",""E2E tests for the happy path and key error conditions are passing."",""UI is mobile-responsive and meets accessibility standards.""]"
"US-027","Trip Lifecycle Management","Dispatch Manager assigns an available vehicle and driver to a trip","Dispatch Manager","As a Dispatch Manager, I want to select an available vehicle and an available driver from filtered lists and assign them to a 'Planned' trip so that I can operationalize the trip and move it to the 'Assigned' status.","Enables the transition of a trip from planning to execution, ensures efficient and compliant resource allocation, and prevents operational errors.","Must Have","5","[""US-026"",""US-006"",""US-012""]","[{""scenario"":""Successful assignment of a valid vehicle and driver"",""given"":""I am a Dispatch Manager viewing a trip in 'Planned' status"",""when"":""I select an 'Active' vehicle with sufficient capacity and an 'Active' driver with a valid license, and save"",""then"":""The trip's status changes from 'Planned' to 'Assigned'.""},{""scenario"":""Vehicle and driver selection lists are correctly filtered"",""given"":""I am a Dispatch Manager on the trip assignment form"",""when"":""I open the vehicle or driver selection dropdown"",""then"":""The lists MUST NOT include any resources that are 'Inactive', non-compliant (e.g., expired license), or currently on another 'In-Transit' trip.""},{""scenario"":""Attempt to assign a vehicle with insufficient capacity"",""given"":""I am a Dispatch Manager viewing a trip with a material weight of 25 Tons"",""when"":""I attempt to assign a vehicle with a capacity of only 20 Tons"",""then"":""The system must prevent the assignment and display an error message.""}]","[""Implement dynamic domain filters for the vehicle and driver selection fields on the trip form."",""Override the `write` method on `tms.trip` to perform server-side validation (capacity, license) and transition the state to 'Assigned'.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for domain filtering and validation logic are implemented and passing."",""Performance of the selection dropdowns is verified.""]"
"US-028","Trip Lifecycle Management","Dispatch Manager selects a pre-defined route during trip creation","Dispatch Manager","As a Dispatch Manager, I want to select a pre-defined route from a list when creating a new trip, so that the source, destination, and standard distance are automatically populated, saving time and reducing errors.","Increases operational efficiency by reducing manual data entry. Improves data accuracy and consistency by using standardized route information.","Should Have","1","[""US-019"",""US-026""]","[{""scenario"":""Select a pre-defined route and auto-populate trip details"",""given"":""I am a Dispatch Manager on the 'Create New Trip' form"",""when"":""I select a pre-defined route from the 'Route' selection field."",""then"":""The 'Source', 'Destination', and 'Standard Distance' fields on the trip form are automatically populated.""},{""scenario"":""Clear the route selection"",""given"":""I have selected a pre-defined route, and the fields have been auto-populated."",""when"":""I clear the selection in the 'Route' field."",""then"":""The 'Source', 'Destination', and 'Standard Distance' fields that were previously auto-populated must become empty.""}]","[""Add a Many2one field for 'Route' on the `tms.trip` model."",""Implement an `@api.onchange('route_id')` method to fetch data from the selected route and populate the other fields.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for the onchange logic is implemented and passing."",""Performance of the onchange event is verified to be under 200ms.""]"
"US-029","GPS Tracking & Real-Time Monitoring","Dispatch Manager views the real-time location of vehicles on a map","Dispatch Manager","As a Dispatch Manager, I want to see a real-time map displaying the current location of all my vehicles that are on 'In-Transit' trips so that I can monitor their progress and proactively identify potential delays.","Provides real-time operational awareness, enabling proactive management of logistics, improved on-time delivery rates, and enhanced customer service.","Must Have","8","[""US-027"",""US-049""]","[{""scenario"":""Map displays all 'In-Transit' vehicles upon loading"",""given"":""There are multiple trips with the status 'In-Transit', each with a vehicle with recent GPS data"",""when"":""I navigate to the 'Live Map' view"",""then"":""The map loads and displays a distinct marker for each 'In-Transit' vehicle at its last known location.""},{""scenario"":""Vehicle marker position updates in near real-time"",""given"":""I am viewing the 'Live Map' and an 'In-Transit' vehicle is moving"",""when"":""The system receives a new GPS location update for that vehicle"",""then"":""The corresponding marker on the map moves to the new location without a full page reload, meeting the 60-second latency requirement.""}]","[""Implement the GPS data ingestion pipeline (FastAPI microservice, RabbitMQ, Odoo consumer)."",""Add latitude/longitude fields to the `tms.vehicle` model."",""Create or extend an Odoo Map view for the `tms.trip` model."",""Implement a mechanism (e.g., Odoo Bus) to push location updates to the client-side map view.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Integration testing of the full data pipeline (mock GPS to Odoo DB to UI) is completed."",""Performance requirements for data latency and page load are verified."",""Security requirements for data access are validated.""]"
"US-030","Trip Lifecycle Management","Dispatch Manager resolves an 'On Hold' trip and resumes its journey","Dispatch Manager","As a Dispatch Manager, I want to be able to change a trip's status from 'On Hold' back to 'In-Transit' after providing a mandatory resolution comment, so that I can officially resume a delayed trip and maintain a clear audit trail of how disruptions were resolved.","Enables operational continuity by allowing paused trips to resume, minimizing delivery delays. Enhances accountability by creating an auditable log of disruption resolutions.","Must Have","2","[""US-050""]","[{""scenario"":""Successfully resuming an 'On Hold' trip"",""given"":""I am a 'Dispatch Manager' viewing a trip in 'On Hold' status"",""when"":""I click 'Resume Trip', enter a resolution comment, and confirm"",""then"":""The trip's status must change to 'In-Transit', and the comment must be logged in the trip's history (chatter).""},{""scenario"":""Attempting to resume a trip without a resolution comment"",""given"":""I am in the 'Resume Trip' dialog for an 'On Hold' trip"",""when"":""I attempt to confirm without entering a comment"",""then"":""The system must display a validation error, and the trip's status must remain 'On Hold'.""},{""scenario"":""Unauthorized user attempts to resume a trip"",""given"":""I am logged in as a 'Driver'"",""when"":""I view an 'On Hold' trip"",""then"":""The 'Resume Trip' button must not be visible or must be disabled.""}]","[""Create an Odoo wizard (TransientModel) to capture the resolution comment."",""Add a button to the trip form view, visible only when `state` is 'on_hold' and for the correct user group."",""Implement the server action in the wizard to update the trip state and post a message to the chatter.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for the server action are implemented and passing."",""E2E test confirms the correct UI behavior and role-based permissions.""]"
"US-031","Trip Lifecycle Management","Dispatch Manager cancels a trip","Dispatch Manager","As a Dispatch Manager, I want to cancel a trip at any stage before delivery and provide a mandatory reason, so that the system accurately reflects the trip's status, releases resources, and provides an audit trail for the cancellation.","Ensures data integrity, improves resource utilization by releasing assigned vehicles and drivers, and provides data for operational analysis.","Must Have","2","[""US-026"",""US-027"",""US-060""]","[{""scenario"":""Cancel an assigned trip with a valid reason"",""given"":""A Dispatch Manager is viewing a trip with status 'Assigned' or 'In-Transit'"",""when"":""The user clicks 'Cancel Trip', enters a mandatory reason, and confirms"",""then"":""The trip's status is updated to 'Canceled', the reason is logged, a notification is sent to the assigned driver, and the vehicle/driver are marked as 'Available'.""},{""scenario"":""Attempt to cancel a trip that is already delivered"",""given"":""A Dispatch Manager is viewing a trip with a status of 'Delivered' or 'Completed'"",""when"":""The user views the available actions"",""then"":""The 'Cancel Trip' action/button is not visible or is disabled.""}]","[""Create an Odoo wizard to capture the mandatory cancellation reason."",""Add a button to the trip form to launch the wizard, visible only for cancelable states."",""Implement the server action to change the state, log the reason, trigger a notification, and update resource status.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for state transitions and business logic are implemented and passing."",""Integration test for the end-to-end flow is passing.""]"
"US-032","Financial Management & Invoicing","Dispatch Manager views a queue of submitted expenses","Dispatch Manager","As a Dispatch Manager, I want to access a dedicated view that lists all submitted trip expenses awaiting my approval so that I can efficiently review and process them.","Streamlines the expense approval workflow, provides a control point for operational spending, and ensures timely reimbursement to drivers.","Must Have","1","[""US-053""]","[{""scenario"":""Viewing the list of pending expenses"",""given"":""I am a 'Dispatch Manager' and there are multiple expenses with the status 'Submitted'"",""when"":""I navigate to the 'Expense Approvals' menu item"",""then"":""I should see a list view containing only the expenses with the 'Submitted' status.""},{""scenario"":""Unauthorized access attempt"",""given"":""I am logged in as a 'Driver'"",""when"":""I attempt to access the 'Expense Approvals' menu item"",""then"":""The system must prevent access and display an 'Access Denied' error.""}]","[""Create a new Odoo menu item and action window for expense approvals."",""Configure the action window's domain to be `[('state', '=', 'submitted')]`."",""Create a tree/list view for the `tms.expense` model showing relevant columns."",""Configure security to restrict the menu item to manager roles.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""The new menu item and view are visible only to authorized user roles."",""The view's performance meets NFRs.""]"
"US-033","Financial Management & Invoicing","Dispatch Manager approves a submitted expense","Dispatch Manager","As a Dispatch Manager, I want to review and approve a submitted expense with a single action, so that I can validate its legitimacy and move it forward for reimbursement.","Ensures financial accuracy by validating trip-related costs before they impact profitability calculations and are sent for payment.","Must Have","2","[""US-032"",""US-053"",""US-070""]","[{""scenario"":""Successful approval of a submitted expense"",""given"":""I am a 'Dispatch Manager' viewing an expense with the status 'Submitted'"",""when"":""I click the 'Approve' button"",""then"":""The system must change the expense's status to 'Approved' and create an audit log entry.""},{""scenario"":""Financial Impact: Trip profitability is updated correctly"",""given"":""A trip has a known profitability, and a 'Submitted' expense of $50 exists for it"",""when"":""A Dispatch Manager approves the $50 expense"",""then"":""The trip's total 'Approved' expenses must be recalculated to include the new expense, and its 'Profitability' must be updated accordingly.""}]","[""Add an 'Approve' button to the `tms.expense` form header."",""Create a model method `action_approve` that changes the state to 'approved'."",""Ensure the computed field for trip profitability has a correct dependency on the expense state to trigger recalculation.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for the approval logic is implemented and passing."",""Integration test verifying the update to trip profitability is implemented and passing."",""Security requirements (RBAC) are validated.""]"
"US-034","Financial Management & Invoicing","Dispatch Manager rejects a submitted expense with a mandatory reason","Dispatch Manager","As a Dispatch Manager, I want to reject a submitted expense claim and be required to provide a reason, so that I can maintain financial control, enforce policy, and provide clear feedback to the driver.","Ensures financial accuracy by preventing invalid claims, enforces expense policies, creates an audit trail, and provides a feedback loop to drivers.","Must Have","2","[""US-032"",""US-053"",""US-060""]","[{""scenario"":""Rejecting an expense with a valid reason"",""given"":""I am a Dispatch Manager viewing a 'Submitted' expense"",""when"":""I click 'Reject', enter a mandatory reason, and confirm"",""then"":""The expense's status is updated to 'Rejected', the reason is saved, and a notification is sent to the driver.""},{""scenario"":""Attempting to reject an expense without providing a reason"",""given"":""I am in the rejection dialog for a 'Submitted' expense"",""when"":""I attempt to confirm rejection without entering a reason"",""then"":""The system must display a validation error message, and the expense's status must remain 'Submitted'.""}]","[""Create an Odoo wizard to capture the mandatory rejection reason."",""Add a 'Reject' button to the expense form header that launches the wizard."",""Implement the server action in the wizard to update the expense state, save the reason, and trigger a notification to the driver.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for the state change logic is implemented."",""Integration testing confirms notifications and financial calculations are correct."",""Security requirements are validated.""]"
"US-035","Financial Management & Invoicing","Dispatch Manager views the profitability of a single trip","Dispatch Manager","As a Dispatch Manager, I want to view the automatically calculated revenue, total approved expenses, and net profitability directly on the trip's detail page, so that I can immediately assess the financial performance of each trip.","Provides immediate visibility into the financial health of individual trips, enabling data-driven decisions to improve profitability and control costs.","Must Have","2","[""US-026"",""US-033""]","[{""scenario"":""Profitability calculation for a profitable trip"",""given"":""A Dispatch Manager is viewing a trip with a 'Total Revenue' of ₹50,000"",""when"":""The trip has 'Approved' expenses totaling ₹12,000"",""then"":""A profitability section on the trip form displays 'Total Revenue': ₹50,000, 'Total Approved Expenses': ₹12,000, and 'Profitability': ₹38,000.""},{""scenario"":""Role-based access control for profitability data"",""given"":""A user with the 'Driver' role is logged in"",""when"":""They view the details of their assigned trip"",""then"":""The entire profitability section is not visible.""}]","[""Add computed fields (`total_approved_expenses`, `profitability`) to the `tms.trip` model."",""The compute method must sum only expenses with `state == 'approved'`."",""Add the new fields to the trip form view."",""Use the `groups` attribute in the XML view to restrict visibility to non-driver roles.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for the computation logic is implemented and passing."",""Security requirements are validated by testing with different user roles.""]"
"US-037","Financial Management & Invoicing","Finance Officer generates a GST-compliant e-invoice for a completed trip","Finance Officer","As a Finance Officer, I want to generate a GST-compliant e-invoice for a completed trip so that I can bill the customer accurately and comply with government tax regulations.","Ensures compliance with GST laws, automates billing, reduces errors, and accelerates the payment cycle.","Must Have","13","[""US-015"",""US-026"",""US-052""]","[{""scenario"":""Successful e-invoice generation for a completed trip"",""given"":""I am a Finance Officer and a trip is in the 'Completed' state"",""when"":""I trigger the 'Generate E-Invoice' action"",""then"":""The system communicates with the GSP API, receives a valid IRN and QR code, updates the invoice and trip status to 'Invoiced', and makes the compliant PDF available.""},{""scenario"":""Attempting to generate an invoice for a non-completed trip"",""given"":""I am a Finance Officer and a trip is 'In-Transit'"",""when"":""I navigate to that trip record"",""then"":""The 'Generate Invoice' button is disabled or not visible.""},{""scenario"":""Asynchronous handling of GSP API timeouts"",""given"":""I have submitted an invoice for generation"",""when"":""The synchronous API call to the GSP times out"",""then"":""The system provides immediate feedback ('Processing'), adds the task to a background queue for retries, and updates the status asynchronously.""}]","[""Create a method to generate a draft `account.move` from a `tms.trip` record."",""Develop a Python client to integrate with the GSP API, fetching credentials from AWS Secrets Manager."",""Implement the sync/async fallback logic using Odoo's job queue for API submission."",""Override the QWeb invoice report template to include the IRN and QR code."",""Add fields to `account.move` to store IRN, QR code, and e-invoice status.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Integration tests with the GSP sandbox API are passing."",""The generated PDF is verified for compliance."",""Security review of API key handling is completed.""]"
"US-038","Financial Management & Invoicing","Finance Officer manually intervenes on a failed e-invoice","Finance Officer","As a Finance Officer, I want to be alerted to e-invoice failures, view the error reason, and retry the submission or mark it for manual handling, so I can ensure all invoices are compliant and sent without delay.","Ensures business continuity and GST compliance by providing a robust fallback mechanism for the critical e-invoicing process.","Must Have","5","[""US-037"",""US-060""]","[{""scenario"":""System flags invoice and alerts user after automated retries fail"",""given"":""An invoice submission has failed all automated retry attempts"",""when"":""The final retry fails"",""then"":""The invoice's status changes to 'E-Invoice Failed', a high-priority notification is sent to the 'Finance Officer' group, and the last error message is displayed on the invoice form.""},{""scenario"":""Finance Officer successfully retries a failed e-invoice submission"",""given"":""An invoice is in the 'E-Invoice Failed' state"",""when"":""The Finance Officer clicks the 'Retry E-Invoicing' button"",""then"":""The system initiates a new API call, and upon success, updates the invoice status to 'Invoiced' and populates the IRN data.""},{""scenario"":""Finance Officer manually processes an invoice"",""given"":""An invoice is in the 'E-Invoice Failed' state, and the IRN was generated externally"",""when"":""The Finance Officer clicks 'Mark as Manually Processed' and enters the IRN"",""then"":""The invoice status updates to 'Invoiced', the manually entered IRN is saved, and a note is logged in the chatter.""}]","[""Add a new state 'e_invoice_failed' to the `account.move` model."",""Add buttons ('Retry', 'Mark Manual') to the invoice form, visible only in the failed state."",""Implement the server-side logic for the retry and manual override actions."",""Integrate with the notification system to alert users on final failure.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit and integration tests for the failure and recovery flows are implemented."",""Security checks confirm actions are restricted to authorized roles.""]"
"US-039","Financial Management & Invoicing","Finance Officer records a payment against an invoice","Finance Officer","As a Finance Officer, I want to record partial or full payments received from a customer against a specific invoice, so that I can accurately track accounts receivable and maintain an up-to-date customer ledger.","Enables accurate tracking of accounts receivable and cash flow, which is critical for financial health monitoring.","Must Have","1","[""US-037""]","[{""scenario"":""Record a full payment against an invoice"",""given"":""I am viewing a 'Posted' invoice with an outstanding balance of ₹50,000"",""when"":""I click 'Register Payment' and confirm a payment of ₹50,000"",""then"":""The invoice's 'Amount Due' updates to ₹0, and the status changes to 'Paid'.""},{""scenario"":""Record a partial payment against an invoice"",""given"":""I am viewing a 'Posted' invoice with an outstanding balance of ₹50,000"",""when"":""I click 'Register Payment' and confirm a payment of ₹20,000"",""then"":""The invoice's 'Amount Due' updates to ₹30,000, and the status remains 'Posted' but indicates a partial payment.""}]","[""Leverage the standard Odoo 'Register Payment' wizard (`account.payment.register`)."",""Ensure the 'Register Payment' button is correctly placed on the TMS invoice form view."",""Configure access rights to ensure only the 'Finance Officer' role can perform this action.""]","[""All acceptance criteria are met and validated."",""E2E testing confirms the full and partial payment workflows."",""Role-based access controls are verified.""]"
"US-040","Financial Management & Invoicing","Finance Officer views a customer's ledger","Finance Officer","As a Finance Officer, I want to access a detailed, chronological ledger for any given customer, so that I can efficiently track their complete history of invoices and payments and determine their current outstanding balance.","Improves accounts receivable management and customer service by providing a single source of truth for a customer's financial history.","Must Have","3","[""US-037"",""US-039""]","[{""scenario"":""Ledger displays all relevant financial transactions chronologically"",""given"":""The customer ledger view is open for a customer with multiple invoices and payments"",""when"":""The view loads"",""then"":""All invoices (debits) and payments (credits) for that customer are displayed as line items, sorted by date, with a running balance.""},{""scenario"":""Ledger displays accurate summary financial totals"",""given"":""The customer ledger view is open"",""when"":""The view is loaded"",""then"":""A summary section is visible displaying 'Total Invoiced', 'Total Paid', and 'Outstanding Balance'.""}]","[""Leverage Odoo's standard 'Partner Ledger' report."",""Add a smart button on the `res.partner` form view to provide a direct link to the filtered ledger for that customer."",""Ensure access to this report is restricted to financial roles.""]","[""All acceptance criteria are met and validated."",""Performance of the ledger view for a customer with 1000+ transactions is verified."",""Security access rules are tested and confirmed.""]"
"US-041","Financial Management & Invoicing","Finance Officer adds a non-trip-related expense to a vehicle","Finance Officer","As a Finance Officer, I want to record non-trip-related expenses (like maintenance, insurance, or fines) and associate them with a specific vehicle, so that I can maintain a complete total cost of ownership for each vehicle.","Provides a complete financial picture of each vehicle's operational cost, enabling accurate calculation of vehicle-specific profitability and TCO.","Should Have","3","[""US-006""]","[{""scenario"":""Successfully create a new vehicle expense"",""given"":""I am a Finance Officer viewing a specific vehicle's record"",""when"":""I click 'Add Expense', select a type (e.g., 'Maintenance'), enter an amount, date, and save"",""then"":""A new vehicle expense record is created and linked to the correct vehicle.""},{""scenario"":""Expense is reflected in vehicle's history and reports"",""given"":""A new 'Maintenance' expense has been created for a vehicle"",""when"":""I generate the 'Vehicle Profitability Report' for that vehicle"",""then"":""The new expense must be correctly included in the total expenses calculation.""}]","[""Create a new `tms.vehicle.expense` model with relationships to `tms.vehicle`."",""Create form and list views for the new model."",""Add a One2many field on the `tms.vehicle` form to display these expenses."",""Update the 'Vehicle Profitability Report' query to include data from this new model.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Integration test verifies the expense is included in the profitability report."",""Security access controls are tested.""]"
"US-042","Alerts & Card Management","Finance Officer creates and manages records for FASTag and diesel cards","Finance Officer","As a Finance Officer, I want to create, view, and manage records for company-issued FASTag and diesel cards, so that I can maintain a centralized inventory of these financial instruments.","Centralizes management of critical financial instruments, improving data accuracy and providing the foundation for automated features like low-balance alerts.","Must Have","2","[""US-006""]","[{""scenario"":""Create a new FASTag card record"",""given"":""I am a 'Finance Officer' on the 'Card Management' screen"",""when"":""I click 'Create' and fill in the form with valid details for a new FASTag card, including a unique Card Number and Card Type"",""then"":""The system saves the new card record, and it appears in the list of cards.""},{""scenario"":""Attempt to create a card with a duplicate number"",""given"":""A card with the number '1234567890' already exists"",""when"":""I attempt to create a new card with the number '1234567890'"",""then"":""The system prevents saving and displays a validation error.""}]","[""Create a new `tms.card` model with fields for card number, type, provider, etc."",""Implement a unique constraint on the `card_number` field."",""Create standard Odoo list and form views."",""Configure access rights to restrict management to financial roles.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for the unique constraint is implemented and passing."",""Security requirements are validated.""]"
"US-043","Alerts & Card Management","Finance Officer manually updates a card's balance and low-balance threshold","Finance Officer","As a Finance Officer, I want to manually update the current balance and set a low-balance notification threshold for each card, so that I can proactively manage card funds and receive automated alerts.","Enables proactive management of prepaid card funds, preventing service disruptions that can delay trips.","Must Have","1","[""US-042""]","[{""scenario"":""Successfully update a card's balance and threshold"",""given"":""I am a Finance Officer viewing a card's form"",""when"":""I enter a new 'Current Balance' and a 'Low-Balance Threshold' and save"",""then"":""The system must save the new values.""},{""scenario"":""Updating balance below the threshold triggers an alert"",""given"":""I am viewing a card with a 'Low-Balance Threshold' set to 1000"",""when"":""I update the 'Current Balance' to 999 and save"",""then"":""The system must trigger the low-balance alert mechanism for this card.""}]","[""Add 'balance' and 'low_balance_threshold' fields to the `tms.card` model."",""Add validation to ensure fields are non-negative."",""Override the `write` method to check if the new balance is below the threshold and trigger the alert.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for validation and the alert trigger logic are implemented and passing."",""Integration with the alert mechanism is completed.""]"
"US-046","Driver Portal","Driver logs into the mobile-friendly web portal","Driver","As a Driver, I want to securely log into a simple, mobile-friendly web portal using my credentials, so that I can access my assigned trips, submit expenses, and update my status while on the go.","Enables drivers to access the system, which is the primary entry point for all field-based data capture, providing real-time operational visibility.","Must Have","5","[""US-001"",""US-004"",""US-047""]","[{""scenario"":""Successful login with valid credentials"",""given"":""A user with the 'Driver' role exists and is on the mobile-friendly login page"",""when"":""The driver enters their correct username and password and taps 'Log In'"",""then"":""The system validates the credentials and redirects the driver to their main portal dashboard.""},{""scenario"":""Login page responsiveness on mobile device"",""given"":""A user is accessing the login page"",""when"":""The page is viewed on a device with a screen width of 360px"",""then"":""All UI elements are clearly visible and usable without horizontal scrolling.""}]","[""Create a new Odoo web controller for the driver portal login page."",""Develop a custom OWL component for the login form, optimized for mobile."",""Securely integrate the form with Odoo's core authentication endpoint."",""Implement post-login redirection logic for the 'Driver' role.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""E2E automated tests for the login flow are created and passing."",""Feature has been successfully tested on representative iOS and Android devices."",""Security review confirms adherence to NFRs.""]"
"US-047","Driver Portal","Driver views their list of current and past trips","Driver","As a Driver, I want to view a clear, mobile-friendly list of my current and past trips, so that I can easily see my immediate assignments and review my work history.","Improves operational efficiency by providing drivers with immediate, clear access to their assignments, reducing communication overhead with dispatch.","Must Have","3","[""US-046"",""US-027""]","[{""scenario"":""Default view shows current trips"",""given"":""A Driver is logged into the mobile web portal and has trips with statuses 'Assigned' and 'In-Transit'"",""when"":""The driver navigates to the 'My Trips' page"",""then"":""A list of their 'Current' trips is displayed by default.""},{""scenario"":""Data is properly scoped to the logged-in driver"",""given"":""A Driver is logged in"",""when"":""They access the 'My Trips' page"",""then"":""The system must ensure that only trips explicitly assigned to that driver are displayed.""}]","[""Create a new controller endpoint to fetch trip data for the logged-in user."",""The controller must use a domain filter based on the user's employee ID to enforce data segregation."",""Develop an OWL component to display the list of trips, with tabs for 'Current' and 'Past'."",""Implement lazy loading/pagination for the 'Past Trips' list.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for the backend controller achieves >80% coverage."",""E2E test for the happy path and 'no trips' scenarios are implemented."",""Backend API endpoint is confirmed to be secure via record rules.""]"
"US-049","Driver Portal","Driver starts a trip from the mobile portal","Driver","As a Driver, I want to be able to mark a trip as 'In-Transit' when I begin my journey, so that the dispatch team is immediately aware that the delivery has started.","Provides real-time operational visibility to dispatchers, enables accurate transit time tracking, and triggers live GPS monitoring.","Must Have","2","[""US-027"",""US-046"",""US-047""]","[{""scenario"":""Driver successfully starts an assigned trip"",""given"":""I am a Driver viewing the details of a trip assigned to me with the status 'Assigned'"",""when"":""I tap the 'Start Trip' button and confirm"",""then"":""The system updates the trip's status to 'In-Transit'.""},{""scenario"":""Action is unavailable for trips not in 'Assigned' status"",""given"":""I am a Driver viewing a trip with a status other than 'Assigned'"",""when"":""I view the trip details"",""then"":""The 'Start Trip' button must not be visible or must be disabled.""}]","[""Add a 'Start Trip' button to the trip detail OWL component."",""Create a controller endpoint that handles the 'start trip' action."",""The controller must validate that the current user is the assigned driver and the trip is in the 'Assigned' state before updating the record."",""The controller should also log a 'Trip Start' event.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for the backend logic is implemented and passing."",""E2E test scenario for the happy path is automated."",""Security requirements (server-side authorization) are validated.""]"
"US-050","Driver Portal","Driver logs a trip event with an optional photo","Driver","As a Driver, I want to log specific events for my active trip, such as 'Accident' or 'Fueling', with an optional photo, so that I can maintain an accurate trip log and immediately inform the dispatch team of important updates or disruptions.","Provides real-time operational visibility into on-road events, enables faster response to critical incidents, and creates a detailed, auditable history for each trip.","Must Have","5","[""US-047"",""US-049"",""US-065""]","[{""scenario"":""Driver logs a non-critical event without a photo"",""given"":""I am a Driver with an active trip in 'In-Transit' status"",""when"":""I log an event of type 'Fueling' and submit without a photo"",""then"":""A new event record is created and associated with my trip, and the trip status remains 'In-Transit'.""},{""scenario"":""Driver logs a critical event with a photo, triggering a status change and alert"",""given"":""I am a Driver with an active trip in 'In-Transit' status"",""when"":""I log an event of type 'Accident' and attach a photo"",""then"":""A new event record is created with the photo, the trip's status automatically changes to 'On Hold', and a high-priority alert appears on the Admin/Manager dashboard.""}]","[""Create the `tms.trip.event` model."",""Develop an OWL component for the 'Log Event' form."",""Create a controller endpoint to receive the form data and file upload."",""Implement the business logic to conditionally change trip status and trigger alerts based on the event type (BR-005).""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit test for the status change logic is implemented."",""Integration testing of the form submission, status change, and alert generation is completed."",""UI is reviewed for mobile usability.""]"
"US-052","Driver Portal","Driver uploads a Proof of Delivery (POD)","Driver","As a Driver, I want to upload a Proof of Delivery (either a photo or a captured e-signature) and enter the recipient's name, so that I can formally confirm the delivery is complete, which updates the trip status to 'Delivered' and initiates the billing process.","Provides auditable proof of service completion, a prerequisite for customer invoicing. Provides real-time operational visibility to the back-office team.","Must Have","5","[""US-046"",""US-047"",""US-049""]","[{""scenario"":""Driver successfully uploads a POD photo"",""given"":""A Driver is viewing an 'In-Transit' trip"",""when"":""The Driver selects 'Upload POD', chooses 'Photo', selects an image, enters the recipient's name, and submits"",""then"":""The system uploads the photo, records the recipient and timestamp, changes the trip status to 'Delivered', and displays a success message.""},{""scenario"":""Driver successfully captures an e-signature POD"",""given"":""A Driver is viewing an 'In-Transit' trip"",""when"":""The Driver selects 'E-Signature', captures a signature, enters the recipient's name, and submits"",""then"":""The system converts the signature to an image, uploads it, records details, changes the trip status to 'Delivered', and displays a success message.""},{""scenario"":""Submission without a recipient name or POD"",""given"":""A Driver is on the POD submission screen"",""when"":""The Driver attempts to submit without a recipient's name or without a POD photo/signature"",""then"":""The system prevents submission and displays a clear validation error message.""}]","[""Develop an OWL component for the POD submission workflow."",""Integrate a JavaScript signature pad library for e-signature capture."",""Create a controller endpoint to handle the form data and file upload to Amazon S3."",""Implement the server-side logic to create the POD record and transition the trip state to 'Delivered'.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""E2E testing is completed for both photo and e-signature flows."",""UI is reviewed for mobile usability."",""Security review confirms secure file handling and access control.""]"
"US-053","Driver Portal","Driver submits a trip-related expense with receipt","Driver","As a Driver, I want to submit a trip-related expense through my mobile web portal by selecting the type, entering the amount, and uploading a receipt, so that I can get reimbursed and the company can track trip costs.","Enables accurate and timely tracking of trip expenditures, which is crucial for calculating trip profitability and managing driver reimbursements.","Must Have","5","[""US-046"",""US-047"",""US-032""]","[{""scenario"":""Successful submission of a standard expense (e.g., Toll)"",""given"":""I am a Driver viewing an 'In-Transit' trip"",""when"":""I navigate to 'Add Expense', select 'Toll', enter an amount, upload a receipt image, and 'Submit'"",""then"":""A new expense record is created with a 'Submitted' status, the receipt is stored, and a confirmation message is displayed.""},{""scenario"":""Attempt to submit with missing required fields"",""given"":""I am on the 'Add Expense' form"",""when"":""I leave the 'Amount' field blank and press 'Submit'"",""then"":""The system must prevent submission and display an inline validation error.""}]","[""Create the `tms.expense` Odoo model with all required fields."",""Develop an OWL component for the mobile expense submission form."",""Create a controller endpoint to handle the form data, file upload, and validation."",""Implement server-side logic to create the `tms.expense` record in the 'Submitted' state.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for validation logic are implemented and passing."",""Integration testing (form -> DB -> S3) is completed."",""UI is reviewed for mobile usability.""]"
"US-060","Alerts & Card Management","User receives in-app and email notifications for critical events","System User","As a System User, I want to receive timely notifications for important system events via an in-app notification center and email, so that I can stay informed and take prompt action on critical matters.","Improves operational responsiveness by proactively alerting users to critical events, enhances compliance, and increases efficiency.","Must Have","8","[""US-050"",""US-009"",""US-031""]","[{""scenario"":""Manager receives notification for a critical trip event"",""given"":""A Dispatch Manager is logged into the TMS"",""when"":""A driver logs a critical event (e.g., 'Accident')"",""then"":""The Dispatch Manager's in-app notification icon shows an unread count, and they receive an email with a direct link to the trip record.""},{""scenario"":""System handles email service failure"",""given"":""The external SMTP email service is unavailable"",""when"":""A notifiable event occurs"",""then"":""The in-app notification is still delivered successfully, and the system logs an error for the failed email delivery.""}]","[""Create a centralized notification service/helper in Python."",""Develop an OWL component for the in-app notification center."",""Integrate with Odoo's web bus (`bus.bus`) for real-time UI updates."",""Create extensible email templates for different notification types."",""Refactor various business logic points (e.g., event logging, cron jobs) to call the new notification service.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Integration testing is completed for async job processing and email generation."",""The OWL component for the notification center is implemented and approved."",""Developer documentation on how to add new notification types is created.""]"
"US-064","Dashboards & Reporting","Manager views the main dashboard with operational and financial KPIs","Manager (Admin or Dispatch Manager)","As a Manager, I want to view a real-time, consolidated dashboard with key operational and financial widgets, so that I can quickly assess the health of the business and identify immediate priorities.","Provides an at-a-glance overview of business health, enabling faster, data-driven decision-making and proactive identification of operational issues.","Must Have","8","[""US-006"",""US-026"",""US-037"",""US-053""]","[{""scenario"":""Vehicle Status widget displays correct data"",""given"":""I am viewing the main dashboard"",""when"":""The 'Vehicle Status' widget finishes loading"",""then"":""I see a pie chart correctly representing the proportion of all 'Active' vehicles in 'Available', 'On-Trip', and 'In-Maintenance' statuses.""},{""scenario"":""Clicking on a KPI card navigates to a relevant filtered list"",""given"":""The KPI cards are displayed"",""when"":""I click on the 'Delayed Trips' KPI card"",""then"":""I am navigated to the Trip list view, pre-filtered to show only trips that are 'In-Transit' and past their 'Expected Delivery Date'.""},{""scenario"":""Unauthorized user is denied access to the dashboard"",""given"":""I am a user logged in with the 'Driver' role"",""when"":""I attempt to navigate to the manager dashboard URL"",""then"":""I am shown an 'Access Denied' error page.""}]","[""Create a new Odoo `board` view for the dashboard."",""Develop Python methods to compute the data for each KPI and widget."",""Implement the necessary actions to handle click-through navigation to filtered lists."",""Configure security to restrict access to manager roles.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""Unit tests for all KPI calculation logic are implemented."",""Performance requirements (LCP < 3s) are verified."",""Dashboard is confirmed to be responsive on mobile viewports.""]"
"US-065","Dashboards & Reporting","Manager views and acknowledges critical alerts on the dashboard","Manager (Admin or Dispatch Manager)","As a Manager, I want to view a dedicated panel of critical system alerts on my dashboard and be able to acknowledge them, so that I can immediately identify and take action on urgent operational issues.","Improves operational responsiveness by centralizing critical information. Reduces risk by ensuring urgent issues are seen and acted upon promptly.","Must Have","5","[""US-064"",""US-050"",""US-078"",""US-081""]","[{""scenario"":""Display of a new critical trip event alert"",""given"":""I am a Manager viewing the dashboard, and a driver has just logged a critical event ('Accident')"",""when"":""The dashboard loads or updates"",""then"":""The 'Critical Alerts' panel must display a new, unacknowledged alert with details about the event.""},{""scenario"":""Acknowledging a critical alert"",""given"":""I am viewing an unacknowledged alert in the 'Critical Alerts' panel"",""when"":""I click the 'Acknowledge' button for that alert"",""then"":""The alert's visual state changes to 'acknowledged', and an audit entry is created.""},{""scenario"":""Alert panel updates without full page reload"",""given"":""I have the dashboard open and visible"",""when"":""A new critical event is triggered elsewhere in the system"",""then"":""The new alert must appear in the 'Critical Alerts' panel within 15 seconds without a manual refresh.""}]","[""Create a `tms.alert` model to store alert information."",""Develop a custom OWL component for the 'Critical Alerts' panel."",""The component will fetch data from a controller that queries the `tms.alert` model."",""Implement real-time updates using Odoo's bus system."",""Create a controller endpoint for the 'Acknowledge' action.""]","[""All acceptance criteria are met and validated."",""Code is peer-reviewed."",""An E2E automated test for the primary success scenario is created and passing."",""The performance impact on dashboard loading is measured and acceptable."",""Security audit trail for acknowledgment is confirmed.""]"
"US-070","Audit & Compliance","System Enforces Role-Based Access Control (RBAC) for All Data Models","System Administrator","As a System Administrator, I want the system to strictly enforce data access and modification rights based on a user's assigned role, so that sensitive company data is protected and each user can only perform actions relevant to their job function.","Ensures data security and confidentiality, enforces the principle of least privilege, prevents unauthorized actions, and reduces the risk of user error.","Must Have","8","[""US-004"",""US-026"",""US-037""]","[{""scenario"":""Dispatch Manager has operational access only"",""given"":""A user is logged in with the 'Dispatch Manager' role"",""when"":""The user accesses the system"",""then"":""The user has full CRUD permissions on Trip records, but is restricted from financial and admin functions like invoicing or user management.""},{""scenario"":""Finance Officer has financial access only"",""given"":""A user is logged in with the 'Finance Officer' role"",""when"":""The user accesses the system"",""then"":""The user has full CRUD permissions on Invoices and Payments, but is restricted from operational functions like creating or dispatching trips.""},{""scenario"":""Driver has restricted, personal access (Record-Level Security)"",""given"":""A user is logged in with the 'Driver' role"",""when"":""The user navigates to the list of Trips"",""then"":""The user can ONLY see Trip records where they are the assigned driver.""}]","[""Define all model-level access rights in `security/ir.model.access.csv`."",""Create XML files with `ir.rule` definitions to implement record-level security, especially for the Driver role."",""Use the `groups` attribute in XML views to control the visibility of fields and buttons for different roles.""]","[""All acceptance criteria are met and validated for all defined roles."",""Code for security groups, access rights, and record rules is implemented and peer-reviewed."",""Automated integration tests are written to verify key access restrictions."",""A manual testing cycle has been completed by logging in as each user type.""]"
"US-089","Data Migration","Admin executes a one-time data migration from the legacy system","Admin","As an Admin, I want to execute a well-defined process with supporting scripts to migrate key master data and open financial transactions from our legacy system into the new TMS, so that the system is populated with essential business data at go-live.","Enables business continuity by populating the new TMS with critical operational data, avoiding data loss and eliminating the need for manual re-entry.","Must Have","13","[""US-006"",""US-011"",""US-015"",""US-037""]","[{""scenario"":""Successful migration of active customer master data"",""given"":""A clean CSV file containing active customers is available"",""when"":""The Admin executes the customer migration process"",""then"":""All customer records from the file are created in the Odoo 'res.partner' model, and the post-migration validation report shows matching record counts.""},{""scenario"":""Migration script handles records with missing mandatory data"",""given"":""A source CSV file where a record is missing a mandatory field"",""when"":""The Admin executes the relevant migration script"",""then"":""The script skips the invalid record, logs a detailed error for it, and successfully processes all other valid records.""},{""scenario"":""Migration process is idempotent"",""given"":""The customer migration process has already been run once successfully"",""when"":""The Admin re-runs the exact same customer migration process"",""then"":""No duplicate customer records are created in the system.""}]","[""Develop Python scripts using Pandas for data cleansing and transformation of legacy CSV extracts."",""Develop Python scripts that use the Odoo ORM to load the transformed data into the target database."",""Ensure the loading scripts respect the correct data dependency order (e.g., customers before invoices)."",""Create a master orchestration script to run the entire ETL process.""]","[""All acceptance criteria are met and validated in a staging environment."",""Migration scripts are code-reviewed and merged."",""A full end-to-end migration dry-run has been successfully completed in staging."",""A detailed runbook for executing the migration in production is created and peer-reviewed.""]"
"US-090","Data Migration","Admin validates migrated data in a staging environment","Admin","As an Admin, I want to execute a dry-run of the data migration in a staging environment and receive a comprehensive validation report, so that I can verify data integrity and identify issues before the production cutover.","Mitigates the significant business risk of data loss, corruption, or a failed go-live. Ensures business continuity by verifying that all critical data is accurately transferred.","Must Have","8","[""US-089""]","[{""scenario"":""Validation report shows matching record counts for master data"",""given"":""The migration dry-run has been successfully executed"",""when"":""The Admin reviews the generated validation report"",""then"":""The report shows identical counts for 'active Customers', 'all Vehicles', and 'active Drivers' between the source data and the target staging database.""},{""scenario"":""Validation report shows successful financial reconciliation"",""given"":""The migration and validation process has been successfully executed"",""when"":""The Admin reviews the validation report"",""then"":""The report shows the sum of all open invoice balances from the source data matches the sum of all outstanding balances in the staging TMS.""},{""scenario"":""Validation report identifies data transformation errors"",""given"":""A legacy data dump contains records that violate the new system's validation rules"",""when"":""The migration and validation process is executed"",""then"":""The validation report must list the specific records that failed to migrate, along with a reason for the failure.""}]","[""Develop a Python script that connects to the Odoo database and queries data post-migration."",""The script will also read the source CSVs to calculate source aggregates."",""The script will compare source and target counts and financial totals."",""The script will output a structured, human-readable report file (CSV or text).""]","[""All acceptance criteria are met and validated."",""Migration validation scripts are code-reviewed and merged."",""A successful dry-run has been demonstrated to stakeholders using the full legacy dataset."",""The Admin user has formally signed off on the process and its results.""]"