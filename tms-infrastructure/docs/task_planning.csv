"task_id","title","description","type","status","priority","assignee","reporter","due_date","estimated_hours","story_points","labels","sprint","sprint_goal","epic","epic_id","project","parent_id","dependencies","skills_required","complexity","risk_level","acceptance_criteria","definition_of_done","created_at","updated_at","sprint_start_date","sprint_end_date","capacity_allocation","collaboration_required","external_dependencies","testing_requirements","deployment_notes","business_value"
"TASK-164","[IaC] Design and Document AWS Infrastructure Architecture","Create architectural diagrams and documentation for the AWS environment, detailing the VPC layout, EKS configuration, data store placement, and security group interactions.","Task","Sprint Backlog","Critical","sre.engineer@tms.com","project.manager@tms.com","2024-11-12","12","8","aws,terraform,architecture,iac","Sprint 1","Establish the complete cloud infrastructure and the core Odoo application skeleton, including all master data models and RBAC.","Infrastructure, CI/CD & Operations","EPIC-008","Transport Management System","US-100","","AWS,Terraform,System Design","High","Medium","Diagrams are created and reviewed; Security aspects are documented.","Architectural review sign-off completed.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-11-04","2024-11-15","100%","Lead Architect","","Architectural review","Prerequisite for all other IaC tasks.","Provides the blueprint for a reliable and scalable production environment."
"TASK-005","[Backend] Create Odoo Module Structure and Manifest","Initialize the `tms_management` addon with standard directories and create `__manifest__.py` file declaring dependencies (`hr`, `account`, `web_map`, `queue_job`).","Task","Sprint Backlog","Critical","odoo.dev1@tms.com","project.manager@tms.com","2024-11-05","3","1","odoo,backend,setup","Sprint 1","Establish the complete cloud infrastructure and the core Odoo application skeleton, including all master data models and RBAC.","Core System & Odoo Foundation","EPIC-001","Transport Management System","US-001","","Odoo","Low","Low","Module can be installed in a fresh Odoo 18 instance without errors.","Successful module installation in a test Odoo instance.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-11-04","2024-11-15","100%","","","Installation test","First task for the Odoo addon.","Creates the foundational structure for all subsequent Odoo development."
"TASK-001","[Backend] Create Core RBAC Security Groups XML","Create `tms_management/security/tms_security.xml` and define the four primary security groups (Admin, Dispatch Manager, Finance Officer, Driver).","Task","Sprint Backlog","Critical","odoo.dev1@tms.com","project.manager@tms.com","2024-11-06","3","2","odoo,backend,security,rbac","Sprint 1","Establish the complete cloud infrastructure and the core Odoo application skeleton, including all master data models and RBAC.","Core System & Odoo Foundation","EPIC-001","Transport Management System","US-004","TASK-005","Odoo,XML","Low","Low","The four groups are visible and assignable under 'Settings > Users & Companies > Groups'.","Manual verification in Odoo UI and successful module installation.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-11-04","2024-11-15","100%","","","Manual verification","Foundational for all security-related features.","Establishes the core roles for the Role-Based Access Control system."
"TASK-006","[Backend] Implement Base Model Inheritance for Customer & Driver","Extend `res.partner` for Customer and `hr.employee` for Driver. Add boolean flags and driver-specific fields as per REQ-1-012, REQ-1-203.","Task","Sprint Backlog","Critical","odoo.dev2@tms.com","project.manager@tms.com","2024-11-08","5.2","3","odoo,backend,datamodel","Sprint 1","Establish the complete cloud infrastructure and the core Odoo application skeleton, including all master data models and RBAC.","Core System & Odoo Foundation","EPIC-001","Transport Management System","US-001","TASK-005","Odoo,Python","Low","Low","The new fields are added to `res_partner` and `hr_employee` tables in the database after module installation.","Database schema inspection and ORM access in an Odoo shell.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-11-04","2024-11-15","100%","","","Schema inspection","Required for customer and driver master data features.","Creates the data structure for core TMS entities within the Odoo framework."
"TASK-026","[Backend] Implement the Core Trip Workflow (Create, Assign, Cancel)","Implement the `tms.trip` model, views, and core business logic for trip creation, assignment, and cancellation, including all related validations (license, capacity) and status transitions.","Task","Sprint Backlog","Critical","odoo.dev1@tms.com","project.manager@tms.com","2024-11-29","60.4","12","odoo,backend,workflow,trip","Sprint 2","Implement the core trip workflow (Create, Assign, Cancel) and vehicle document management. Establish the CI pipeline.","Trip Lifecycle Management","EPIC-003","Transport Management System","US-026","EPIC-002","Odoo,Python,XML","High","Medium","A Dispatch Manager can create a trip, assign resources with validation, and cancel it. The trip status machine works as specified for these stages.","All related user stories (US-026, US-027, US-031) are completed and pass QA.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-11-18","2024-11-29","100%","QA Engineer","","Unit, Integration, E2E","First major piece of business logic.","Delivers the first usable slice of the core business workflow."
"TASK-043","[DevOps] Configure GitHub Actions CI Pipeline","Create the GitHub Actions workflow file (`.github/workflows/ci.yml`) to automatically run Flake8, Black, isort, and the Pytest suite (including coverage checks) on every pull request.","Task","Sprint Backlog","Critical","sre.engineer@tms.com","project.manager@tms.com","2024-11-22","20","5","ci,github-actions,devops,qa","Sprint 2","Implement the core trip workflow (Create, Assign, Cancel) and vehicle document management. Establish the CI pipeline.","Infrastructure, CI/CD & Operations","EPIC-008","Transport Management System","US-101","","GitHub Actions,YAML,Pytest,Docker","Medium","Low","A PR with failing tests fails the CI check; a valid PR passes. The 80% coverage gate is enforced.","The CI workflow is a required status check for merging pull requests to the main branch.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-11-18","2024-11-29","100%","Development Team","","Triggering the pipeline with sample PRs (one passing, one failing).","Critical for maintaining code quality going forward.","Automates quality checks, improving code reliability and development velocity."
"TASK-018","[Frontend] Develop Driver Portal Login Page","Create a custom, mobile-first login page using Odoo's OWL framework. This page will be at a separate route (e.g., /my/login) and will securely authenticate users with the 'Driver' role.","Task","Sprint Backlog","Critical","frontend.dev@tms.com","project.manager@tms.com","2024-12-06","20","5","frontend,owl,mobile,ux","Sprint 3","Launch the Driver Portal MVP with login, trip viewing, trip start, and POD upload capabilities. Establish the CD pipeline.","Driver Portal & Mobile UX","EPIC-009","Transport Management System","US-046","TASK-001","Odoo,OWL,JavaScript,CSS","Medium","Low","A driver can log in and is redirected to the driver dashboard. The page is fully responsive on a 360px wide screen.","E2E tests for driver login pass; page is verified on physical mobile devices.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-12-02","2024-12-13","100%","Backend team for authentication endpoint.","","E2E, Responsiveness, Accessibility","Entry point for all driver-facing features.","Enables field staff to access the system, a prerequisite for real-time data capture."
"TASK-021","[Frontend] Implement POD Upload (Photo & Signature)","Develop the OWL component for POD submission. Integrate a JavaScript library for signature capture. The backend will handle the file upload to S3 and atomically update the trip status to 'Delivered'.","Task","Sprint Backlog","Critical","frontend.dev@tms.com","project.manager@tms.com","2024-12-13","30","5","frontend,owl,mobile,s3","Sprint 3","Launch the Driver Portal MVP with login, trip viewing, trip start, and POD upload capabilities. Establish the CD pipeline.","Driver Portal & Mobile UX","EPIC-009","Transport Management System","US-052","TASK-020","Odoo,OWL,JavaScript,AWS S3","High","Medium","Driver can upload a photo or capture a signature as POD. Upon submission, trip status changes to 'Delivered'.","E2E tests for both photo and signature upload pass. Feature verified on physical mobile devices.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-12-02","2024-12-13","100%","Backend team","","E2E, Usability, Compatibility","Completes the core operational trip flow.","Provides auditable proof of service completion, enabling the billing process."
"TASK-023","[Full Stack] Implement E2E Expense Submission","Create the `tms.expense` model. Develop the OWL component for the driver to submit expenses, including conditional fields for 'Diesel' type and receipt upload to S3. Implement the manager's approval queue.","Task","Sprint Backlog","Critical","odoo.dev2@tms.com","project.manager@tms.com","2024-12-27","35","10","odoo,owl,fullstack,financial","Sprint 4","Implement the complete expense management workflow, from driver submission to manager approval/rejection.","Driver Portal & Mobile UX","EPIC-009","Transport Management System","US-053","US-047","Odoo,Python,OWL,JavaScript","High","Medium","A driver can submit an expense with a receipt. The expense appears in the manager's queue with a 'Submitted' status. The manager can approve or reject it.","All related user stories (US-053, US-054, US-032, US-033, US-034) are completed and pass QA.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-12-16","2024-12-27","100%","Frontend Dev, QA","","Unit, Integration, E2E","Introduces the first financial workflow component.","Enables accurate tracking of trip costs, which is crucial for profitability analysis."
"TASK-037","[Full Stack] Implement E-Invoicing Workflow","Implement the full trip-to-invoice workflow. This includes generating a draft invoice, integrating with the GSP API for IRN generation with sync/async fallback, and handling failure/retry/manual intervention.","Task","Sprint Backlog","Critical","odoo.dev1@tms.com","project.manager@tms.com","2025-01-17","45","13","odoo,backend,api,integration,financial","Sprint 5","Implement the core financial settlement process, including e-invoice generation, payment recording, and basic profitability views.","Financial Management","EPIC-004","Transport Management System","US-037","US-052","Odoo,Python,REST APIs,RabbitMQ","Critical","High","A Finance Officer can generate a GST-compliant e-invoice from a completed trip. The system handles GSP API failures gracefully with a retry mechanism.","All related user stories (US-086, US-037, US-087, US-038) are completed and pass integration testing against the GSP sandbox.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2025-01-06","2025-01-17","100%","QA, Finance SME","GSP API Sandbox","Unit, Integration (with mock and real sandbox), E2E","Critical compliance feature.","Ensures GST compliance and automates the core billing process."
"TASK-029","[Full Stack] Implement E2E GPS Tracking & Map View","Develop the FastAPI microservice for GPS data ingestion, the RabbitMQ pipeline, the Odoo consumer, and the OWL-based map view for displaying real-time vehicle locations.","Task","Sprint Backlog","Critical","odoo.dev2@tms.com","project.manager@tms.com","2025-01-31","50","16","fastapi,odoo,rabbitmq,frontend,gps","Sprint 6","Implement the end-to-end real-time GPS tracking feature, including data ingestion and the live map view.","GPS & Real-Time Tracking","EPIC-006","Transport Management System","US-029","US-100","FastAPI,Python,RabbitMQ,Odoo,OWL,JavaScript","Critical","High","A Dispatch Manager can view 'In-Transit' vehicles moving on a map in near real-time (latency < 60s). Geofencing alerts are triggered correctly.","All related user stories (US-029, US-021, US-080) are completed and pass E2E latency and performance tests.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2025-01-20","2025-01-31","100%","SRE, Frontend Dev","GPS Provider API Sandbox","Unit, Integration, E2E, Performance, Latency","Requires deployment of a separate microservice.","Provides real-time operational awareness, a key selling point of the system."
"TASK-158","[Backend] Develop Idempotent Data Migration Scripts","Write Python scripts to perform the ETL process for Customers, Vehicles, Drivers, and Open Invoices from legacy CSVs into the Odoo database. Scripts must be idempotent.","Task","Sprint Backlog","Critical","odoo.dev1@tms.com","project.manager@tms.com","2025-02-14","16.7","13","data-migration,python,etl,backend","Sprint 7","Build out the management dashboards and key reports. Finalize and test the data migration scripts.","Data Migration & Go-Live","EPIC-009","Transport Management System","US-089","EPIC-002","Python,Pandas,Odoo ORM","High","High","Running a script twice does not create duplicate records. The script logs successes, skips, and failures.","Scripts are peer-reviewed, unit-tested, and successfully used in a full dry-run in staging.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2025-02-03","2025-02-14","100%","Data Lead, QA","Legacy system data extract (CSV)","Unit tests for transformation logic, E2E dry-run.","Critical for go-live. High risk of data quality issues.","Ensures business continuity by transferring critical data to the new system."