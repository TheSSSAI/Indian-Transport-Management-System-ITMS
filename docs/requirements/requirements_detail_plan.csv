id,req_id,category,formalized_text,feature_group,original_text,assumptions,constraints,dependencies,detail_analysis,priority,validation_criteria
628,REQ-1-001,Technical,The system shall be developed as a web-based application with a responsive user interface that is fully functional and optimized for use on mobile device web browsers.,Transport Management System (TMS),"The system shall be a web-based, mobile-friendly Transport Management System.","['Users will access the system via modern web browsers (e.g., Chrome, Firefox, Safari) on desktop and mobile devices.']","[""A native mobile application for iOS or Android shall not be developed.""]",[],FALSE,high,"['Verify that all system screens render correctly and are usable on screen widths from 360px upwards.', 'Confirm that all interactive elements (buttons, forms, menus) are easily accessible and operable on a touch-based mobile device.', 'Ensure no horizontal scrolling is required for core workflows on standard mobile viewports.']"
629,REQ-1-002,Technical,"The Transport Management System (TMS) shall be implemented as a custom, installable module (addon) within the Odoo 18 framework, leveraging its core functionalities and architecture.",Transport Management System (TMS),The system shall be built as an Odoo 18 addon.,"['A licensed Odoo 18 environment will be available for development, testing, and deployment.']","[""All development must be compatible with Odoo 18 Enterprise Edition."",""The system must use Odoo's ORM, views, and business logic layers.""]",[],FALSE,high,"['Verify the TMS can be installed and uninstalled as a standard Odoo addon.', 'Confirm the TMS integrates with the Odoo application menu and security groups.', ""Ensure the TMS follows Odoo's module structure and development conventions.""]"
630,REQ-1-003,Functional,"The system shall provide distinct modules for the creation, reading, updating, and deactivation (CRUD) of core master data entities, including Vehicles, Drivers, Customers, Routes, and Materials.",Transport Management System (TMS),"The system shall manage core master data for Vehicles, Drivers, Customers, Routes, and Materials.",['The structure and fields for each master data entity are as defined in the Data Requirements section.'],[],[],FALSE,high,"['Verify that a user with appropriate permissions can create a new record for each master data type.', 'Verify that existing master data records can be viewed and edited.', ""Verify that master data records can be marked as 'Inactive' to prevent their use in new transactions while preserving historical data.""]"
631,REQ-1-004,Functional,"The system shall provide a comprehensive Trip Management module to manage the complete lifecycle of a transport job, from initial planning through to final financial settlement, following a defined status progression.",Transport Management System (TMS),"The system shall manage the end-to-end trip lifecycle, including planning, assignment, tracking, delivery, and financial settlement.",['The trip lifecycle statuses and transitions are defined in Business Rule BR-004.'],[],['REQ-1-003'],FALSE,high,"[""Demonstrate the creation of a trip in a 'Planned' state."", ""Demonstrate the assignment of a driver and vehicle, moving the trip to 'Assigned'."", ""Demonstrate the transition of a trip through 'In-Transit', 'Delivered', and 'Completed' statuses."", 'Demonstrate the generation of an invoice and recording of payment for a completed trip.']"
632,REQ-1-005,Functional,"The system shall provide integrated financial management capabilities, including a module for tracking trip-related expenses, a GST-compliant invoicing system, a ledger for tracking customer receivables, and automated trip profitability calculations.",Transport Management System (TMS),"The system shall include financial modules for expense tracking, invoicing, customer ledgers, and profitability analysis.",[],[],['REQ-1-004'],FALSE,high,"['Verify that expenses can be logged against a trip.', 'Verify that a GST-compliant invoice can be generated from a trip.', ""Verify that a customer's ledger accurately reflects all invoices and payments."", 'Verify that a profitability report can be generated for a trip, showing revenue minus approved expenses.']"
633,REQ-1-006,Functional,"The system's invoicing module must integrate with a GST Suvidha Provider (GSP) to generate an Invoice Reference Number (IRN) for each B2B invoice, ensuring compliance with Indian GST e-invoicing regulations.",Transport Management System (TMS),The invoicing module shall support Indian GST e-invoicing regulations.,['A subscription with a GSP that provides a stable and documented API will be procured and maintained.'],"[""The system must comply with the Goods and Services Tax Act, 2017, and all subsequent e-invoicing mandates.""]",['REQ-1-302'],FALSE,high,"['Generate an invoice for a GST-registered customer and verify that a valid IRN and QR code are successfully fetched from the GSP and stored with the invoice record.', 'Confirm that the generated invoice PDF contains the IRN and QR code as per regulatory requirements.']"
634,REQ-1-007,Functional,The system shall integrate with a third-party GPS provider's API to ingest real-time location data for vehicles and display their current positions on a map view within the user interface.,Transport Management System (TMS),The system shall provide real-time vehicle tracking via third-party GPS integration.,['A subscription with a GPS provider that offers an accessible API for location data will be procured and maintained.'],[],['REQ-1-301'],FALSE,high,"['Verify that the location of a vehicle with an active GPS device is updated on the system map within the specified latency of 60 seconds.', ""Confirm that the map view correctly displays markers for all vehicles associated with 'In-Transit' trips.""]"
635,REQ-1-008,Functional,"The system shall implement a Role-Based Access Control (RBAC) mechanism using Odoo's security framework to enforce distinct permission sets for Admin, Dispatch Manager, Finance Officer, and Driver user roles.",Transport Management System (TMS),"The system shall implement role-based access control for Admin, Dispatch Manager, Finance Officer, and Driver user types.",[],"[""The system shall leverage Odoo's existing models for users (`res.users`) and security groups (`res.groups`).""]",[],FALSE,high,"['Log in as each user role and verify that access to menus, data, and actions is restricted according to the definitions in section 2.2 and 3.1.', 'Confirm a Driver cannot view financial data beyond their own expenses and incentives.', 'Confirm a Finance Officer cannot create or assign trips.', 'Confirm a Dispatch Manager cannot manage user accounts.']"
636,REQ-1-009,Functional,"The system shall feature a dashboard for at-a-glance monitoring of key performance indicators (KPIs) and a reporting module to generate detailed operational and financial reports, which must be exportable to PDF and Excel formats.",Transport Management System (TMS),The system shall provide a comprehensive dashboard and reporting module for operational and financial insights.,[],[],[],FALSE,high,"['Verify the dashboard displays all widgets and KPIs as specified in section 8.2.', 'Generate each report listed in section 8.1 and verify the data accuracy.', 'Confirm that each generated report can be successfully exported to both PDF and Excel formats.']"
637,REQ-1-010,Functional,"The system shall generate and deliver alerts and notifications for predefined critical events, such as upcoming document expiries, low card balances, and critical trip events logged by drivers.",Transport Management System (TMS),The system shall provide system alerts and notifications for critical events.,[],[],[],FALSE,high,"['Configure a document with an expiry date in the near future and verify that an alert is generated at the 30, 15, and 7-day marks.', ""Manually update a card balance below its threshold and confirm a 'low balance' alert is triggered."", ""Log a critical event (e.g., 'Accident') from the driver portal and verify a high-priority alert appears on the manager's dashboard.""]"
638,REQ-1-011,Technical,"The scope of the initial system release is strictly limited. It shall explicitly exclude: 1) The development of any native mobile application for iOS or Android. 2) Direct, automated integration with FASTag or diesel card providers for balance checking; this functionality will be manual. 3) Any features listed in Section 9, 'Future Considerations'.",Transport Management System (TMS),The system shall not include the development of a native mobile application for iOS or Android. The system shall not include direct integration with FASTag or diesel card providers for automated balance checking. Balances for these cards shall be managed manually within the system. The initial release shall not include the future-ready features listed in Section 9.,[],"[""Project scope is fixed to the requirements detailed in this SRS, excluding the items listed.""]",[],FALSE,high,"['Confirm that no development work has been undertaken for a native mobile application.', 'Verify that the card balance management feature requires manual input for balance updates.', 'Review the final feature set and confirm that no features from Section 9 have been implemented.']"
639,REQ-1-012,Technical,"The system shall extend Odoo's native data models for core entities. The Customer Master shall be built upon `res.partner`, and the Driver Master shall be built upon `hr.employee`, adding TMS-specific fields and logic to these existing models.",Transport Management System (TMS),"The TMS shall leverage Odoo's existing models, including `res.partner` for customers and `hr.employee` for drivers.",[],"[""New, separate models for customers and drivers should not be created; extension of existing models is mandatory.""]",['REQ-1-002'],FALSE,high,"['Inspect the database schema and confirm that the customer model inherits from `res.partner`.', 'Inspect the database schema and confirm that the driver model inherits from `hr.employee`.', 'Verify that standard Odoo features related to partners and employees (e.g., contact details, addresses) are available on customer and driver records.']"
640,REQ-1-013,Technical,"The system architecture shall be a hybrid model, consisting of a modular monolith (the Odoo TMS addon) for core application logic and a separate, decoupled microservice specifically for ingesting high-volume GPS location data.",Transport Management System (TMS),The system shall be designed as a modular monolith. The system shall include a decoupled microservice for high-volume GPS data ingestion.,['The volume of GPS data is high enough to warrant a dedicated microservice to avoid performance impact on the core Odoo application.'],[],['REQ-1-401'],FALSE,high,"['Review the architectural diagrams and confirm the separation of the Odoo monolith and the GPS ingestion microservice.', 'Verify that the Odoo application can function (excluding live tracking) if the GPS microservice is offline.', 'Confirm that communication between the microservice and the monolith is asynchronous.']"
641,REQ-1-014,Technical,"The system's deployment environment shall be hosted on AWS and orchestrated using containers. The application components (Odoo, microservice) must be packaged as Docker images. The production environment shall be a high-availability Amazon EKS cluster, utilizing Amazon RDS for PostgreSQL 16 for the database and Amazon S3 for storing all file attachments (e.g., receipts, PODs).",Transport Management System (TMS),The application shall be containerized using Docker. The application shall be deployed on the Amazon Web Services (AWS) cloud platform. The production environment shall be a high-availability Amazon Elastic Kubernetes Service (EKS) cluster. The production environment shall use Amazon RDS for PostgreSQL 16 as its database service. The production environment shall use Amazon S3 for file attachments.,[],"[""Deployment on on-premise infrastructure or other cloud providers is out of scope.""]",[],FALSE,high,"['Verify the existence of Dockerfiles for all application components.', 'Confirm the deployment scripts and configuration target an AWS EKS cluster.', ""Verify that the application's database connection string points to an Amazon RDS for PostgreSQL 16 instance."", 'Upload a file attachment and confirm it is stored in the designated Amazon S3 bucket, not in the database or on the local filesystem.']"
642,REQ-1-015,Technical,The system shall be developed and deployed using the specific technology versions of Odoo 18 and Python 3.11.,Transport Management System (TMS),The system shall use Odoo 18. The system shall use Python 3.11.,[],"[""Use of older or newer major versions of Odoo or Python is not permitted without a formal change request.""]",[],FALSE,high,"[""Check the application's runtime environment and confirm the Python version is 3.11.x."", ""Check the Odoo instance's 'About' information and confirm the version is 18.x.""]"
643,REQ-1-100,Functional,"The system shall enforce strict data segregation for the 'Driver' role. A user with this role must only be able to view trip details for trips they are assigned to. They shall be explicitly prevented from accessing any company-level financial data, including trip revenue, customer rates, and profitability figures. The driver's view shall be limited to their own compensation-related data, such as earned incentives and the status of their expense reimbursements.",Transport Management System (TMS),"A user assigned the 'Driver' role shall only be able to view trips assigned to them and shall not be able to view company financial data, such as trip revenue, customer rates, or overall profitability. However, they are permitted to view financial data directly related to their personal compensation, such as incentives earned and expense reimbursements.",[],"[""This shall be enforced using Odoo's record rules (`ir.rule`).""]",['REQ-1-008'],FALSE,high,"['Log in as a Driver and verify that only trips assigned to this driver are visible.', 'Attempt to access a trip assigned to another driver and confirm access is denied.', 'On the trip detail view for a driver, confirm that fields for revenue, customer rate, and profitability are not present.', 'Verify that the driver can view a summary of their approved expenses and any calculated incentives for a trip.']"
644,REQ-1-101,Functional,"The system shall enforce separation of duties between roles. The 'Finance Officer' role shall have permissions to manage the financial lifecycle (invoicing, payments) but be denied permissions to create or dispatch trips. The 'Dispatch Manager' role shall have permissions for operational tasks (trip creation, expense approval, 'On Hold' status management) but be denied permissions to manage system users and roles.",Transport Management System (TMS),"A user assigned the 'Finance Officer' role shall be able to generate invoices but not create or assign new trips. A user assigned the 'Dispatch Manager' role shall be able to create trips, approve expenses, and manage the status of 'On Hold' trips, but not manage user accounts.",[],[],['REQ-1-008'],FALSE,high,"['Log in as a Finance Officer and verify that the menu option to create a new trip is not visible or is disabled.', 'Log in as a Dispatch Manager and verify that the menu option for user management (e.g., Settings > Users & Companies) is not accessible.', 'Verify a Dispatch Manager can create a trip and approve a submitted expense.']"
645,REQ-1-102,Functional,"The system shall provide a form for a user with the 'Dispatch Manager' role to create a new trip record. This form must include fields for Source, Destination, Customer, Material, Weight, Rate, and Expected Delivery Date. The Rate field must support multiple calculation methods: per kilometer, per ton, or a fixed amount.",Transport Management System (TMS),"The system shall allow a Dispatch Manager to create a new trip with details for Source, Destination, Customer, Material, Weight, Rate (per km/ton/fixed), and Expected Delivery Date.",[],[],"['REQ-1-003', 'REQ-1-004']",FALSE,high,"['As a Dispatch Manager, successfully create a new trip by populating all the specified fields.', ""Verify that the Rate field allows selection of 'per km', 'per ton', or 'fixed' and accepts a corresponding numeric value."", 'Confirm that business rules BR-006, BR-007, and BR-008 are enforced upon saving the trip record.']"
646,REQ-1-103,Functional,"The system shall manage a trip's state through a strict lifecycle: `Planned` -> `Assigned` -> `In-Transit` <-> `On Hold` -> `Delivered` -> `Completed` -> `Invoiced` -> `Paid`. A trip in 'In-Transit' status shall automatically transition to 'On Hold' when a critical event is logged. Only a 'Dispatch Manager' can revert an 'On Hold' trip back to 'In-Transit', and this action must prompt for a mandatory text comment detailing the resolution, which is then saved to the trip's audit log.",Transport Management System (TMS),"A trip shall progress through a defined set of statuses as defined in Business Rule BR-004. The 'On Hold' status can be entered from 'In-Transit' when a critical event is logged. A user with the 'Dispatch Manager' role shall have the permission to change the status of an 'On Hold' trip back to 'In-Transit'. This action shall require a mandatory text comment explaining the resolution, which will be logged in the trip's event history.",[],[],"['REQ-1-904', 'REQ-1-905']",FALSE,high,"[""Create a trip and manually progress it through the defined status path to 'In-Transit'."", ""Log a critical event for the trip and verify its status automatically changes to 'On Hold'."", ""As a Driver, attempt to change the status from 'On Hold' and verify the action is blocked."", ""As a Dispatch Manager, change the status from 'On Hold' to 'In-Transit', provide a reason, and verify the status is updated and the reason is logged in the trip's history (chatter).""]"
647,REQ-1-104,Functional,"The system shall allow a trip to be moved to a 'Canceled' status from any state prior to 'Delivered'. This action must require the user to enter a mandatory reason for cancellation. If a driver is assigned to the trip at the time of cancellation, the system must automatically trigger a notification to that driver informing them of the cancellation.",Transport Management System (TMS),"The system shall provide a 'Canceled' status that can be set at any stage before 'Delivered'. Canceling a trip shall require a mandatory reason and will trigger a notification to the assigned driver, if any.",[],[],['REQ-1-004'],FALSE,medium,"[""Take a trip in 'Assigned' status and cancel it. Verify the system prompts for a mandatory reason."", ""After providing a reason, confirm the trip status is updated to 'Canceled'."", 'Verify that the assigned driver receives a notification (in-app or email) about the cancellation.', ""Attempt to cancel a trip that is already 'Delivered' and confirm the action is not permitted.""]"
648,REQ-1-105,Functional,"The system shall feature a map view that displays the real-time location of vehicles. The end-to-end latency, from the time a location is captured by the vehicle's GPS device to the time it is displayed on a user's screen, shall not exceed 60 seconds.",Transport Management System (TMS),"The system shall provide real-time tracking of vehicles on a map, with a maximum data latency of 60 seconds from the GPS device to the user interface.",['The third-party GPS device and provider network are functioning correctly and not introducing significant latency.'],[],"['REQ-1-007', 'REQ-1-501']",FALSE,high,"[""Using a test GPS device, simulate a location update and measure the time until the vehicle's icon moves on the map UI."", 'Repeat the test multiple times to ensure the latency is consistently under 60 seconds.']"
649,REQ-1-106,Functional,The system shall provide functionality for users to create and manage geographical boundaries (geofences) on the map for key locations. The system must automatically monitor vehicle locations and generate a system alert whenever a tracked vehicle enters or exits any defined geofence.,Transport Management System (TMS),"The system shall allow a user to define geofences for key locations (e.g., customer sites, warehouses). The system shall generate an alert when a vehicle enters or exits a defined geofence.",[],[],['REQ-1-105'],FALSE,medium,"['Demonstrate the creation of a polygonal geofence around a specific address on the map.', ""Simulate a vehicle's GPS coordinates crossing into the defined geofence and verify that an 'Entry' alert is generated."", ""Simulate the vehicle's GPS coordinates crossing out of the geofence and verify that an 'Exit' alert is generated.""]"
650,REQ-1-107,Functional,"The system's driver portal shall include a feature for submitting trip-related expenses. The submission form must allow the driver to select an expense type (from a predefined list including Diesel, Toll, Food), enter the amount, and upload a photo of the receipt. If the expense type is 'Diesel', the form must also require the driver to input the fuel quantity in liters and the vehicle's current odometer reading.",Transport Management System (TMS),"The system shall allow a Driver, via the web interface, to submit an expense for an assigned trip, specifying the type (Diesel, Toll, Food), amount, an uploaded photo of the receipt, and, if the type is 'Diesel', the quantity in liters and the vehicle's current odometer reading.",[],"[""Uploaded receipt files shall be restricted to JPG, PNG, and PDF formats with a maximum file size of 5MB.""]",['REQ-1-112'],FALSE,high,"['Log in as a Driver and navigate to the expense submission form for an active trip.', ""Successfully submit a 'Toll' expense with an amount and a receipt image."", ""Submit a 'Diesel' expense and verify the form requires and accepts quantity and odometer reading."", 'Verify that Business Rule BR-009 (odometer reading validation) is enforced.']"
651,REQ-1-108,Functional,"All expenses submitted by drivers shall have an initial status of 'Submitted' and shall appear in an approval queue visible to users with 'Dispatch Manager' or 'Finance Officer' roles. These users must be able to review each expense and either 'Approve' it, changing its status to 'Approved', or 'Reject' it. The rejection action must require the approver to provide a mandatory text reason for the rejection.",Transport Management System (TMS),Submitted expenses shall enter an approval queue for a Dispatch Manager or Finance Officer. The system shall allow an approver to 'Approve' or 'Reject' a submitted expense. Rejected expenses must include a reason for rejection.,[],[],['REQ-1-107'],FALSE,high,"['After a driver submits an expense, log in as a Dispatch Manager and verify the expense appears in the approval queue.', ""Approve the expense and confirm its status changes to 'Approved'."", 'Submit another expense, then reject it. Verify the system requires a reason for rejection.', ""Confirm the status of the rejected expense is 'Rejected' and the reason is visible to the driver.""]"
652,REQ-1-109,Functional,"The system's trip profitability calculation logic must only aggregate expenses that are in the 'Approved' state. Expenses in 'Submitted', 'Rejected', or any other state shall be excluded from the total expense amount used to calculate profit.",Transport Management System (TMS),Only 'Approved' expenses shall be included in the trip's profitability calculation.,[],[],"['REQ-1-108', 'REQ-1-111']",FALSE,high,"['Create a trip with a known revenue.', 'Submit two expenses: one for 100 and one for 50.', ""Approve the expense for 100 and leave the one for 50 as 'Submitted'."", ""Verify that the trip's profitability calculation correctly shows total expenses as 100.""]"
653,REQ-1-110,Functional,"The system shall include a Card Management feature for manually tracking balances of FASTag and diesel cards. Users must be able to create records for each card, including a field for a low-balance threshold. The system must provide a function to manually update the current balance of a card. When a balance is updated to a value below the configured threshold, a system alert shall be generated.",Transport Management System (TMS),"The system shall provide a feature to manually track and receive alerts for low balances on FASTag and diesel cards. The system shall allow a user to create records for FASTag and diesel cards, manually update the current balance, and set a low-balance threshold for each card.",[],"[""The system will not integrate directly with card providers; balance updates are exclusively manual.""]",['REQ-1-010'],FALSE,medium,"['Create a new FASTag card record with a low-balance threshold of 500.', 'Set the initial balance to 1000. Verify no alert is generated.', ""Update the balance to 450. Verify a 'Low Balance' alert is generated and displayed on the dashboard.""]"
654,REQ-1-111,Functional,"The system shall automatically calculate and display the profitability for every trip. On the trip's detail view, the system must display the total revenue, the sum of all associated expenses in the 'Approved' state, and the final profitability, calculated as (Total Revenue - Total Approved Expenses).",Transport Management System (TMS),"The system shall automatically calculate the profitability for each trip. For each trip, the system shall display the total revenue, the sum of all 'Approved' trip-related expenses, and the calculated profitability (Revenue - Approved Expenses).",[],[],['REQ-1-109'],FALSE,high,"['For a trip with 10,000 revenue and 3,000 in approved expenses, verify the profitability is displayed as 7,000.', 'Approve an additional expense of 500 for the same trip and verify the profitability figure dynamically updates to 6,500.']"
655,REQ-1-112,Functional,"The system shall provide a distinct user interface for the 'Driver' role, optimized for usability on mobile web browsers. This 'Driver Portal' shall feature a simplified layout, large touch targets (buttons, links), and streamlined workflows for on-the-go operations.",Transport Management System (TMS),The system shall provide a mobile-friendly web interface specifically designed for drivers.,[],[],['REQ-1-001'],FALSE,high,"['Log in as a Driver on a mobile device.', 'Verify the interface is simple and easy to navigate.', 'Confirm that core driver tasks (viewing trips, updating status, submitting expenses) can be completed with minimal clicks and no complex data entry.']"
656,REQ-1-113,Functional,"Within the Driver Portal, a driver's ability to change trip status shall be strictly limited. The driver shall only be permitted to transition a trip's status from 'Assigned' to 'In-Transit' and from 'In-Transit' to 'Delivered'. The transition to 'Delivered' must be coupled with the Proof of Delivery upload. All other status transitions, especially changing a status from 'On Hold', must be disabled for the driver role.",Transport Management System (TMS),"A logged-in driver shall be able to: Perform only pre-defined status transitions, such as changing the status from 'Assigned' to 'In-Transit' (at trip start) and from 'In-Transit' to 'Delivered' (upon POD upload). All other status changes, particularly resolving an 'On Hold' state, must be performed by a manager.",[],[],"['REQ-1-112', 'REQ-1-103']",FALSE,high,"[""As a Driver, open an 'Assigned' trip and verify a 'Start Trip' button is available which changes the status to 'In-Transit'."", ""As a Driver, open an 'In-Transit' trip and verify the status cannot be changed except via the POD upload process."", ""As a Driver, open an 'On Hold' trip and verify there is no option to change its status.""]"
657,REQ-1-114,Functional,The Driver Portal shall allow a driver to mark a trip as 'Delivered' by submitting a Proof of Delivery (POD). This process must support uploading a photo or capturing an e-signature as the POD. The submission form must also require the driver to enter the recipient's name. The system shall automatically capture and store the timestamp of the submission.,Transport Management System (TMS),Upload a Proof of Delivery (POD) in photo or e-signature format to mark a trip as 'Delivered'. The POD submission shall require capturing the recipient's name and a timestamp.,[],[],['REQ-1-113'],FALSE,high,"[""As a Driver, for an 'In-Transit' trip, initiate the delivery process."", ""Verify options exist to either upload a photo from the device's camera/gallery or to capture a signature on the screen."", ""Complete the process by entering a recipient name and submitting. Verify the trip status changes to 'Delivered'."", 'Check the trip record and confirm the POD (image/signature), recipient name, and timestamp are saved.']"
658,REQ-1-115,Functional,"The Driver Portal shall provide a feature for drivers to log events against an active trip. The driver must select the event type from a predefined, non-editable list ('Accident', 'Repair', 'Government Stoppage', 'Fueling', 'Trip Start'). The system shall also allow the driver to optionally attach a single photo to the event log entry.",Transport Management System (TMS),"Log specific events associated with a trip from a predefined list: 'Accident', 'Repair', 'Government Stoppage', 'Fueling', 'Trip Start'. Attach a photo to a logged event.",[],[],['REQ-1-112'],FALSE,high,"[""As a Driver, select an active trip and log a 'Fueling' event."", ""Log an 'Accident' event and attach a photo. Verify the event and the photo are saved against the trip's history."", ""Confirm that logging a critical event ('Accident', 'Repair', 'Government Stoppage') triggers the status change to 'On Hold' as per BR-005.""]"
659,REQ-1-200,Functional,"The system shall provide a form to create and manage vehicle master data. Each vehicle record must contain the following fields: Truck Number (unique), Model, Capacity (in Tons), Owner Details, Ownership Type (a selectable flag for 'Company-Owned' or 'Outsourced'), Fuel Type, Last Service Date, and Next Service Due Date.",Transport Management System (TMS),"The system shall allow a user to create a new vehicle record with fields for Truck Number, Model, Capacity (in Tons), Owner Details (including a flag for 'Company-Owned' vs. 'Outsourced'), Fuel Type, Last Service Date, and Next Service Due Date.",[],[],['REQ-1-003'],FALSE,high,"['Successfully create a new vehicle record by populating all the specified fields.', 'Attempt to create a second vehicle with the same Truck Number and verify the system throws a uniqueness validation error (BR-002).', ""Verify the 'Ownership Type' is a selectable choice between 'Company-Owned' and 'Outsourced'.""]"
660,REQ-1-201,Functional,"The system shall allow users to upload and associate multiple documents with each vehicle record. For each uploaded document, the user must specify a 'Document Type' (from a configurable list, e.g., RC, Insurance) and set an 'Expiry Date'. The system must have an automated process that generates alerts for documents expiring in 30, 15, and 7 days.",Transport Management System (TMS),"The system shall allow a user to attach multiple documents to a vehicle record, each with a 'Document Type' (e.g., RC, Insurance, Fitness Certificate) and an 'Expiry Date'. The system shall automatically generate an alert 30, 15, and 7 days before a document's expiry date.",['A scheduled job will run daily to check for upcoming document expiries.'],[],"['REQ-1-200', 'REQ-1-010']",FALSE,high,"['Upload an Insurance document to a vehicle, set its type, and provide an expiry date 20 days from now.', 'Verify that on the appropriate days, alerts for 15 days and 7 days are generated.', 'Confirm that multiple documents of different types can be attached to a single vehicle.']"
661,REQ-1-202,Functional,"Every vehicle record in the system must have a status field that can be set to either 'Active' or 'Inactive'. When creating or assigning a trip, the vehicle selection list must only display vehicles with an 'Active' status. 'Inactive' vehicles must be retained in the system for historical data integrity and reporting purposes.",Transport Management System (TMS),Each vehicle record shall have an 'Active'/'Inactive' status field. Inactive vehicles shall be excluded from selection lists for new trips but retained in the database for historical reporting.,[],[],['REQ-1-200'],FALSE,high,"[""Set a vehicle's status to 'Inactive'."", 'Navigate to the trip creation form and verify that this vehicle does not appear in the vehicle assignment dropdown/list.', ""Set the vehicle's status back to 'Active' and verify it now appears in the list."", 'Run a historical report that includes the inactive vehicle and confirm its data is still present.']"
662,REQ-1-203,Functional,The system's Driver Master shall be implemented by extending the native Odoo `hr.employee` model. This extension must add the following fields to the employee form for users designated as drivers: License Number and License Expiry Date.,Transport Management System (TMS),The system shall provide a module to manage all driver information by extending the standard Odoo `hr.employee` model. A driver record shall include fields for License Number and License Expiry Date.,[],[],['REQ-1-012'],FALSE,high,"['Navigate to the Employee form for a driver.', ""Verify that fields for 'License Number' and 'License Expiry Date' are present."", 'Successfully save a license number and expiry date for a driver.']"
663,REQ-1-204,Functional,"The system shall have an automated process to monitor driver license expiry dates. It must generate system alerts when a driver's license is due to expire in 30, 15, and 7 days.",Transport Management System (TMS),"The system shall generate an alert 30, 15, and 7 days before a driver's license expiry date.",['A scheduled job will run daily to check for upcoming license expiries.'],[],"['REQ-1-203', 'REQ-1-010']",FALSE,high,"[""Set a driver's license expiry date to be 25 days from the current date."", 'Verify that alerts for 15 and 7 days are generated on the correct dates, but no 30-day alert is generated.', 'Confirm the alerts are visible on the main dashboard.']"
664,REQ-1-205,Functional,"The system's Customer Master shall be implemented by extending the native Odoo `res.partner` model. The standard form for creating a partner must be used, ensuring it captures Customer Name, Billing Address, GSTIN, and Contact Person details. The system must include a validation check for the format of the GSTIN field upon entry.",Transport Management System (TMS),"The system shall provide a centralized database of all clients by extending Odoo's `res.partner` model. The system shall allow a user to create a new customer with fields for Customer Name, Billing Address, GSTIN, and Contact Person.",[],[],['REQ-1-012'],FALSE,high,"['Create a new customer and populate all standard partner fields, including a valid GSTIN.', 'Attempt to save a customer record with an incorrectly formatted GSTIN and verify that a validation error is displayed.', 'Verify that multiple shipping addresses can be added to a single customer record.']"
665,REQ-1-206,Functional,"The system shall include a Route Master module allowing users to pre-define standard routes. Users must be able to create a new route record with the following fields: Route Name, Source Location, Destination Location, Standard Distance in kilometers, and Estimated Transit Time.",Transport Management System (TMS),"The system shall provide a module to pre-define standard transportation routes. The system shall allow a user to create a new route with fields for Route Name, Source, Destination, Standard Distance (km), and Estimated Transit Time.",[],[],['REQ-1-003'],FALSE,medium,"['Successfully create a new route record with a name, source, destination, distance, and transit time.', 'When creating a new trip, select the pre-defined route and verify that the source, destination, and distance fields on the trip form are auto-populated from the route master.']"
666,REQ-1-207,NonFunctional,"The system must implement an immutable audit trail for all CRUD operations on the Trip, Invoice, and Payment models, as well as any changes to user permissions. Each log entry must capture: the user responsible, a precise timestamp, the action type (Create, Update, Delete), a reference to the affected record, and a before/after snapshot of the changed data. Access to these audit logs shall be restricted to the 'Admin' role.",Transport Management System (TMS),"The system shall maintain an immutable audit trail for all create, update, and delete (CRUD) operations on critical data models, including Trips, Invoices, Payments, and user permissions. Each audit log entry shall record the user who performed the action, the timestamp, the type of action, the record affected, and the specific data that was changed (old and new values).",[],"[""The audit trail can leverage Odoo's built-in `mail.thread` (chatter) functionality for tracking field changes.""]",[],FALSE,high,"['Update the rate on an existing trip. As an Admin, view the audit log and verify an entry exists showing the user, timestamp, the old rate, and the new rate.', ""Create a new invoice. Verify a 'Create' action is logged for that invoice record."", 'As a non-Admin user, attempt to access the audit log view and confirm access is denied.']"
667,REQ-1-300,NonFunctional,"The system's user interface design shall adhere to Odoo's standard design language and conventions. Standard Odoo views (List, Kanban, Form, Map) must be used for data presentation to ensure a consistent user experience. The interface for the Driver role, however, must be a simplified, custom view optimized for mobile usability with large interactive elements and a clear, uncluttered layout.",Transport Management System (TMS),"The user interface shall follow Odoo's standard design language for consistency, utilizing standard views like Kanban, List, Form, and Map where appropriate. The driver-facing interface shall be simplified with large buttons and a clear layout for ease of use on mobile devices.",[],[],['REQ-1-112'],FALSE,medium,"['Verify that the main data models (Trips, Vehicles, etc.) have both a List view and a Form view.', 'Confirm that the Trip list view can be switched to a Map view to display vehicle locations.', 'Review the Driver Portal on a mobile device and confirm its layout is distinct from the standard Odoo backend and is optimized for touch interaction.']"
668,REQ-1-301,Technical,"The system shall integrate with a third-party GPS provider via a dedicated, asynchronous microservice. This microservice is responsible for polling the GPS API, validating the data against a fixed contract (`{ ""vehicle_identifier"": ""string"", ""latitude"": float, ""longitude"": float, ""timestamp"": ""ISO 8601 string"" }`), and publishing it to a RabbitMQ message queue. An Odoo scheduled job will then consume messages from this queue to update vehicle locations in the main application. The microservice must implement robust error handling, including exponential backoff for API polling failures and a dead-letter queue (DLQ) for persistently un-processable messages.",Transport Management System (TMS),"GPS Provider Integration: The system shall integrate with a third-party GPS provider's API to fetch real-time location data. The integration pattern shall be asynchronous via a RabbitMQ message queue... A dedicated microservice shall poll the GPS API... and publish it to a RabbitMQ topic... An Odoo scheduled job shall consume data from the message queue... The microservice shall implement a robust error handling strategy, including an exponential backoff retry mechanism... a dead-letter queue (DLQ)...","['The GPS provider offers a reliable, REST-based API.']","[""Communication between the microservice and Odoo must be asynchronous using RabbitMQ.""]","['REQ-1-013', 'REQ-1-402']",FALSE,high,"['Demonstrate that when the GPS provider API is temporarily unavailable, the microservice retries the connection using an exponential backoff strategy.', 'Inject a malformed message into the RabbitMQ queue and verify that after several failed processing attempts by the Odoo consumer, it is moved to the DLQ.', ""Verify that valid location data published by the microservice is successfully consumed by the Odoo job and the vehicle's location is updated.""]"
669,REQ-1-302,Technical,"The system shall integrate with a GST Suvidha Provider (GSP) API to generate e-invoices. The primary integration pattern shall be a synchronous API call to provide immediate feedback. In the event of a failure or timeout of the synchronous call, the system must automatically enqueue the e-invoice generation task into a dedicated background job queue. This queue must process failed jobs with an automatic retry mechanism using an exponential backoff delay.",Transport Management System (TMS),"GSP Integration: The system shall integrate with a GSP's API to generate compliant e-invoices. The integration pattern shall be a synchronous API call with an asynchronous fallback. If a synchronous call fails or times out, the task shall be added to a dedicated queue for automatic retries with exponential backoff.",[],[],"['REQ-1-006', 'REQ-1-503']",FALSE,high,"['Successfully generate an e-invoice and confirm the system receives the IRN synchronously.', 'Simulate a GSP API timeout. Verify the user receives immediate feedback that the job is queued, and the invoice is flagged for background processing.', 'Check the job queue and verify the failed task is present and is being retried.', 'Once the simulated API is back online, verify the queued job eventually succeeds and updates the invoice record with the IRN.']"
670,REQ-1-400,Technical,"The system shall be implemented using a hybrid architecture. The primary application will be a modular monolith, developed as an Odoo 18 addon. This monolith will be fronted by an Nginx reverse proxy. For handling high-frequency GPS data, a separate, lightweight microservice shall be developed, with its endpoint exposed securely via AWS API Gateway.",Transport Management System (TMS),"The system shall use a Hybrid architectural pattern: Modular Monolith with a Decoupled Microservice. The core TMS application shall be a modular monolith built as an Odoo 18 addon, fronted by an Nginx reverse proxy. A separate, lightweight microservice, exposed via AWS API Gateway, shall be used for high-volume GPS data ingestion.",[],[],['REQ-1-013'],FALSE,high,"['Review the deployment architecture and confirm the presence of an Nginx container routing traffic to the Odoo container(s).', 'Verify the existence of a separate deployment for the GPS microservice.', 'Confirm that the endpoint for the GPS microservice is managed and exposed through AWS API Gateway.']"
671,REQ-1-401,Technical,"The decoupled microservice for GPS data ingestion shall be developed using the Python FastAPI framework. The final artifact for this microservice must be a self-contained Docker image, separate from the Odoo application's Docker image.",Transport Management System (TMS),The GPS ingestion microservice shall be developed using the FastAPI Python framework and packaged as a distinct Docker image.,[],[],['REQ-1-400'],FALSE,high,"['Review the source code for the microservice and confirm it is built with FastAPI.', 'Verify the existence of a dedicated Dockerfile for the microservice that builds and packages it correctly.', 'Confirm that the microservice runs in its own container in the deployed environment.']"
672,REQ-1-402,Technical,"The project shall adhere to the specified technology stack. This includes: Odoo 18, Python 3.11, FastAPI, PostgreSQL 16 (via Amazon RDS), OWL 2.0, Redis (via Amazon ElastiCache), RabbitMQ (via Amazon MQ), Nginx, AWS API Gateway, Amazon S3, Docker, Amazon EKS, Terraform for IaC, GitHub Actions for CI/CD, Pytest for testing, standard Python code quality tools (Flake8, Black, isort), and AWS Secrets Manager for secrets management.",Transport Management System (TMS),"Technology Stack: Odoo 18, Python 3.11, FastAPI, Amazon RDS for PostgreSQL 16, OWL 2.0, Amazon ElastiCache for Redis, Amazon MQ for RabbitMQ, Nginx, AWS API Gateway, Amazon S3, Docker, Amazon EKS, Terraform, GitHub Actions, Flake8, Black, isort, Pytest, AWS Secrets Manager.",[],"[""Deviation from this technology stack requires formal approval through a change control process.""]",[],FALSE,high,"['Conduct a code and infrastructure review to confirm that all specified technologies are being used in their designated roles.', 'Verify the CI/CD pipeline in GitHub Actions runs the specified code quality checks and tests.', 'Confirm that infrastructure is defined in Terraform scripts.', 'Verify that application secrets are being retrieved from AWS Secrets Manager at runtime.']"
673,REQ-1-500,NonFunctional,"The system must meet specific performance targets. Under load, 95% of all standard API GET requests must have a server-side response time of less than 200 milliseconds. For the user-facing frontend, the Largest Contentful Paint (LCP) for the main Dashboard and Trip List pages must be under 3 seconds, measured on a standard broadband connection.",Transport Management System (TMS),"95% of all standard GET requests shall be completed in under 200ms. Key pages (Dashboard, Trip List) shall achieve a Largest Contentful Paint (LCP) of under 3 seconds on a standard broadband connection.",[],[],[],FALSE,high,"['Perform load testing and analyze server logs to verify that the 95th percentile of GET request response times is below 200ms.', 'Use a frontend performance monitoring tool (e.g., Lighthouse, WebPageTest) to measure the LCP of the Dashboard and Trip List pages and confirm it is under 3 seconds.']"
674,REQ-1-501,NonFunctional,"The system's data processing and concurrency performance must meet defined targets. The end-to-end latency for a GPS location update, from the moment it is received by the ingestion microservice to when it is successfully written to the Odoo database, shall be under 10 seconds. The system must be able to support at least 100 concurrent users actively performing standard operations (e.g., creating trips, viewing reports) without a noticeable degradation in performance.",Transport Management System (TMS),The end-to-end latency for processing a GPS data point (from ingestion by the microservice to update in the Odoo database) shall be under 10 seconds. The system shall support a minimum of 100 concurrent users performing standard operations without performance degradation.,[],[],['REQ-1-301'],FALSE,high,"['Measure the time difference between a log entry in the GPS microservice for data receipt and the corresponding database record update timestamp; verify it is under 10 seconds.', 'Conduct a load test simulating 100 concurrent users and monitor system metrics (CPU, memory, response times) to ensure they remain within acceptable thresholds.']"
675,REQ-1-502,NonFunctional,"The system must be highly available and recoverable. It shall achieve a minimum uptime of 99.9% during defined business hours, excluding pre-announced maintenance windows. For disaster recovery, the Recovery Point Objective (RPO), representing the maximum acceptable data loss, is 15 minutes. The Recovery Time Objective (RTO), representing the maximum time to restore service, is 4 hours.",Transport Management System (TMS),"The system shall maintain an uptime of 99.9% during business hours, excluding scheduled maintenance windows. The system shall have a Recovery Point Objective (RPO) of 15 minutes and a Recovery Time Objective (RTO) of 4 hours for disaster recovery scenarios.",[],[],['REQ-1-014'],FALSE,high,"['Configure uptime monitoring (e.g., AWS CloudWatch) and review reports to confirm 99.9% availability is met.', 'Verify that the database is configured for Point-In-Time-Recovery (PITR) with a granularity that supports a 15-minute RPO.', 'Conduct a disaster recovery drill by simulating a regional failure and measure the time taken to restore the application and database in another region, ensuring it is under the 4-hour RTO.']"
676,REQ-1-503,NonFunctional,"The system must enforce strict security for secrets management. All sensitive credentials, including but not limited to database passwords, GSP API keys, and GPS provider tokens, shall be stored in AWS Secrets Manager. These secrets must be dynamically injected into the application's runtime environment and must never be hardcoded in the source code, committed to version control, or stored in plain-text configuration files.",Transport Management System (TMS),"All sensitive credentials (API keys, database passwords, third-party tokens) shall be managed using AWS Secrets Manager and injected into the application environment at runtime, never stored in the codebase or configuration files.",[],[],['REQ-1-402'],FALSE,high,"[""Review the application's source code and configuration files to confirm the absence of any hardcoded credentials."", 'Inspect the Kubernetes deployment configuration and verify that it is configured to mount secrets from AWS Secrets Manager into the application pods as environment variables or files.', 'Demonstrate that the application successfully connects to the database and external APIs using credentials fetched from Secrets Manager.']"
677,REQ-1-504,NonFunctional,The system's code quality shall be maintained through automated testing. All new custom business logic developed for the TMS module must be covered by unit tests written using the Pytest framework. The CI/CD pipeline must be configured to automatically calculate test coverage and fail the build if the coverage for new code falls below 80%.,Transport Management System (TMS),"A minimum of 80% unit test coverage, implemented using the Pytest framework, shall be required for all new business logic and enforced by the CI/CD pipeline.",[],[],['REQ-1-402'],FALSE,medium,"['Review the CI/CD pipeline configuration (e.g., GitHub Actions workflow file) and confirm that it includes a step for running Pytest and generating a coverage report.', 'Confirm the pipeline has a quality gate that enforces the 80% coverage threshold.', 'Submit a pull request with new business logic and insufficient tests, and verify that the CI build fails.']"
678,REQ-1-600,Functional,"The system's reporting module shall provide a suite of standard, filterable reports. This suite must include: Trip Report, Vehicle Utilization, Driver Performance, Fuel Efficiency (km/liter), Trip Profitability, Vehicle Profitability, Customer Revenue, Outstanding Invoices (Aging), Detailed Expense, and Trip Interruption. All reports must be exportable to Excel and PDF.",Transport Management System (TMS),"The system shall provide the following reports: Trip Report, Vehicle Utilization Report, Driver Performance Report, Fuel Efficiency Report, Trip Profitability Report, Vehicle Profitability Report, Customer Revenue Report, Outstanding Invoices Report (Aging Report), Detailed Expense Report, Trip Interruption Report.",[],[],['REQ-1-009'],FALSE,high,"['Navigate to the reporting section and verify that menu items for all ten specified reports exist.', 'Generate each report with sample data and verify the output is accurate and correctly formatted.', 'For the Aging Report, confirm that outstanding invoices are correctly categorized into 0-30, 31-60, 61-90, and 90+ day buckets.', 'Confirm the export to Excel and PDF functions work for each report.']"
679,REQ-1-601,Functional,"The system shall provide a real-time dashboard for Admin and Manager roles containing specific widgets and Key Performance Indicators (KPIs). This must include: 1) A 'Vehicle Status' pie chart showing the proportion of vehicles that are Available, On-Trip, or In-Maintenance. 2) Numeric KPIs for 'Pending Deliveries' and 'Delayed Trips'. 3) Financial KPIs for 'Pending Payment Collections', 'Total Revenue (Month-to-Date/Year-to-Date)', and 'Total Expenses (Month-to-Date/Year-to-Date)'. 4) An 'Alerts Panel' that displays critical system alerts.",Transport Management System (TMS),"The dashboard shall include a 'Vehicle Status' widget as a pie chart (Available vs. On-Trip vs. In-Maintenance). The dashboard shall include KPIs for 'Pending Deliveries' and 'Delayed Trips'. The dashboard shall include financial summary KPIs for 'Pending Payment Collections', 'Total Revenue (MTD/YTD)', and 'Total Expenses (MTD/YTD)'. The dashboard shall include an 'Alerts Panel'...",[],[],['REQ-1-009'],FALSE,high,"['Log in as a Manager and view the dashboard.', 'Verify the presence and accuracy of all specified widgets and KPIs.', ""Change the status of a vehicle and confirm the 'Vehicle Status' pie chart updates accordingly."", ""Generate a new alert (e.g., low card balance) and verify it appears in the 'Alerts Panel'.""]"
680,REQ-1-602,NonFunctional,"The system shall implement a comprehensive monitoring and logging stack. Prometheus shall be used to scrape metrics from application and infrastructure endpoints. Fluentbit shall be deployed to collect logs from all containers and forward them to a centralized OpenSearch cluster. Grafana shall be used to create dashboards for visualizing both metrics from Prometheus and logs from OpenSearch. Alertmanager, integrated with Prometheus, shall be configured to send notifications for critical technical events like high error rates or API latency.",Transport Management System (TMS),The system shall use Prometheus for scraping key application and infrastructure metrics... use Fluentbit to collect logs... forwarded to a centralized OpenSearch cluster... use Grafana for creating unified monitoring dashboards... use Alertmanager... to send notifications for critical events...,[],"[""Application logs must be written in a structured JSON format.""]",['REQ-1-014'],FALSE,high,"['Verify that Prometheus is successfully scraping metrics from the Odoo and microservice pods.', 'Check the OpenSearch cluster and confirm that application logs are being received and indexed.', 'Access the Grafana instance and confirm there are pre-built dashboards displaying key system metrics and logs.', 'Trigger a condition that should fire an alert (e.g., by stopping a critical pod) and verify that a notification is sent via Alertmanager.']"
681,REQ-1-800,Technical,"The system implementation and deployment shall follow a two-phased rollout strategy. Phase 1 will focus on delivering core operational modules: Master Data Management (Vehicle, Driver, Customer), Trip Management, and Expense Management. Phase 2 will follow after successful validation of Phase 1 and will deliver the remaining modules: Invoicing & Payments, GPS Tracking, Dashboards, and Reporting.",Transport Management System (TMS),"The system shall be deployed using a phased rollout approach... Phase 1 (Core Operations): Deployment of Master Data modules... Trip Management, and Expense Management... Phase 2 (Finance & Tracking): Deployment of Invoicing & Payments, GPS Tracking integration, Dashboards, and Reporting.",[],[],[],FALSE,high,"['Review the project plan and confirm it is structured around the two defined phases.', 'Verify that the deliverables for Phase 1 are completed and pass User Acceptance Testing before the commencement of Phase 2 development.', 'Confirm that Phase 1 will run in parallel with the legacy system for one billing cycle.']"
682,REQ-1-801,Technical,"A one-time data migration from the legacy system to the new TMS shall be executed prior to production go-live. The scope of this migration is limited to active Customers, all Vehicles, active Drivers, and open (unpaid) invoices. The migration shall be performed using a combination of Odoo's standard data import tools and custom Python scripts for data cleansing and transformation. A full dry-run of the migration process must be successfully completed and validated in the staging environment before the production cutover is attempted.",Transport Management System (TMS),"A one-time data migration from the legacy system shall be performed before go-live. Scope: The migration shall include active Customers, all Vehicles, active Drivers, and open financial transactions (unpaid invoices). Tools: Migration will be performed using Odoo's Data Import module, supplemented with custom Python scripts... Validation: A mandatory dry-run of the migration shall be performed in the staging environment.","['Data can be extracted from the legacy system into a structured format (e.g., CSV, Excel).']",[],[],FALSE,high,"['Execute the migration script in the staging environment and verify it completes without critical errors.', 'Perform post-migration validation in staging, including record counts and financial reconciliation, to confirm data integrity.', 'Document the final migration script and validation checklist for use during the production cutover.']"
683,REQ-1-900,Functional,The system must enforce a uniqueness constraint on the 'Truck Number' field in the Vehicle Master. The application shall prevent a user from creating or saving a vehicle record if its truck number already exists on another vehicle record in the database.,Transport Management System (TMS),BR-002: The 'Truck Number' for each vehicle must be unique across all vehicle records.,[],"[""This should be implemented with a database-level unique constraint.""]",['REQ-1-200'],FALSE,high,"[""Create a vehicle with truck number 'MH12AB1234'."", 'Attempt to create a second vehicle with the same truck number and verify that the system displays a clear validation error and prevents the record from being saved.']"
684,REQ-1-901,Functional,"The system shall prevent the assignment of a driver to a new trip if the driver's license expiry date, as recorded in their master record, is in the past.",Transport Management System (TMS),BR-003: A driver with an expired license cannot be assigned to a new trip.,[],[],"['REQ-1-203', 'REQ-1-102']",FALSE,high,"[""Edit a driver's record to set their license expiry date to yesterday."", 'Attempt to assign this driver to a new trip and verify that the system blocks the assignment and displays an informative error message.']"
685,REQ-1-902,Functional,"The system must validate the material weight entered for a trip against the assigned vehicle's capacity. If a user attempts to assign a vehicle to a trip where the trip's weight exceeds the vehicle's registered capacity, the system shall prevent the action and show a validation error.",Transport Management System (TMS),BR-007: The specified material weight for a trip shall not exceed the assigned vehicle's registered capacity.,[],[],"['REQ-1-200', 'REQ-1-102']",FALSE,medium,"['Create a vehicle with a capacity of 10 tons.', 'Create a trip with a weight of 12 tons.', 'Attempt to assign the 10-ton capacity vehicle to this trip and verify the system prevents the assignment with a clear error message.']"
686,REQ-1-903,Functional,"When a driver submits a 'Diesel' expense, the system must validate the entered odometer reading. The submitted value must be greater than the most recently recorded odometer reading for that specific vehicle. If the validation fails, the expense submission shall be blocked with an error message.",Transport Management System (TMS),BR-009: The odometer reading submitted with a 'Diesel' expense entry must be greater than the previously recorded odometer reading for that vehicle.,['The system will need to store and retrieve the last known odometer reading for each vehicle.'],[],['REQ-1-107'],FALSE,medium,"['Submit a diesel expense for a vehicle with an odometer reading of 50000.', 'Attempt to submit a second diesel expense for the same vehicle with an odometer reading of 49999. Verify the submission is blocked.', 'Attempt to submit a second diesel expense with an odometer reading of 50100. Verify the submission is successful.']"
687,REQ-1-904,Functional,"The system shall enforce a strict, sequential state machine for the trip status lifecycle. Transitions must follow the path: Planned, Assigned, In-Transit, Delivered, Completed, Invoiced, Paid. A trip can only move from 'In-Transit' to 'On Hold' and back. Any other out-of-sequence status changes are forbidden.",Transport Management System (TMS),BR-004: The trip status lifecycle must follow the defined path: `Planned` -> `Assigned` -> `In-Transit` <-> `On Hold` -> `Delivered` -> `Completed` -> `Invoiced` -> `Paid`.,[],[],['REQ-1-004'],FALSE,high,"[""For a trip in 'Planned' status, verify the only available next status is 'Assigned'."", ""For a trip in 'Delivered' status, attempt to move it back to 'In-Transit' and verify the action is blocked."", 'Demonstrate that each step of the lifecycle can be followed in the correct order.']"
688,REQ-1-905,Functional,"The system shall automatically change a trip's status to 'On Hold' if a driver logs a critical event against it. The list of critical events includes 'Accident', 'Repair', and 'Government Stoppage'.",Transport Management System (TMS),"BR-005: Logging of critical events ('Accident', 'Repair', 'Government Stoppage') by a driver shall automatically change the trip status to 'On Hold'.",[],[],"['REQ-1-115', 'REQ-1-103']",FALSE,high,"[""Take a trip that is in 'In-Transit' status."", ""As the assigned driver, log an 'Accident' event for this trip."", ""Immediately verify that the trip's status has automatically been updated to 'On Hold'.""]"