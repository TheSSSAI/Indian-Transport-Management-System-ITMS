"story_id","epic","title","user_role","description","business_value","priority","story_points","dependencies","acceptance_criteria","technical_tasks","definition_of_done"
"US-092","Driver Portal","Driver accesses self-service training materials in mobile portal","Driver","As a Driver, I want to access a dedicated 'Help & Training' section within my mobile portal that contains short video tutorials and a downloadable quick-reference guide, so that I can learn how to use the system's features correctly at my own pace and quickly find answers to my questions while on the road.","Reduces the support load on dispatch and admin staff by empowering drivers with self-service training. Improves driver proficiency, reduces operational errors, and increases user adoption.","Should Have","3","[""US-046""]","[{""scenario"":""Navigation to Training Section"",""given"":""I am a user with the 'Driver' role and I am logged into the mobile-friendly web portal"",""when"":""I view the main navigation menu of the portal"",""then"":""I see a clearly labeled and easily tappable option for 'Help & Training'.""},{""scenario"":""Viewing Available Training Materials"",""given"":""I have navigated to the 'Help & Training' page"",""when"":""the page finishes loading"",""then"":""I see a list of available video tutorials, each with a descriptive title (e.g., 'How to Submit an Expense').""},{""scenario"":""Playing a Video Tutorial"",""given"":""I am on the 'Help & Training' page with a list of videos"",""when"":""I tap on a video tutorial's title or thumbnail"",""then"":""an embedded video player loads and plays the video directly within the page without navigating away.""},{""scenario"":""No Training Materials Available"",""given"":""I have navigated to the 'Help & Training' page and no training materials have been uploaded by an Admin"",""when"":""the page loads"",""then"":""I see a user-friendly message, such as 'No training materials are available at this time. Please check back later.'""}]","[""Create a new Odoo model `tms.training.material` to store training metadata."",""Create a new OWL component for the 'Help & Training' page in the Driver Portal."",""Develop an Odoo controller to serve training material data to the frontend."",""Integrate an HTML5 video player into the OWL component.""]","[""All acceptance criteria validated and passing on target mobile browsers."",""Code has been peer-reviewed and merged into the main development branch."",""Unit tests for the new Odoo model and controller achieve >80% coverage."",""E2E tests simulating the driver's journey are implemented and passing."",""The feature is deployed and verified in the staging environment.""]"
"US-091","Transition & Go-Live","User receives role-based training and materials for the new TMS","All TMS user roles","As a new system user (Admin, Manager, Finance Officer, or Driver), I want to receive training materials and sessions tailored to my specific job responsibilities, so that I can confidently and effectively use the Transport Management System from the first day of go-live.","Ensures smooth user adoption, reduces post-launch errors and support requests, minimizes business disruption during cutover, and maximizes the return on investment in the new system.","Must Have","13","[""US-046""]","[{""scenario"":""Instructor-Led Training for Office Staff"",""given"":""The TMS is feature-complete and stable in the staging environment"",""when"":""An Admin, Dispatch Manager, or Finance Officer attends their scheduled, role-specific training session"",""then"":""They can successfully complete a set of predefined key tasks for their role in the staging environment and confirm their understanding of the system.""},{""scenario"":""Driver Accesses Video Tutorials"",""given"":""A Driver is logged into the mobile-friendly web portal"",""when"":""They navigate to the 'Help & Training' section"",""then"":""They see a list of short video tutorials covering their key tasks and can play them directly within the browser.""},{""scenario"":""Distribution of Driver Quick Reference Guide (QRG)"",""given"":""A laminated, one-page Quick Reference Guide (QRG) for drivers has been created and printed"",""when"":""The go-live date approaches"",""then"":""Every driver has been given a physical copy of the QRG.""}]","[""Develop the 'Help & Training' section in the Driver Portal."",""Prepare staging environment with production-like data for training sessions."",""Non-technical tasks: Create user manuals, record video tutorials, design QRG, schedule and conduct training.""]","[""All training materials (User Manual, Videos, QRG) created, reviewed, and approved."",""Software component for Driver Portal training page is developed, tested, and deployed."",""All instructor-led training sessions have been completed and attendance recorded."",""A process for training new hires post-launch has been documented.""]"
"US-090","Transition & Go-Live","Admin validates migrated data in a staging environment","Admin","As an Admin responsible for the system's go-live, I want to execute a dry-run of the data migration in a staging environment and receive a comprehensive validation report, so that I can verify data integrity, identify and fix any issues before the production cutover, and ensure a smooth and successful transition to the new TMS.","Mitigates the significant business risk of data loss, corruption, or a failed go-live. Ensures business continuity by verifying that all critical operational and financial data is accurately transferred to the new system.","Must Have","13","[""US-089""]","[{""scenario"":""Validation report shows matching record counts for master data"",""given"":""The migration and validation process has been successfully executed"",""when"":""The Admin reviews the generated validation report"",""then"":""The report must contain a section for 'Record Count Comparison' which shows identical counts for 'active Customers', 'all Vehicles', and 'active Drivers' between the source data dump and the target staging database.""},{""scenario"":""Validation report shows successful financial reconciliation"",""given"":""The migration and validation process has been successfully executed"",""when"":""The Admin reviews the generated validation report"",""then"":""The report must contain a 'Financial Reconciliation' section that shows the sum of all open (unpaid) invoice balances from the source data matches the sum of all outstanding balances in the staging TMS customer ledgers.""},{""scenario"":""Validation report identifies data transformation or mapping errors"",""given"":""A legacy data dump contains records that violate the new system's validation rules"",""when"":""The migration and validation process is executed"",""then"":""The validation report must list the specific records that failed to migrate or were migrated with data integrity issues, along with a reason for the failure.""}]","[""Develop Python scripts to perform post-migration validation."",""Script to compare record counts between source (CSV) and target (Odoo DB)."",""Script to perform financial reconciliation of open invoices."",""Script to generate a structured, human-readable report file.""]","[""Migration validation scripts are written, code-reviewed, and merged."",""A successful dry-run has been demonstrated to project stakeholders using the full legacy dataset."",""The Admin user has formally signed off on the process and its results."",""The staging environment reset procedure is documented and has been successfully tested.""]"
"US-089","Transition & Go-Live","Admin executes a one-time data migration from the legacy system","Admin","As an Admin, I want to execute a well-defined process with supporting scripts to migrate key master data and open financial transactions from our legacy system into the new TMS, so that the system is populated with accurate, essential business data at go-live, ensuring operational continuity and a seamless transition for all users.","Enables business continuity by populating the new TMS with critical operational data before go-live. This avoids catastrophic data loss and eliminates the need for manual re-entry, facilitating a seamless cutover.","Must Have","21","[""US-006"",""US-011"",""US-015"",""US-037""]","[{""scenario"":""Successful migration of active customer master data"",""given"":""A clean CSV file containing active customers from the legacy system is available"",""when"":""The Admin executes the customer migration process"",""then"":""All customer records from the file are created in the Odoo 'res.partner' model, and all fields are mapped correctly.""},{""scenario"":""Successful migration of open financial transactions (unpaid invoices)"",""given"":""The customer migration has been successfully completed, and a clean CSV file of open invoices is available"",""when"":""The Admin executes the invoice migration process"",""then"":""All open invoices are created in Odoo, correctly linked to their respective customer records, and reflect the correct outstanding balance.""},{""scenario"":""Migration script handles records with missing mandatory data"",""given"":""A source CSV file where one or more records are missing a mandatory field"",""when"":""The Admin executes the relevant migration script"",""then"":""The script skips the invalid records, logs a detailed error for each, and successfully processes all other valid records.""},{""scenario"":""Generation of a comprehensive migration summary report"",""given"":""The entire migration process has been completed"",""when"":""The Admin reviews the output of the process"",""then"":""A summary report file is generated that clearly states for each data type: total records in source, records successfully imported, and records failed/skipped.""}]","[""Analyze legacy data schema and finalize data mapping document."",""Develop Python scripts for data cleansing, transformation, and loading using Odoo's ORM or data import tools."",""Create a master orchestration script to run migrations in the correct sequence."",""Implement robust error logging and summary reporting.""]","[""Migration scripts and supporting documentation are code-reviewed and merged."",""A full end-to-end migration dry-run has been successfully completed in the staging environment."",""The generated validation report from the staging dry-run has been reviewed and approved by stakeholders."",""The performance of the migration process is confirmed to be within the acceptable cutover window.""]"
"US-088","Financial Management & Invoicing","System flags invoices and alerts on GSP API failure","Finance Officer","As a Finance Officer, I want the system to automatically flag an invoice and send me a high-priority alert when the e-invoice generation fails, so that I can immediately take corrective action, ensure GST compliance, and prevent delays in the billing cycle.","Ensures GST compliance by preventing silent failures of e-invoice generation. Improves operational efficiency by immediately notifying the responsible user to investigate and resolve billing issues, thus protecting revenue and avoiding penalties.","Must Have","5","[""US-037"",""US-087"",""US-060""]","[{""scenario"":""GSP API returns an error response during e-invoice generation"",""given"":""A Finance Officer has initiated the e-invoice generation process"",""when"":""The system calls the GSP API and receives a definitive error response (e.g., HTTP 4xx or 5xx)"",""then"":""The invoice's status is immediately changed to 'E-Invoice Generation Failed', the specific error is logged, and a high-priority notification is sent to the 'Finance Officer' role.""},{""scenario"":""Visual indication of failed invoices in the list view"",""given"":""At least one invoice exists with the status 'E-Invoice Generation Failed'"",""when"":""A user with appropriate permissions views the main invoice list"",""then"":""The entire row for each failed invoice is visually highlighted (e.g., with a light red background) to distinguish it from other invoices.""},{""scenario"":""Notification provides direct access to the failed invoice"",""given"":""A Finance Officer has received a notification about a failed e-invoice generation"",""when"":""The officer clicks on the notification in the Odoo notification center"",""then"":""The system navigates them directly to the form view of the specific invoice that failed.""}]","[""Add a new state 'E-Invoice Generation Failed' to the `account.move` model."",""Add a field to `account.move` to store the last error message."",""Extend the GSP integration logic to catch exceptions and trigger the state change."",""Integrate with the notification system to send a targeted alert to the 'Finance Officer' group."",""Update the invoice list view (XML) to conditionally apply a CSS class for highlighting.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the error handling logic and passing with >80% coverage."",""Integration testing against a GSP sandbox environment completed successfully."",""User interface changes reviewed and approved by the Product Owner.""]"
"US-087","Financial Management & Invoicing","Finance Officer generates a compliant e-invoice via GSP integration","Finance Officer","As a Finance Officer, I want to generate a GST-compliant e-invoice by sending trip data to a GST Suvidha Provider (GSP) through an automated integration, so that I can fulfill legal requirements efficiently, reduce manual errors, and ensure timely and accurate customer billing.","Ensures regulatory compliance with Indian GST laws, automates a critical financial process, reduces manual data entry errors, and potentially accelerates the payment cycle.","Must Have","13","[""US-037"",""US-015"",""US-039""]","[{""scenario"":""Successful e-invoice generation on the first attempt"",""given"":""An Odoo invoice is in 'Posted' state and linked to a 'Completed' trip"",""when"":""The Finance Officer clicks the 'Generate E-Invoice' button"",""then"":""The system successfully receives a valid IRN and signed QR code from the GSP, stores these details against the invoice, and updates the invoice's 'E-Invoice Status' to 'Generated'.""},{""scenario"":""GSP API is temporarily unavailable or times out"",""given"":""A Finance Officer attempts to generate an e-invoice"",""when"":""The synchronous API call to the GSP fails due to a timeout or a 5xx server error"",""then"":""The system adds the e-invoice generation task to an asynchronous queue for automatic retries, sets the status to 'Pending Retry', and provides immediate UI feedback.""},{""scenario"":""PDF invoice report is updated with e-invoice details"",""given"":""An e-invoice has been successfully generated for an invoice"",""when"":""A user prints or downloads the PDF version of the invoice"",""then"":""The generated PDF document prominently displays the signed QR code and the Invoice Reference Number (IRN).""}]","[""WI-401: Develop GSP API Client Service"",""WI-402: Implement E-Invoice Generation Workflow with sync/async fallback"",""WI-403: Update Invoice PDF Report with IRN and QR code""]","[""All acceptance criteria validated and passing in the GSP sandbox environment."",""Unit tests for data mapping and API client achieve >80% code coverage."",""Integration testing against the GSP sandbox is completed."",""Security review confirms credentials are managed securely via AWS Secrets Manager.""]"
"US-086","Financial Management & Invoicing","Finance Officer creates a pre-filled draft invoice from a completed trip","Finance Officer","As a Finance Officer, I want to automatically generate a pre-filled invoice from a completed trip record, so that I can reduce manual data entry, minimize errors, and speed up the customer billing process.","Improves billing accuracy and efficiency, reduces the time from service completion to invoicing, and enhances cash flow by minimizing data entry errors and delays.","Must Have","2","[""US-015"",""US-026"",""US-037""]","[{""scenario"":""Generate a draft invoice from a completed trip"",""given"":""I am viewing a Trip record that is in the 'Completed' state"",""when"":""I click the 'Create Invoice' button on the trip form"",""then"":""The system creates a new customer invoice in 'Draft' status and redirects me to the new invoice form.""},{""scenario"":""Correct data mapping from Trip to Invoice"",""given"":""A new draft invoice has been generated from a trip record"",""when"":""I view the newly created draft invoice"",""then"":""The invoice's 'Customer', invoice line description, and 'Unit Price' must match the trip's 'Customer', details, and 'Rate'.""},{""scenario"":""Prevent duplicate invoice creation"",""given"":""I am viewing a 'Completed' trip for which an invoice has already been generated"",""when"":""I view the trip form"",""then"":""The 'Create Invoice' button is hidden, and a 'View Invoice' button/link is displayed instead.""}]","[""Add a 'Create Invoice' button to the Trip form view."",""Implement a Python method on the `tms.trip` model to handle invoice creation."",""Map fields from `tms.trip` to a new `account.move` record."",""Add a `Many2one` field to `tms.trip` to link to the created invoice.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved."",""Unit tests for the invoice creation method are written and achieve >80% coverage."",""Functionality is verified to be restricted to the correct user roles.""]"
"US-085","Financial Management & Invoicing","System calculates trip profitability using only approved expenses","Dispatch Manager","As a Dispatch Manager or Finance Officer, I want the trip profitability to be calculated using only expenses that have been explicitly approved, so that I can have an accurate and reliable view of a trip's financial performance for making informed business decisions.","Ensures financial accuracy in reporting by preventing unverified or rejected costs from impacting profitability metrics. This builds trust in the system's data and supports accurate analysis.","Must Have","2","[""US-026"",""US-053"",""US-033""]","[{""scenario"":""Profitability calculation with mixed expense statuses"",""given"":""A trip exists with a total revenue of 25,000 INR and has an 'Approved' expense of 8,000 INR, a 'Pending' expense of 500 INR, and a 'Rejected' expense of 200 INR"",""when"":""A user views the trip's details"",""then"":""The system must display 'Total Approved Expenses' as 8,000 INR and 'Trip Profitability' as 17,000 INR.""},{""scenario"":""Profitability calculation when an expense is approved"",""given"":""A trip has a profitability of 17,000 INR and a 'Pending' expense of 500 INR"",""when"":""A Dispatch Manager changes the status of the 'Pending' expense to 'Approved'"",""then"":""The trip's 'Trip Profitability' must be automatically updated to 16,500 INR.""}]","[""Add a computed field to the `tms.trip` model for profitability."",""Implement the calculation logic in Python, ensuring it filters expenses by 'Approved' status."",""Configure the `@api.depends` decorator to correctly trigger recalculation when related expenses change.""]","[""All acceptance criteria validated and passing."",""Unit tests for the computed field logic are implemented, achieving >80% coverage."",""Integration tests confirm that changing an expense status correctly triggers recalculation."",""Role-based access to profitability data is confirmed to be working as specified.""]"
"US-084","Driver Portal","System validates odometer reading for diesel expenses to ensure data integrity","Dispatch Manager","As a Dispatch Manager, I want the system to enforce that a new odometer reading for a diesel expense is always greater than the previous one for that vehicle, so that I can ensure data integrity for accurate fuel efficiency and profitability reporting.","Prevents data entry errors, ensuring the integrity of vehicle mileage data. This is critical for accurate fuel efficiency calculations, maintenance scheduling, and vehicle profitability analysis.","Must Have","2","[""US-053"",""US-006"",""US-027""]","[{""scenario"":""Submitting a valid (higher) odometer reading"",""given"":""The last recorded odometer reading for a vehicle is 50,000 km"",""when"":""A Driver enters a new reading of 50,250 km for a 'Diesel' expense and submits the form"",""then"":""The system validates the reading successfully and the expense is created.""},{""scenario"":""Submitting an invalid (lower) odometer reading"",""given"":""The last recorded odometer reading for a vehicle is 50,000 km"",""when"":""A Driver enters a new reading of 49,950 km and attempts to submit"",""then"":""The system prevents the submission and displays a clear error message: 'Odometer reading must be greater than the last recorded value of 50,000 km.'""},{""scenario"":""First-ever diesel expense for a vehicle"",""given"":""There is no previously recorded odometer reading for a new vehicle"",""when"":""A Driver enters a reading of 150 km"",""then"":""The system accepts the submission without performing the 'greater than' validation.""}]","[""WI-311: Extend the backend for expense submission with odometer validation logic."",""Implement a performant query to fetch the last recorded odometer reading for a vehicle."",""Add a server-side constraint (`@api.constrains`) to the expense model to enforce the rule.""]","[""All acceptance criteria validated and passing."",""Backend validation logic is covered by unit tests with at least 80% coverage."",""The full submission flow is covered by an integration test."",""The database query for the last odometer reading is confirmed to be indexed and performant.""]"
"US-083","Driver Portal","Driver receives clear feedback when uploading an invalid expense receipt file","Driver","As a Driver, I want to receive immediate and clear feedback if my uploaded expense receipt is an invalid format or too large, so that I can quickly correct the issue and successfully submit my expense claim.","Ensures data quality, manages system storage costs, improves system security, and provides a better user experience for drivers by giving instant, actionable feedback.","Must Have","2","[""US-053""]","[{""scenario"":""Uploading a file with an invalid type"",""given"":""A Driver is on the 'Submit Expense' form"",""when"":""The user attempts to upload a file with an unallowed extension (e.g., .docx, .zip)"",""then"":""The system immediately rejects the file and displays an error message: 'Invalid file type. Please upload a JPG, PNG, or PDF.'""},{""scenario"":""Uploading a file that is too large"",""given"":""A Driver is on the 'Submit Expense' form"",""when"":""The user attempts to upload a valid file type (e.g., a JPG) that is 6MB in size"",""then"":""The system immediately rejects the file and displays an error message: 'File is too large. Maximum size is 5MB.'""},{""scenario"":""Server-side validation rejects invalid file types"",""given"":""A user attempts to bypass client-side validation and submits a POST request with a disallowed file type"",""when"":""The server receives the upload request"",""then"":""The server-side logic must validate the file's MIME type, reject the file, and return an appropriate error response.""}]","[""Implement client-side file validation logic in the OWL component for the expense form."",""Implement mandatory server-side validation for file type (MIME) and size in the Odoo controller."",""Add help text to the UI to inform users of the constraints.""]","[""All acceptance criteria validated and passing."",""Unit tests for backend validation logic implemented with >80% coverage."",""Automated E2E tests for UI validation scenarios implemented and passing."",""Mandatory server-side security validation is confirmed to be in place.""]"
"US-082","Driver Portal","System sends a cancellation notification to the driver","Driver","As a Driver, I want to receive an immediate notification when my assigned trip is canceled, so that I can avoid starting a journey that is no longer required and make myself available for a new assignment.","Prevents wasted fuel, time, and resources on canceled trips. Improves operational efficiency by allowing for faster driver reassignment and reduces communication errors.","Must Have","2","[""US-031"",""US-027"",""US-060""]","[{""scenario"":""Successful notification on trip cancellation"",""given"":""A trip is in 'Assigned' status and is assigned to a specific driver"",""when"":""A Dispatch Manager changes the trip's status to 'Canceled'"",""then"":""The assigned driver immediately receives an in-app notification (bell icon) and an email stating the trip has been canceled.""},{""scenario"":""Trip canceled with no driver assigned"",""given"":""A trip is in 'Planned' status and has no driver assigned"",""when"":""A Dispatch Manager changes the trip's status to 'Canceled'"",""then"":""The system successfully cancels the trip and no driver notification is triggered.""}]","[""Override the `write` method of the `tms.trip` model."",""Add logic to detect a state change to 'Canceled'."",""If a driver is assigned, trigger the notification service to send an in-app and email alert to that driver.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the notification trigger logic."",""Integration testing completed with a test mail server."",""Security requirements (correct recipient) validated.""]"
"US-081","Monitoring & Alerts","System generates an alert for low card balance","Finance Officer","As a Finance Officer, I want the system to automatically generate an alert when a card's balance is updated to a level at or below its pre-set threshold, so that I can proactively recharge the card and prevent operational disruptions for our drivers.","Prevents operational delays caused by insufficient funds on essential cards (FASTag, diesel). Improves financial planning by providing timely reminders for recharges.","Should Have","2","[""US-042"",""US-043"",""US-065""]","[{""scenario"":""Alert generation when balance drops below threshold"",""given"":""A FASTag card record exists with a 'Low-Balance Threshold' set to 500"",""when"":""A Finance Officer updates the card's 'Balance' to 450 and saves the record"",""then"":""The system must generate a low-balance alert for this card, visible on the manager dashboard.""},{""scenario"":""No duplicate alert for balance updates that remain below threshold"",""given"":""A card has a balance of 400, a threshold of 500, and an active low-balance alert already exists"",""when"":""A Finance Officer updates the card's 'Balance' to 300"",""then"":""The system must NOT generate a new, duplicate low-balance alert.""},{""scenario"":""Existing alert is cleared when card is recharged above threshold"",""given"":""A card has a balance of 400, a threshold of 500, and an active alert exists"",""when"":""A Finance Officer updates the card's 'Balance' to 2000"",""then"":""The system must automatically mark the existing low-balance alert as 'Resolved' or remove it from the active alerts panel.""}]","[""Override the `write` method on the `tms.card` model."",""Add logic to compare the new balance with the threshold."",""Implement stateful logic to trigger an alert only on the transition from above to below threshold."",""Integrate with the alert creation and resolution system.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the balance check and alert trigger logic."",""Integration testing completed, verifying the flow from UI update to alert display."",""Performance requirements verified.""]"
"US-080","Monitoring & Alerts","System generates an alert for geofence entry/exit","Dispatch Manager","As a Dispatch Manager, I want to receive automatic alerts when a vehicle enters or leaves a predefined geofenced area, so that I can monitor trip milestones in real-time and quickly identify potential delays or deviations from the plan.","Provides real-time operational awareness of vehicle movements at key locations, enabling proactive management, improved security, and automation of manual tracking tasks.","Should Have","8","[""US-021"",""US-029"",""US-065""]","[{""scenario"":""Vehicle enters a geofence"",""given"":""A vehicle on an 'In-Transit' trip is outside a geofence named 'Customer Warehouse A'"",""when"":""The system processes a GPS location update for the vehicle that is inside the boundary of 'Customer Warehouse A'"",""then"":""The system shall generate an 'Entry' event, and an alert must be visible on the Dispatch Manager's dashboard.""},{""scenario"":""Vehicle exits a geofence"",""given"":""A vehicle's known state is 'inside' the 'Customer Warehouse A' geofence"",""when"":""The system processes a GPS location update that is outside the boundary"",""then"":""The system shall generate an 'Exit' event, and an alert must be visible on the Dispatch Manager's dashboard.""},{""scenario"":""No duplicate alerts are generated for a vehicle remaining within a geofence"",""given"":""A vehicle has already triggered an 'Entry' alert for 'Customer Warehouse A'"",""when"":""The system processes subsequent GPS location updates that are also inside the boundary"",""then"":""No new 'Entry' alerts for this geofence and vehicle shall be generated.""}]","[""Implement point-in-polygon algorithm in the GPS Ingestion Microservice."",""Implement state management (e.g., using Redis) to track vehicle inside/outside status for each geofence."",""Publish geofence events to a dedicated RabbitMQ topic."",""Create an Odoo consumer to process geofence events and generate system alerts.""]","[""All acceptance criteria validated and passing."",""Unit tests for the point-in-polygon logic and state transitions are implemented."",""Integration testing of the microservice -> message queue -> Odoo consumer flow is completed."",""Performance testing confirms the geofence check does not degrade the GPS ingestion pipeline.""]"
"US-079","Monitoring & Alerts","System generates automated alerts for upcoming driver license expiry","Admin","As an Admin / Dispatch Manager, I want the system to automatically generate and send alerts when a driver's license is approaching its expiry date, so that I can proactively ensure the driver renews their license in time, maintaining legal compliance and operational readiness.","Mitigates significant legal and operational risk by preventing drivers from operating with expired licenses. Ensures compliance, avoids fines, and maintains a fully operational pool of drivers.","Must Have","5","[""US-012"",""US-014"",""US-060"",""US-065""]","[{""scenario"":""30-Day Expiry Alert Generation"",""given"":""An 'Active' driver has a license expiry date set to exactly 30 days from today"",""when"":""The daily automated check for license expiries is executed"",""then"":""An alert is generated for 'Admin' or 'Dispatch Manager' roles, visible on the dashboard and sent via configured channels.""},{""scenario"":""No Alert for Inactive Drivers"",""given"":""A driver is marked as 'Inactive' and their license is due to expire in 30 days"",""when"":""The daily automated check is executed"",""then"":""No alert is generated for this driver.""},{""scenario"":""Idempotency of Alerts"",""given"":""An alert for the 30-day milestone has already been sent for a specific driver"",""when"":""The daily automated check runs again the next day"",""then"":""The system does not generate a duplicate 30-day alert for that driver.""}]","[""Create an Odoo scheduled action (`ir.cron`) to run daily."",""Implement a Python method to query for active drivers with licenses expiring on the 30, 15, and 7-day marks."",""Implement logic to check if an alert for a specific milestone has already been sent."",""Integrate with the notification system to create and dispatch the alerts.""]","[""All acceptance criteria validated and passing."",""Unit tests are written for the date calculation and driver selection logic."",""Integration tests are written to verify the `ir.cron` job creates the correct notifications."",""The scheduled job's performance is verified against the NFR.""]"
"US-078","Monitoring & Alerts","System generates automated alerts for upcoming vehicle document expiries","Admin","As an Admin or Dispatch Manager, I want the system to automatically generate and send me alerts when a vehicle's compliance documents are nearing their expiry date, so that I can take timely action to renew them, ensuring our fleet remains compliant and operational without interruption.","Mitigates legal and financial risks associated with non-compliant vehicles. Reduces manual tracking effort, minimizes human error, and prevents operational downtime.","Must Have","5","[""US-009"",""US-008"",""US-060"",""US-065""]","[{""scenario"":""30-Day Expiry Alert Generation"",""given"":""An 'Active' vehicle has a document with an expiry date exactly 30 days from the current date"",""when"":""The daily scheduled job for checking document expiries runs"",""then"":""An alert is generated and delivered to users with 'Admin' or 'Dispatch Manager' roles via in-app notification and email.""},{""scenario"":""Alerts for Already Expired Documents"",""given"":""An 'Active' vehicle has a document with an expiry date in the past"",""when"":""The daily scheduled job runs"",""then"":""A high-priority 'EXPIRED' alert is generated and visually distinguished on the dashboard.""},{""scenario"":""Inactive Vehicles are Ignored"",""given"":""A vehicle is marked as 'Inactive' and has a document that is due to expire"",""when"":""The daily scheduled job runs"",""then"":""The system does not generate any expiry alerts for this inactive vehicle's documents.""}]","[""Create an Odoo scheduled action (`ir.cron`) to run daily."",""Implement a Python method to query for documents of active vehicles with upcoming expiry dates."",""Implement idempotency logic to prevent duplicate alerts for the same milestone."",""Integrate with the alert creation and notification dispatch system.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented with >80% coverage for the new logic."",""Integration testing of the cron job and notification delivery completed successfully."",""Performance of the scheduled job has been tested against a representative data volume.""]"
"US-077","Monitoring & Alerts","System automatically changes trip status to 'On Hold' for critical events","Dispatch Manager","As a Dispatch Manager, I want the system to automatically change a trip's status to 'On Hold' when a driver reports a critical event so that I am immediately alerted to operational disruptions and can take timely corrective action.","Enables immediate operational awareness of on-road incidents, allowing for faster response times, improved risk management, and better communication with customers regarding delays.","Must Have","3","[""US-050"",""US-026"",""US-065""]","[{""scenario"":""Trip status changes to 'On Hold' when driver logs an 'Accident' event"",""given"":""A trip exists with the status 'In-Transit'"",""when"":""The assigned driver logs a new trip event of type 'Accident'"",""then"":""The trip's status is automatically updated to 'On Hold' AND a high-priority alert is generated for the Admin/Manager dashboard.""},{""scenario"":""Trip status does not change for non-critical events"",""given"":""A trip exists with the status 'In-Transit'"",""when"":""The assigned driver logs a new trip event of type 'Fueling'"",""then"":""The trip's status remains 'In-Transit' AND the event is recorded in the trip's history without generating a critical alert.""}]","[""Override the `create` method of the `tms.trip.event` model."",""Add a boolean field `is_critical` to the event type model for configuration."",""In the `create` method, check if the event type is critical and if so, update the related trip's status."",""Trigger the system alert mechanism.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the state transition logic, with >80% coverage."",""Integration testing completed to verify the trigger from event creation to status change."",""The generation of a dashboard alert is verified.""]"
"US-076","Trip Management Lifecycle","System enforces mandatory fields for new trips to ensure data integrity","Dispatch Manager","As a Dispatch Manager, I want the system to prevent me from saving a new trip if the Customer, Source, or Destination fields are not filled, so that I can ensure every created trip record is complete, actionable, and maintains high data quality for downstream processes.","Ensures foundational data integrity for all trip records, preventing the creation of incomplete or unusable data. This improves operational efficiency and the accuracy of all subsequent processes.","Must Have","1","[""US-015"",""US-026""]","[{""scenario"":""Attempt to save a trip with a missing Customer"",""given"":""A Dispatch Manager is on the 'Create New Trip' form"",""when"":""They fill in the Source and Destination but leave the Customer field empty, and then click 'Save'"",""then"":""The trip record is not saved, and an error message is displayed indicating the 'Customer' field is required.""},{""scenario"":""Server-side validation prevents creation via API without required fields"",""given"":""A user attempts to create a new trip record via a direct API call"",""when"":""The API request payload is missing the 'customer_id' field"",""then"":""The server rejects the request with an appropriate error code and message.""}]","[""Add the `required=True` attribute to the Customer, Source, and Destination fields on the `tms.trip` model."",""Ensure standard Odoo UI validation provides clear feedback.""]","[""All acceptance criteria validated and passing."",""Unit tests for model-level validation are implemented."",""Security requirements validated via API testing.""]"
"US-075","Trip Management Lifecycle","System prevents trip assignment if material weight exceeds vehicle capacity","Dispatch Manager","As a Dispatch Manager, I want the system to prevent me from assigning a vehicle to a trip if the material weight exceeds the vehicle's capacity, so that I can ensure compliance with safety regulations, prevent damage to our vehicles, and avoid operational delays.","Enforces legal and safety compliance by preventing vehicle overloading. Protects company assets from damage and reduces the risk of operational failures, fines, and accidents.","Must Have","1","[""US-006"",""US-026""]","[{""scenario"":""Assigning an undersized vehicle to a trip with an existing weight"",""given"":""A trip record has a 'Material Weight' of 25 Tons"",""when"":""The Dispatch Manager attempts to assign a vehicle with a 'Capacity' of 20 Tons and save"",""then"":""The system must prevent the record from being saved AND display a clear error message.""},{""scenario"":""Entering a weight that exceeds the capacity of an assigned vehicle"",""given"":""A trip record has an assigned vehicle with a 'Capacity' of 10 Tons"",""when"":""The Dispatch Manager enters a 'Material Weight' of 11 Tons and attempts to save"",""then"":""The system must prevent the record from being saved AND display a clear error message.""}]","[""Add a Python constraint (`@api.constrains`) to the `tms.trip` model."",""The constraint will compare the `weight` field with the `vehicle_id.capacity` field."",""Raise a `ValidationError` if the weight exceeds the capacity.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented with >80% coverage for the new logic."",""User interface validation and error messaging reviewed and approved.""]"
"US-074","Trip Management Lifecycle","System prevents assignment of a driver with an expired license","Dispatch Manager","As a Dispatch Manager, I want the system to prevent me from assigning a driver with an expired license to a trip, so that I can ensure all trips are compliant with legal regulations and company safety policies, thereby mitigating risk.","Ensures compliance with the Indian Motor Vehicles Act, 1988, mitigates legal and financial risks from using unlicensed drivers, and upholds company safety standards.","Must Have","1","[""US-012"",""US-027""]","[{""scenario"":""Attempting to assign a driver with a past license expiry date"",""given"":""A Dispatch Manager is on the Trip form"",""when"":""The manager selects a driver whose 'License Expiry Date' is in the past and attempts to save"",""then"":""The system prevents the record from being saved AND displays an error message: 'Cannot assign [Driver Name]. Their license expired on [Expiry Date].'""},{""scenario"":""Attempting to assign a driver with no license expiry date recorded"",""given"":""A Dispatch Manager is on the Trip form"",""when"":""The manager selects a driver for whom the 'License Expiry Date' field is empty/null"",""then"":""The system prevents the record from being saved AND displays an error message: 'Cannot assign [Driver Name]. Their license expiry date is not recorded.'""}]","[""Add a Python constraint (`@api.constrains`) on the `driver_id` field of the `tms.trip` model."",""The constraint will check if `driver_id.license_expiry_date` is set and is not in the past."",""Raise a `ValidationError` if the license is expired or the date is missing.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented with >90% coverage for the validation logic."",""User interface error messaging is reviewed and approved for clarity.""]"
"US-073","Master Data Management","Customer Form: Validate GSTIN format on entry","Finance Officer","As a Finance Officer, I want the system to validate the format of the GSTIN when I create or update a customer record, so that I can ensure data accuracy and prevent failures during the e-invoicing process.","Ensures data integrity of customer records, prevents downstream e-invoicing failures, supports regulatory compliance (GST Act), and reduces manual correction effort.","Must Have","1","[""US-015""]","[{""scenario"":""User enters a GSTIN with incorrect length"",""given"":""A user is on the 'Create/Edit Customer' form"",""when"":""The user enters a GSTIN with fewer than 15 characters and attempts to save"",""then"":""The system must prevent the record from being saved and display an error: 'Invalid GSTIN format. It must be 15 characters long.'""},{""scenario"":""User enters a GSTIN with an incorrect pattern"",""given"":""A user is on the 'Create/Edit Customer' form"",""when"":""The user enters a 15-character string that does not match the standard GSTIN pattern"",""then"":""The system must prevent the record from being saved and display an error: 'Invalid GSTIN format. Please check the structure.'""}]","[""Add a Python constraint (`@api.constrains`) to the `res.partner` model for the GSTIN field."",""Implement a regular expression to validate the GSTIN format."",""Implement an on-change method to auto-capitalize the input.""]","[""All acceptance criteria validated and passing."",""Backend validation logic is implemented with `@api.constrains`."",""Unit tests for the validation logic are implemented with at least 90% coverage.""]"
"US-072","Master Data Management","System validates format of Indian vehicle registration numbers","Admin","As an Admin, I want the system to validate the format of the 'Truck Number' field when I create or edit a vehicle record, so that I can ensure data accuracy, prevent operational errors, and maintain compliance with Indian vehicle registration standards.","Ensures high data quality for a critical master data entity (Vehicle), which prevents operational errors, supports regulatory compliance, and improves the reliability of reporting and vehicle tracking.","Must Have","1","[""US-006""]","[{""scenario"":""Invalid format with incorrect structure"",""given"":""An Admin is on the 'Create Vehicle' form"",""when"":""The user enters a truck number with an incorrect structure like 'M112AB1234'"",""then"":""The system prevents the form from saving and displays a format validation error message.""},{""scenario"":""Valid format with spaces or hyphens is normalized"",""given"":""An Admin is on the 'Create Vehicle' form"",""when"":""The user enters a truck number with separators like 'KA 01 AB 1234'"",""then"":""The system accepts the value and saves the record, normalizing the input to 'KA01AB1234'.""}]","[""Add a Python constraint (`@api.constrains`) to the `tms.vehicle` model."",""Implement a regular expression to validate the truck number format."",""Override the `create` and `write` methods to normalize the input (uppercase, remove spaces/hyphens) before saving.""]","[""All acceptance criteria validated and passing."",""Backend validation using `@api.constrains` is implemented and covered by unit tests."",""Frontend validation in the OWL component provides real-time feedback.""]"
"US-071","Master Data Management","System validates uniqueness of vehicle truck number","Admin","As an Admin, I want the system to prevent me from saving a vehicle record if its truck number already exists for another vehicle, so that I can maintain unique and accurate vehicle records, ensuring data integrity across the entire system.","Ensures high data integrity for the vehicle master list, which is a foundational dataset for the entire TMS. This prevents operational errors, financial errors, and reporting inaccuracies.","Must Have","3","[""US-006"",""US-007""]","[{""scenario"":""Attempt to create a new vehicle with a duplicate truck number"",""given"":""A vehicle with the truck number 'MH12AB3456' already exists"",""when"":""An Admin attempts to create a new vehicle with the truck number 'MH12AB3456'"",""then"":""The system prevents the record from being saved and displays an error: \""Error: Truck number 'MH12AB3456' is already in use.\""""},{""scenario"":""Uniqueness check is case-insensitive and ignores separators"",""given"":""A vehicle with the truck number 'MH12AB3456' already exists"",""when"":""An Admin attempts to create a new vehicle with the truck number 'mh 12-ab-3456'"",""then"":""The system correctly identifies it as a duplicate and prevents the save.""}]","[""Add a `_sql_constraints` to the `tms.vehicle` model for database-level uniqueness on a normalized field."",""Create a new, non-stored computed field to hold the normalized truck number."",""Override `create` and `write` methods to compute and store the normalized value before saving to trigger the constraint.""]","[""All acceptance criteria validated and passing."",""Unit tests for normalization and validation logic implemented and passing."",""A database-level unique constraint is implemented on a normalized version of the truck number field.""]"
"US-070","Core System & Foundation","System enforces Role-Based Access Control (RBAC) for all data models","System Administrator","As a System Administrator, I want the system to strictly enforce data access and modification rights based on a user's assigned role, so that sensitive company data is protected, operational integrity is maintained, and each user can only perform actions relevant to their job function.","Ensures data security and confidentiality, enforces the principle of least privilege, prevents unauthorized actions, reduces the risk of user error, and supports compliance with data protection regulations.","Must Have","8","[""US-004"",""US-026"",""US-037""]","[{""scenario"":""Dispatch Manager is restricted from financial and admin functions"",""given"":""A user is logged in with the 'Dispatch Manager' role"",""when"":""The user attempts to access User Management or generate a final customer Invoice"",""then"":""The system prevents the action, either by hiding the relevant menu items or by raising an access error.""},{""scenario"":""Driver has restricted, personal access (Record-Level Security)"",""given"":""A user is logged in with the 'Driver' role"",""when"":""The user navigates to the list of Trips"",""then"":""The user can ONLY see Trip records where they are the assigned driver.""},{""scenario"":""Driver is restricted from viewing sensitive financial data (Field-Level Security)"",""given"":""A user with the 'Driver' role is viewing a Trip form assigned to them"",""when"":""The Trip form is displayed"",""then"":""Fields such as 'Rate', 'Total Revenue', and 'Profitability' are not visible.""}]","[""Define `ir.model.access.csv` to set base CRUD permissions for each role on each model."",""Create `ir.rule` records (XML) to implement record-level security (e.g., driver sees own trips)."",""Use the `groups` attribute in XML views to implement field-level security.""]","[""All acceptance criteria validated and passing for all defined roles."",""Code for security groups, access rights, and record rules is implemented and peer-reviewed."",""Automated integration tests are written to verify key access restrictions.""]"
"US-069","Reporting & Analytics","Manager generates a Detailed Expense Report with comprehensive filtering and export capabilities","Manager","As a Manager (Dispatch Manager, Finance Officer, or Admin), I want to generate a detailed expense report with flexible filtering options (by date range, expense type, vehicle, and driver), so that I can perform in-depth analysis of operational costs, identify spending trends, and make informed decisions to improve financial efficiency.","Provides critical insights into operational costs, enabling better budget management, identification of cost-saving opportunities, and enhanced financial oversight.","Should Have","8","[""US-053"",""US-033"",""US-041"",""US-006"",""US-011""]","[{""scenario"":""Generate and filter the report by multiple criteria"",""given"":""The system contains multiple expense records"",""when"":""A Manager generates the 'Detailed Expense Report' and filters by 'Vehicle' and 'Expense Type' (e.g., 'Diesel')"",""then"":""The system displays a table containing only the expense records that match all applied filter criteria.""},{""scenario"":""Report data columns and summary"",""given"":""An expense report is displayed"",""when"":""The Manager views the report table"",""then"":""The table must include sortable columns for 'Expense Date', 'Trip ID', 'Vehicle Number', 'Driver Name', 'Expense Type', 'Amount', 'Approval Status', and a link to view the receipt.""},{""scenario"":""Export the filtered report to Excel and PDF"",""given"":""A filtered expense report is displayed"",""when"":""The Manager clicks the 'Export to Excel' or 'Export to PDF' button"",""then"":""The browser downloads a file containing all the data from the filtered report.""}]","[""Create a new custom report view using OWL."",""Develop an Odoo controller to handle data fetching with dynamic filtering."",""Implement a performant database query with multiple optional filters and joins."",""Implement backend logic for Excel and PDF export functionalities.""]","[""All acceptance criteria validated and passing."",""Unit test coverage for the new logic is at or above 80%."",""Performance testing against a large dataset confirms the NFRs are met."",""Security review confirms that access controls are correctly implemented.""]"
"US-068","Reporting & Analytics","Manager generates a Vehicle Profitability Report","Manager","As a Manager (Admin, Dispatch Manager, or Finance Officer), I want to generate a Vehicle Profitability Report that aggregates total revenue and total expenses for each vehicle over a specific period, so that I can analyze the financial performance of each asset, identify underperforming vehicles, and make informed decisions about fleet optimization and investment.","Enables data-driven asset management by providing clear financial performance indicators for each vehicle. This helps optimize fleet usage, justify asset replacement or disposal, and improve overall company profitability.","Should Have","8","[""US-006"",""US-026"",""US-033"",""US-041""]","[{""scenario"":""Accurate Revenue Calculation"",""given"":""A Vehicle Profitability Report is generated for a specific date range"",""when"":""I view the 'Total Revenue' column for a specific vehicle"",""then"":""The value must be the sum of the revenue from all trips assigned to that vehicle with a 'Completed' date that falls within the selected date range.""},{""scenario"":""Accurate and Comprehensive Expense Calculation"",""given"":""A Vehicle Profitability Report is generated"",""when"":""I view the 'Total Expenses' column for a specific vehicle"",""then"":""The value must be the sum of all 'Approved' trip-related expenses AND all non-trip-related expenses (e.g., Maintenance) associated with that vehicle within the date range.""},{""scenario"":""Accurate Profit and Margin Calculation"",""given"":""A Vehicle Profitability Report has been generated"",""when"":""I view the 'Net Profit' and 'Profit Margin (%)' columns"",""then"":""'Net Profit' must be calculated as (Total Revenue - Total Expenses), and 'Profit Margin (%)' must be calculated as ((Net Profit / Total Revenue) * 100).""}]","[""Create a new report action and view in Odoo."",""Develop a complex, performant SQL query or ORM aggregation to join and sum data from vehicle, trip, and expense models."",""Implement logic to handle both trip-related and non-trip-related expenses."",""Develop export functionality for the report data.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for all calculation logic."",""Performance testing confirms report generation is within acceptable time limits."",""Security access rules are implemented and tested.""]"
"US-067","Reporting & Analytics","Manager generates a Fuel Efficiency Report","Manager","As a Manager (Admin or Dispatch Manager), I want to generate a fuel efficiency report (km/liter) for each vehicle so that I can monitor fuel consumption, identify inefficient vehicles or driving patterns, and take corrective actions to control fuel costs.","Provides critical insights into a major operational expense (fuel), enabling data-driven decisions for vehicle maintenance, driver training, and cost reduction.","Should Have","5","[""US-006"",""US-053"",""US-054""]","[{""scenario"":""Generate report with valid data"",""given"":""A vehicle has at least two 'Diesel' expense entries with odometer readings within a selected period"",""when"":""I generate the 'Fuel Efficiency Report'"",""then"":""The report displays 'Total Distance' (last - first odometer reading), 'Total Fuel' (sum of diesel quantities), and correctly calculated 'Fuel Efficiency (km/L)'.""},{""scenario"":""Vehicle has fuel expenses but only one odometer reading"",""given"":""A vehicle has only one 'Diesel' expense in the period"",""when"":""I generate the report"",""then"":""The report shows 'Total Distance (km)' as 0, and 'Fuel Efficiency (km/L)' as '0' or 'N/A'.""},{""scenario"":""Vehicle has trips but no diesel expenses recorded"",""given"":""A vehicle has no 'Diesel' expenses in the period"",""when"":""I generate the report"",""then"":""The report shows 'Total Fuel (Liters)' as 0, and 'Fuel Efficiency (km/L)' as 'N/A' or an infinity symbol.""}]","[""Create a new report action and view in Odoo."",""Develop a data aggregation method to fetch 'Diesel' expenses for selected vehicles and date range."",""Implement logic to find the min and max odometer readings and sum fuel quantities."",""Handle division-by-zero errors gracefully.""]","[""All acceptance criteria validated and passing."",""Unit tests for the calculation logic achieve >80% code coverage."",""Performance testing confirms report generation is within the 15-second threshold."",""Security rules restricting access to authorized roles are verified.""]"
"US-066","Reporting & Analytics","Manager generates a Driver Performance Report","Dispatch Manager","As a Dispatch Manager or Admin, I want to generate a filterable Driver Performance Report with key metrics like on-time delivery percentage, total trips, and incentives earned, so that I can objectively evaluate driver performance, provide data-driven feedback, and identify opportunities for recognition or training.","Enables data-driven driver management, improves operational oversight, helps in identifying top performers and drivers needing support, and provides objective data for performance reviews.","Should Have","5","[""US-011"",""US-026"",""US-050"",""US-052"",""US-054""]","[{""scenario"":""Report Data Columns"",""given"":""The Driver Performance Report is displayed"",""when"":""The user views the report table"",""then"":""The table must contain columns for 'Driver Name', 'Total Trips Completed', 'On-Time Delivery %', 'Total Distance (km)', 'Average Fuel Efficiency (km/l)', 'Total Approved Expenses', 'Total Incentives Earned', and 'Number of Critical Events'.""},{""scenario"":""Calculation of On-Time Delivery Percentage"",""given"":""A driver has completed multiple trips with 'Expected Delivery Dates' and POD timestamps"",""when"":""The system calculates the 'On-Time Delivery %'"",""then"":""The value is calculated as `(Number of trips where POD submission timestamp <= Expected Delivery Date) / (Total number of 'Delivered' trips) * 100`.""},{""scenario"":""Handling of Missing Fuel Data"",""given"":""A driver has completed trips but has no 'Diesel' expense entries"",""when"":""The report is generated"",""then"":""The 'Average Fuel Efficiency (km/l)' column displays 'N/A'.""}]","[""Create a new report view in Odoo."",""Develop a performant aggregation query joining trips, drivers, expenses, and events."",""Implement Python logic to calculate derived metrics like on-time percentage and fuel efficiency."",""Handle edge cases like missing data for specific metrics gracefully.""]","[""All acceptance criteria validated and passing."",""Unit tests for all calculation logic implemented with >80% coverage."",""Performance testing confirms report generation is within the 5-second threshold."",""Security access controls are verified.""]"
"US-065","Monitoring & Alerts","Manager views and acknowledges critical alerts on the dashboard","Dispatch Manager","As a Dispatch Manager or Admin, I want to view a dedicated panel of critical system alerts on my dashboard and be able to acknowledge them, so that I can immediately identify and take action on urgent operational issues, ensuring timely resolution and clear accountability.","Improves operational responsiveness by centralizing critical, time-sensitive information. Reduces risk by ensuring urgent issues are seen and acted upon promptly.","Must Have","8","[""US-064"",""US-077"",""US-078"",""US-081""]","[{""scenario"":""Display of a new critical trip event alert"",""given"":""A driver has just logged a critical event ('Accident') for an active trip"",""when"":""The manager's dashboard loads or updates"",""then"":""The 'Critical Alerts' panel must display a new, unacknowledged alert with event details.""},{""scenario"":""Acknowledging a critical alert"",""given"":""I am viewing an unacknowledged alert"",""when"":""I click the 'Acknowledge' button for that alert"",""then"":""The alert's visual state changes to 'acknowledged', the button is disabled, and an audit entry is created.""},{""scenario"":""Navigating from an alert to its source record"",""given"":""I am viewing an alert related to a trip"",""when"":""I click on the main body of the alert"",""then"":""The system must navigate me directly to the detail form view of the associated trip record.""}]","[""Create a new Odoo model `tms.alert` to store alert information and state."",""Develop a new OWL component for the 'Critical Alerts' panel."",""Implement a controller endpoint to fetch alerts for the current user."",""Implement the backend logic for the 'Acknowledge' action, including audit logging."",""Use Odoo's bus system for real-time updates.""]","[""All acceptance criteria validated and passing."",""An end-to-end automated test for the primary success scenario is passing."",""The UI has been reviewed and approved by the Product Owner."",""The performance impact on dashboard loading is within acceptable limits.""]"
"US-064","Reporting & Analytics","Manager views the main dashboard with operational and financial KPIs","Manager","As a Manager (Admin or Dispatch Manager), I want to view a real-time, consolidated dashboard with key operational and financial widgets, so that I can quickly assess the health of the business, identify immediate priorities, and make informed decisions without needing to run multiple reports.","Provides an at-a-glance overview of business health, enabling faster, data-driven decision-making and proactive identification of operational issues.","Must Have","8","[""US-006"",""US-026"",""US-037"",""US-053""]","[{""scenario"":""Vehicle Status widget displays correct data"",""given"":""I am viewing the main dashboard"",""when"":""The 'Vehicle Status' widget finishes loading"",""then"":""I see a pie chart correctly representing the proportion of all 'Active' vehicles in 'Available', 'On-Trip', and 'In-Maintenance' statuses.""},{""scenario"":""Operational and Financial KPI cards display correct values"",""given"":""I am viewing the main dashboard"",""when"":""The KPI cards finish loading"",""then"":""I see distinct KPI cards for 'Pending Deliveries', 'Delayed Trips', 'Pending Payment Collections', 'Total Revenue (MTD)', and 'Total Expenses (MTD)' displaying correct values.""},{""scenario"":""Clicking on a KPI card navigates to a relevant filtered list"",""given"":""The KPI cards are displayed"",""when"":""I click on the 'Delayed Trips' KPI card"",""then"":""I am navigated to the Trip list view, pre-filtered to show only trips that are 'In-Transit' and past their 'Expected Delivery Date'.""}]","[""Create a custom Odoo dashboard view (`board.board`)."",""Develop OWL components for each widget (pie chart, KPI cards)."",""Create controller endpoints to serve aggregated data for each widget."",""Write performant ORM/SQL queries for data aggregation.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for all KPI calculation logic with >80% coverage."",""Performance requirements (LCP < 3s) verified."",""Dashboard is confirmed to be responsive on mobile viewport.""]"
"US-063","Reporting & Analytics","Manager exports a report to Excel or PDF for offline use","Manager","As a Manager (Admin, Dispatch Manager, or Finance Officer), I want to export any report I am viewing to either an Excel or PDF file, so that I can perform offline analysis, share the data with stakeholders, and archive records for compliance and historical purposes.","Enables data portability for offline analysis, sharing with external stakeholders, and creating physical or digital archives for auditing and record-keeping.","Must Have","5","[""US-036"",""US-045""]","[{""scenario"":""Successful export of filtered data to Excel"",""given"":""I am viewing a report and have filtered it by a specific customer and date range"",""when"":""I click the 'Export to Excel' button"",""then"":""The browser initiates a download of an '.xlsx' file containing data that exactly matches the filtered data on screen.""},{""scenario"":""Successful export of filtered data to PDF with proper formatting"",""given"":""I am viewing a filtered report"",""when"":""I click the 'Export to PDF' button"",""then"":""The browser downloads a '.pdf' file which includes a title, a summary of applied filters, and the data in a clean, paginated table.""},{""scenario"":""Attempting to export a report with no data"",""given"":""I am viewing a report with filters that result in zero records"",""when"":""I click an export button"",""then"":""The system displays a notification 'There is no data to export' and does not generate a file.""}]","[""Create a generic, reusable export mechanism for Odoo reports."",""Implement a controller that takes report data and generates an XLSX file using a library like `openpyxl`."",""Implement a controller that renders a QWeb template to a PDF file."",""Add 'Export' buttons to all relevant report views.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the export logic."",""Performance for exporting 1,000 records verified to be under 10 seconds."",""Security requirements validated by testing with different user roles.""]"
"US-062","Core System & Foundation","Admin schedules and broadcasts advance notification for planned system maintenance","All active system users","As an active system user, I want to receive a clear and timely notification about upcoming planned maintenance at least 24 hours in advance, so that I can plan my work accordingly and avoid disruption to my tasks.","Minimizes operational disruption by allowing users to plan around system downtime. Increases user trust and satisfaction through proactive and professional communication.","Should Have","5","[""US-004"",""US-060""]","[{""scenario"":""Admin successfully schedules a maintenance notification with sufficient advance notice"",""given"":""The Admin is on the 'Schedule Maintenance' interface"",""when"":""The Admin creates a new maintenance notification with a start time 48 hours in the future"",""then"":""A notification is immediately sent to all 'Active' users via both in-app and email channels.""},{""scenario"":""Admin attempts to schedule maintenance with less than 24 hours notice"",""given"":""The Admin is on the 'Schedule Maintenance' form"",""when"":""The Admin sets the start time to 12 hours from now and tries to save"",""then"":""The system prevents saving and displays an error: 'Maintenance must be scheduled at least 24 hours in advance.'""},{""scenario"":""Admin cancels a previously scheduled maintenance window"",""given"":""A maintenance window has been previously scheduled and announced"",""when"":""The Admin triggers a 'Cancel' action"",""then"":""A new notification is sent to all 'Active' users stating that the planned maintenance has been canceled.""}]","[""Create a new Odoo model `tms.maintenance.notification`."",""Create form and tree views for managing maintenance notifications."",""Implement business logic for the 24-hour rule validation."",""Integrate with the notification system to broadcast messages to all active users.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for business logic with >80% coverage."",""Performance requirements verified (asynchronous sending)."",""Security requirements validated (Admin-only access).""]"
"US-061","Monitoring & Alerts","User configures notification preferences for type and channel","Authenticated system user","As an authenticated system user, I want to access a settings screen where I can select which types of notifications I receive and choose the delivery channel (in-app or email) for each type, so that I can control the volume of alerts and focus on information relevant to my role.","Improves user satisfaction and efficiency by reducing 'alert fatigue'. Ensures that critical notifications are not missed due to an overwhelming volume of less important ones.","Could Have","5","[""US-058"",""US-060""]","[{""scenario"":""System respects the user's configured preferences when sending notifications"",""given"":""I have configured my preferences to receive 'Low Card Balance' alerts via 'In-App' but NOT via 'Email'"",""when"":""A system event occurs that triggers a 'Low Card Balance' alert targeted to me"",""then"":""I receive an in-app notification, but I do not receive an email.""},{""scenario"":""Notification options are filtered based on user role"",""given"":""I am logged in as a 'Driver'"",""when"":""I view my 'Notification Preferences' screen"",""then"":""I do not see options for administrative or financial alerts like 'GSP API Failure'.""},{""scenario"":""New users have a set of default notification preferences"",""given"":""An Admin creates a new user account"",""when"":""The new user logs in for the first time"",""then"":""A predefined set of default preferences is already configured, with critical alerts enabled for all channels.""}]","[""Create a new Odoo model `tms.notification.preference` linked to `res.users`."",""Create a new settings view under the user profile."",""Refactor all notification trigger points to query the preference model before dispatching an alert."",""Implement logic to map user roles to available notification types.""]","[""All acceptance criteria validated and passing."",""Integration testing completed to confirm preferences are respected by the notification system."",""Security requirement (users can only edit their own preferences) is validated.""]"
"US-060","Monitoring & Alerts","User receives in-app and email notifications for critical events","System User","As a System User (e.g., Dispatch Manager, Finance Officer, Driver), I want to receive timely notifications for important system events via an in-app notification center and email, so that I can stay informed and take prompt action on critical operational, financial, and compliance-related matters.","Improves operational responsiveness by proactively alerting users to critical events, enhances compliance by warning of upcoming deadlines, and increases efficiency by reducing the need for manual system checks.","Must Have","8","[""US-050"",""US-009"",""US-031""]","[{""scenario"":""Manager receives notification for a critical trip event"",""given"":""A Dispatch Manager is logged into the TMS"",""when"":""A driver logs a critical event (e.g., 'Accident')"",""then"":""The manager's in-app notification icon immediately shows an unread badge, and an email is sent with a direct link to the trip record.""},{""scenario"":""Driver receives notification for a canceled trip"",""given"":""A driver is assigned to a trip with status 'Assigned'"",""when"":""A Dispatch Manager cancels that trip"",""then"":""The assigned driver receives an in-app notification and an email stating the trip has been canceled.""},{""scenario"":""System handles email service failure"",""given"":""The external SMTP email service is unavailable"",""when"":""A notifiable event occurs"",""then"":""The in-app notification is still delivered successfully, and the system logs an error for the email delivery failure.""}]","[""Develop a centralized, extensible notification service."",""Develop an OWL component for the in-app notification center."",""Integrate with Odoo's web bus for real-time UI updates."",""Create and configure email templates for different notification types.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the notification service and trigger logic."",""The OWL component for the notification center is implemented and approved."",""Performance requirements for asynchronous processing are verified.""]"
"US-059","Core System & Foundation","System automatically terminates user session after a configurable period of inactivity","Authenticated system user","As an authenticated system user, I want my session to automatically terminate after a configurable period of inactivity, so that sensitive company and customer data is protected from unauthorized access on an unattended device.","Enhances system security by mitigating the risk of unauthorized access to sensitive data from an unattended, logged-in terminal. Supports compliance with data protection regulations.","Must Have","5","[""US-058"",""US-022""]","[{""scenario"":""Successful Timeout and Logout"",""given"":""The session timeout is configured to 15 minutes"",""when"":""The user remains inactive for 15 minutes"",""then"":""The user is automatically logged out, their session is invalidated on the server, and they are redirected to the login page.""},{""scenario"":""Session Extension from Warning Dialog"",""given"":""The session timeout warning modal is displayed"",""when"":""The user clicks the 'Stay Logged In' button"",""then"":""The modal closes, the inactivity timer is reset, and the user can continue their work.""},{""scenario"":""Server-Side Session Invalidation"",""given"":""A user's session has timed out"",""when"":""A malicious actor attempts to reuse the old session token to make a direct API call"",""then"":""The server rejects the request with an authentication error.""}]","[""Implement a client-side inactivity timer in JavaScript/OWL."",""Create an OWL component for the warning modal dialog."",""Integrate with a server-side Odoo controller to handle session extension and termination."",""Ensure server-side session data is properly invalidated on timeout.""]","[""All acceptance criteria validated and passing."",""Automated E2E tests for the timeout and session extension flow are implemented."",""Security requirement for server-side session invalidation is explicitly tested and verified."",""Documentation for the Admin setting is added to the Administrator Guide.""]"
"US-058","Core System & Foundation","User logs into the system with credentials","Registered System User","As a Registered System User (Admin, Dispatch Manager, Finance Officer, or Driver), I want to securely log into the Transport Management System using my email and password, so that I can gain access to the dashboards, features, and data relevant to my specific role.","Enables secure, role-based access to the system, which is the primary gateway for all system functionality.","Must Have","1","[""US-001""]","[{""scenario"":""Successful login with valid credentials"",""given"":""I am a registered user with an active account"",""when"":""I enter my correct email and password and click 'Log In'"",""then"":""I am successfully authenticated and redirected to my role-specific dashboard.""},{""scenario"":""Login attempt with an incorrect password"",""given"":""I have entered a valid email for an active account"",""when"":""I enter an incorrect password"",""then"":""The system displays a generic error message 'Invalid email or password' and I remain on the login page.""},{""scenario"":""Login attempt with an inactive account"",""given"":""My account has been deactivated by an Admin"",""when"":""I enter my correct email and password"",""then"":""The system prevents login and displays a specific error: 'Your account is inactive. Please contact an administrator.'""}]","[""Leverage Odoo's standard authentication functionality."",""Implement a post-login controller or hook to redirect users to their role-specific dashboards."",""Ensure the login page is themed and responsive.""]","[""All acceptance criteria validated and passing."",""The login page UI is verified to be responsive."",""Security checks (HTTPS, no user enumeration) have been manually verified."",""Accessibility of the login form has been validated against WCAG 2.1 AA.""]"
"US-057","Driver Portal","Driver views their personal compensation details","Driver","As a Driver, I want to access a clear and simple view of my submitted expenses and earned incentives, so that I can track my personal earnings and reimbursements without needing to contact a manager.","Increases driver satisfaction and trust through financial transparency. Reduces administrative workload by providing a self-service channel for drivers to check payment statuses.","Should Have","5","[""US-053"",""US-033"",""US-034""]","[{""scenario"":""Driver views their expense reimbursements list"",""given"":""A Driver has submitted multiple expenses"",""when"":""The Driver navigates to the 'My Earnings' page"",""then"":""A list of all expenses submitted by that driver is displayed, showing Trip ID, Expense Type, Amount, Submission Date, and Status.""},{""scenario"":""Driver views summary totals for unpaid compensation"",""given"":""The Driver is on the 'My Earnings' page"",""when"":""The page loads"",""then"":""The page must display a summary total for 'Total Approved Expenses (Unpaid)' and 'Total Incentives Earned (Unpaid)'.""},{""scenario"":""Driver cannot view another driver's compensation data"",""given"":""Driver A is logged into the system"",""when"":""Driver A attempts to access the compensation data for Driver B"",""then"":""The system must enforce security rules and prevent access.""}]","[""Create a new, secure API endpoint in Odoo to fetch compensation data for the logged-in driver."",""Build a new responsive UI component in OWL for the Driver Portal."",""Implement performant backend logic for calculating summary totals.""]","[""All acceptance criteria validated and passing."",""Security test case for data segregation is created and passed."",""Performance of the API endpoint is benchmarked and meets requirements."",""UI component is fully responsive and approved by a UX designer or Product Owner.""]"
"US-056","Driver Portal","Driver submits a leave application via the web portal","Driver","As a Driver, I want to submit a leave application through the mobile web portal, specifying the dates and type of leave, so that I can formally request time off and my availability is accurately reflected in the system for dispatch planning.","Streamlines the leave request process, reduces administrative overhead, improves resource planning by providing clear visibility into driver availability, and prevents accidental assignment of drivers on approved leave.","Could Have","5","[""US-046"",""US-011""]","[{""scenario"":""Successful submission of a valid leave application"",""given"":""I am on the 'New Leave Request' page"",""when"":""I select a 'Leave Type', a valid future 'Start Date' and 'End Date', and click 'Submit'"",""then"":""The system creates a new leave application record with a 'Pending' status and displays a success message.""},{""scenario"":""Attempt to submit a leave request that overlaps with an existing request"",""given"":""I have an existing leave request from July 10th to July 15th"",""when"":""I try to submit a new leave request for a period that overlaps, such as July 12th to July 17th"",""then"":""The system prevents submission and displays an error: 'This request overlaps with an existing leave application'.""},{""scenario"":""Attempt to submit a leave request that conflicts with an assigned trip"",""given"":""I am assigned to a trip from July 5th to July 8th"",""when"":""I try to submit a new leave request for July 6th to July 7th"",""then"":""The system prevents submission and displays an error: 'This request conflicts with assigned trip [Trip ID].'""}]","[""Create a new Odoo model `tms.leave.application`."",""Develop a custom web portal interface using OWL for the form and history view."",""Implement server-side validation logic for date ranges, overlaps, and conflicts with existing trips.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for all validation logic, achieving >80% coverage."",""Security requirements validated (a driver cannot see another driver's leave)."",""User interface reviewed and approved for mobile usability.""]"
"US-055","Driver Portal","Driver submits a request for a cash advance","Driver","As a Driver, I want to submit a request for a cash advance through the mobile portal so that I can get the necessary funds for my trip expenses in a timely and trackable manner.","Streamlines the advance request process, moving it from informal channels to a trackable digital system. Improves financial accountability and reduces funding delays for the driver.","Could Have","3","[""US-046"",""US-011"",""US-060""]","[{""scenario"":""Successful submission of a new advance request"",""given"":""I am a logged-in Driver on the 'Advance Request' page"",""when"":""I enter a valid positive amount, provide a reason, and click 'Submit Request'"",""then"":""The system creates a new advance request record with status 'Pending' and displays a success message.""},{""scenario"":""Attempt to submit a request with an invalid amount"",""given"":""I am on the 'Advance Request' page"",""when"":""I enter a zero or negative amount and try to submit"",""then"":""The system prevents submission and displays an error: 'Amount must be greater than zero.'""},{""scenario"":""Driver views their history of advance requests"",""given"":""I have previously submitted one or more advance requests"",""when"":""I navigate to the 'Advance Request' section"",""then"":""I can see a list of all my past and current requests, displaying the request date, amount, and current status.""}]","[""Create a new Odoo model `tms.advance.request` with state management."",""Develop a mobile-first OWL component for the form and list view."",""Integrate with the notification system to alert approvers of new requests.""]","[""All acceptance criteria are validated and passing."",""Unit tests are written for the new model and logic."",""The user interface is reviewed and approved for mobile usability."",""Security checks (access control) are validated.""]"
"US-054","Driver Portal","Driver includes odometer reading and fuel quantity for diesel expenses","Driver","As a Driver, I want to enter the vehicle's current odometer reading and the quantity of fuel purchased when I submit a 'Diesel' type expense, so that the company can accurately track fuel efficiency and I can get my expense claim processed correctly.","Enables accurate fuel efficiency (km/liter) tracking for the fleet, which is critical for cost control, vehicle maintenance planning, and validating fuel purchases.","Must Have","2","[""US-053"",""US-027""]","[{""scenario"":""UI: Conditional field visibility"",""given"":""A Driver is on the 'Submit Expense' form"",""when"":""The Driver selects 'Diesel' as the expense type"",""then"":""The 'Odometer Reading' and 'Fuel Quantity' fields become visible and required.""},{""scenario"":""Error Condition: Odometer reading is lower than the previous reading"",""given"":""A vehicle's last recorded odometer reading was 50,000 km"",""when"":""The Driver enters an odometer reading of 49,999 and attempts to submit"",""then"":""The system prevents submission and displays an error: 'Odometer reading must be greater than the last recorded value of 50,000 km.'""},{""scenario"":""Edge Case: First diesel expense for a new vehicle"",""given"":""A Driver is submitting the first 'Diesel' expense for a vehicle with no prior history"",""when"":""The Driver enters a valid odometer reading and fuel quantity"",""then"":""The system accepts the submission without performing the 'greater than previous' validation.""}]","[""Extend the `tms.expense` model with odometer and quantity fields."",""Update the OWL expense form with conditional rendering logic."",""Implement a server-side constraint (`@api.constrains`) to validate the odometer reading.""]","[""All acceptance criteria validated and passing."",""Unit tests for the backend validation logic are implemented with >80% coverage."",""Performance of the odometer validation query is verified to be within acceptable limits.""]"
"US-053","Driver Portal","Driver submits a trip-related expense with receipt","Driver","As a Driver, I want to submit a trip-related expense through my mobile web portal by selecting the expense type, entering the amount, and uploading a photo of the receipt, so that I can get reimbursed for my on-road expenses and the company can accurately track the total cost of the trip.","Enables accurate and timely tracking of trip-related expenditures, which is crucial for calculating trip profitability, managing driver reimbursements, and maintaining financial records.","Must Have","5","[""US-046"",""US-047"",""US-032""]","[{""scenario"":""Successful submission of a standard expense (e.g., Toll)"",""given"":""I am a logged-in Driver viewing an 'In-Transit' trip"",""when"":""I navigate to 'Add Expense', select 'Toll', enter '250.00', upload a valid receipt, and press 'Submit'"",""then"":""The system creates a new expense record linked to my trip with a status of 'Submitted' and stores the receipt.""},{""scenario"":""Attempt to submit with missing required fields"",""given"":""I am on the 'Add Expense' form"",""when"":""I leave the 'Amount' field blank and press 'Submit'"",""then"":""The system prevents submission and displays an error: 'Amount is a required field'.""},{""scenario"":""Attempt to upload an invalid file type for the receipt"",""given"":""I am on the 'Add Expense' form"",""when"":""I attempt to upload a '.docx' file"",""then"":""The system rejects the file and displays an error: 'Invalid file type. Please upload a JPG, PNG, or PDF.'""}]","[""WI-310: Implement Expense Submission Form (OWL)"",""WI-311: Implement Backend for Expense Submission"",""Create the `tms.expense` Odoo model."",""Configure Odoo's file storage to use Amazon S3.""]","[""All acceptance criteria validated and passing."",""Integration testing completed successfully (form -> DB -> S3)."",""User interface reviewed and approved for mobile usability."",""Security requirements validated (cannot submit expense for another driver's trip).""]"
"US-052","Driver Portal","Driver uploads a Proof of Delivery (POD)","Driver","As a Driver, I want to upload a Proof of Delivery (either a photo or a captured e-signature) and enter the recipient's name, so that I can formally confirm the delivery is complete, which updates the trip status to 'Delivered' and initiates the billing process.","Provides auditable proof of service completion, which is a prerequisite for customer invoicing. Provides real-time operational visibility by updating the trip status instantly.","Must Have","5","[""US-046"",""US-047"",""US-049""]","[{""scenario"":""Driver successfully uploads a POD photo"",""given"":""A Driver is viewing an 'In-Transit' trip"",""when"":""The Driver selects 'Upload POD', chooses 'Photo', selects an image, enters the recipient's name, and submits"",""then"":""The system uploads the photo, associates it with the trip, records the recipient's name and timestamp, and changes the trip status to 'Delivered'.""},{""scenario"":""Driver successfully captures an e-signature POD"",""given"":""A Driver is viewing an 'In-Transit' trip"",""when"":""The Driver selects 'E-Signature', captures a signature, enters the recipient's name, and submits"",""then"":""The system converts the signature to an image, uploads it, and changes the trip status to 'Delivered'.""},{""scenario"":""Submission without a recipient name"",""given"":""A Driver is on the POD submission screen"",""when"":""The Driver attempts to submit without entering the recipient's name"",""then"":""The system prevents submission and displays an error: 'Recipient name is required'.""}]","[""WI-303: Implement Driver Trip Status Transitions (POD part)"",""Integrate a JavaScript library for e-signature capture into the OWL component."",""Implement a robust backend controller to handle file upload to S3 and atomically update the trip status.""]","[""All acceptance criteria validated and passing."",""E2E testing completed successfully in the staging environment."",""User interface reviewed and approved on both small and large mobile screens."",""Security review confirms secure file handling and access control.""]"
"US-051","Driver Portal","Driver reports a trip halt","Driver","As a Driver, I want to report that my trip is halted and provide a mandatory reason, so that the dispatch team is immediately aware of the delay and I have a formal record of the interruption.","Provides real-time visibility of operational delays to the dispatch team, enabling proactive customer communication and better logistics planning. Creates an auditable log of trip interruptions for performance analysis.","Should Have","3","[""US-046"",""US-047"",""US-049"",""US-065""]","[{""scenario"":""Driver successfully reports a trip halt"",""given"":""I am a Driver viewing my active trip which is in 'In-Transit' status"",""when"":""I tap 'Report Halt', enter a reason (e.g., 'Unexpected road closure'), and tap 'Submit'"",""then"":""The system records a 'Halt' event against the trip and a high-priority alert is generated for the Dispatch Manager.""},{""scenario"":""Driver attempts to report a halt without a reason"",""given"":""I am on the 'Report Halt' screen"",""when"":""I tap 'Submit' without entering a reason"",""then"":""The submission is blocked and a validation error is displayed: 'A reason for the halt is mandatory'.""},{""scenario"":""The 'Report Halt' option is not available for non-active trips"",""given"":""I am a Driver viewing a trip that is 'Assigned' or 'Delivered'"",""when"":""I view the trip details"",""then"":""The 'Report Halt' button is not visible or is disabled.""}]","[""Create a 'Report Halt' button on the active trip view in the driver portal."",""Create an OWL component for the halt submission form/modal."",""Develop a backend Odoo controller to receive the halt report, log it as a trip event, and trigger a notification to managers.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the backend controller with >80% coverage."",""Integration testing completed to ensure the alert is generated correctly."",""User interface reviewed and approved for mobile usability.""]"
"US-050","Driver Portal","Driver logs a trip event with an optional photo","Driver","As a Driver, I want to log specific events for my active trip, such as 'Accident' or 'Fueling', with an optional photo, so that I can maintain an accurate trip log and immediately inform the dispatch team of important updates or disruptions.","Provides real-time operational visibility into on-road events, enables faster response to critical incidents, and creates a detailed, auditable history for each trip.","Must Have","5","[""US-047"",""US-049"",""US-065"",""US-077""]","[{""scenario"":""Driver logs a non-critical event without a photo"",""given"":""I am a Driver with an active trip in 'In-Transit' status"",""when"":""I log an event of type 'Fueling' without a photo"",""then"":""A new event record is created and associated with my trip, and the trip status remains 'In-Transit'.""},{""scenario"":""Driver logs a critical event with a photo, triggering a status change and alert"",""given"":""I am a Driver with an active trip in 'In-Transit' status"",""when"":""I log an event of type 'Accident' with a photo"",""then"":""A new event record is created with the photo, the trip's status automatically changes to 'On Hold', and a high-priority alert appears on the Admin/Manager dashboard.""},{""scenario"":""Attempting to log an event without an active trip"",""given"":""I am a Driver and I do not have any trips with the status 'In-Transit'"",""when"":""I view my list of trips"",""then"":""The option to 'Log Event' is not available for any trips.""}]","[""WI-304: Implement Trip Event Logging for Drivers"",""Create the `tms.trip.event` model."",""Develop an OWL component and controller for the event logging form."",""Implement backend logic to conditionally change trip status and trigger alerts based on event type.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the business logic with >80% coverage."",""Integration testing of the form submission, status change, and alert generation is completed."",""User interface reviewed and approved for mobile usability.""]"
"US-049","Driver Portal","Driver starts a trip from the mobile portal","Driver","As a Driver, I want to be able to mark a trip as 'In-Transit' when I begin my journey, so that the dispatch team is immediately aware that the delivery has started and the system can begin tracking my progress accurately.","Provides real-time operational visibility to dispatchers, enables accurate transit time tracking, and creates a verifiable audit trail for trip milestones.","Must Have","2","[""US-027"",""US-046"",""US-047"",""US-050""]","[{""scenario"":""Driver successfully starts an assigned trip"",""given"":""I am a Driver viewing a trip assigned to me with status 'Assigned'"",""when"":""I tap the 'Start Trip' button and confirm"",""then"":""The system updates the trip's status to 'In-Transit' and logs a 'Trip Start' event.""},{""scenario"":""Action is unavailable for trips not in 'Assigned' status"",""given"":""I am a Driver viewing a trip"",""when"":""The trip's status is anything other than 'Assigned'"",""then"":""The 'Start Trip' button must not be visible or must be disabled.""},{""scenario"":""Backend authorization check"",""given"":""I am a logged-in Driver"",""when"":""I attempt to trigger the 'start trip' action for a trip that is not assigned to me"",""then"":""The system must reject the request with an authorization error.""}]","[""WI-303: Implement Driver Trip Status Transitions (Start Trip part)"",""Add a 'Start Trip' button to the driver's trip detail OWL component."",""Create a secure Odoo controller endpoint that validates the request and updates the trip status.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the backend logic with >80% coverage."",""E2E test scenario for the happy path is automated and passing."",""Security requirements (server-side authorization) validated.""]"
"US-048","Driver Portal","Driver views and downloads documents for their currently assigned vehicle","Driver","As a Driver, I want to easily view and download all required legal documents for the specific vehicle I am currently driving, so that I can quickly present them to authorities during on-road checks, ensuring compliance and avoiding delays.","Enhances on-road compliance, reduces the risk of fines and operational delays, and mitigates issues from lost or damaged physical documents.","Should Have","5","[""US-009"",""US-027"",""US-047""]","[{""scenario"":""Successful viewing and downloading of vehicle documents"",""given"":""A Driver is assigned to an active trip with a specific vehicle"",""when"":""The Driver navigates to the 'Vehicle Documents' section for their current trip"",""then"":""The system displays a list of all documents for that vehicle and provides options to view and download each.""},{""scenario"":""Display of expired vehicle documents"",""given"":""A Driver is viewing the document list"",""when"":""One of the documents has an expiry date in the past"",""then"":""The expired document is clearly and visually distinguished from valid documents.""},{""scenario"":""Security check for unauthorized document access"",""given"":""A Driver is assigned to a trip with Vehicle 'A'"",""when"":""The Driver attempts to access the documents for Vehicle 'B'"",""then"":""The system must deny access and return an authorization error.""}]","[""Create a new OWL component and controller endpoint for the 'Vehicle Documents' view."",""Implement a robust `ir.rule` to ensure a driver can only access documents for the vehicle on their currently active trip."",""Integrate with S3 to generate secure, pre-signed URLs for document access.""]","[""All acceptance criteria validated and passing."",""Unit tests covering the security rule and data retrieval logic are implemented."",""Automated E2E tests for the happy path and the negative security scenario are passing."",""Security review confirms that the access control mechanism is robust.""]"
"US-047","Driver Portal","Driver views their list of current and past trips","Driver","As a Driver, I want to view a clear, mobile-friendly list of my current and past trips, so that I can easily see my immediate assignments and review my work history.","Improves operational efficiency by providing drivers with immediate, clear access to their assignments, reducing communication overhead with dispatch.","Must Have","3","[""US-046"",""US-027""]","[{""scenario"":""Default view shows current trips"",""given"":""A Driver logs into the mobile web portal"",""when"":""The driver navigates to the 'My Trips' page"",""then"":""A list of their 'Current' trips is displayed by default, containing only trips with 'Assigned' or 'In-Transit' status.""},{""scenario"":""Switching to view past trips"",""given"":""A Driver is on the 'My Trips' page"",""when"":""The driver selects the 'Past Trips' view"",""then"":""The list updates to display only their trips with 'Delivered', 'Completed', or 'Canceled' status.""},{""scenario"":""Data is properly scoped to the logged-in driver"",""given"":""A Driver is logged in"",""when"":""They access the 'My Trips' page"",""then"":""The system must ensure that only trips explicitly assigned to that driver are ever displayed.""}]","[""WI-302: Implement Driver's Trip List View (OWL)"",""Create an Odoo controller to serve trip data, respecting record rules."",""Develop an OWL component with tabs for 'Current' and 'Past' trips."",""Implement pagination or lazy loading for the 'Past Trips' list.""]","[""All acceptance criteria validated and passing."",""E2E tests for the happy path and 'no trips' scenarios are implemented and passing."",""UI has been manually tested and approved on both small and large mobile viewports."",""Backend API endpoint is confirmed to be secure via record rules.""]"
"US-046","Driver Portal","Driver logs into the mobile-friendly web portal","Driver","As a Driver, I want to securely log into a simple, mobile-friendly web portal using my credentials, so that I can access my assigned trips, submit expenses, and update my status while on the go.","Enables drivers to access the system, which is the primary entry point for all field-based data capture (trip status, expenses, PODs).","Must Have","5","[""US-001"",""US-004"",""US-014"",""US-047""]","[{""scenario"":""Successful login with valid credentials"",""given"":""A user with the 'Driver' role exists"",""when"":""The driver enters their correct username and password and taps 'Log In'"",""then"":""The system validates the credentials and redirects the driver to their main portal dashboard.""},{""scenario"":""Login page responsiveness on mobile device"",""given"":""A user is accessing the login page"",""when"":""The page is viewed on a device with a screen width of 360px"",""then"":""All UI elements are clearly visible, usable, and correctly formatted without horizontal scrolling.""}]","[""WI-301: Create Driver Portal Base Structure and Routes"",""Create a custom OWL view and controller for the login page."",""Ensure the custom UI securely integrates with Odoo's core authentication.""]","[""All acceptance criteria are validated and passing."",""The feature has been successfully tested on representative iOS and Android devices/emulators."",""Security review confirms adherence to security NFRs."",""Accessibility scan confirms WCAG 2.1 AA compliance.""]"
"US-045","Reporting & Analytics","Finance Officer generates a suite of financial reports for analysis","Finance Officer","As a Finance Officer, I want to access and generate a suite of financial reports (including an Aging Report, Customer Revenue, and Profitability reports) with filtering and export capabilities, so that I can effectively analyze the company's financial performance, manage receivables, and provide accurate insights to support strategic business decisions.","Provides critical financial insights for strategic decision-making, improves cash flow management by tracking overdue payments, identifies profitable customers and vehicles, and ensures financial accountability.","Must Have","8","[""US-037"",""US-039"",""US-033"",""US-026""]","[{""scenario"":""Generate Outstanding Invoices (Aging) Report"",""given"":""There are multiple unpaid invoices with varying due dates"",""when"":""I generate the 'Outstanding Invoices Report'"",""then"":""The report displays all invoices with an outstanding balance, categorized into aging buckets: 0-30, 31-60, 61-90, and 90+ days overdue.""},{""scenario"":""Generate Trip Profitability Report"",""given"":""Multiple trips have been completed with associated revenue and 'Approved' expenses"",""when"":""I generate the 'Trip Profitability Report' with a date range filter"",""then"":""The report lists individual trips, showing Total Revenue, Total Approved Expenses, and Net Profit for each.""},{""scenario"":""Export any generated report to PDF and Excel"",""given"":""I have successfully generated a financial report"",""when"":""I click the 'Export to PDF' or 'Export to Excel' button"",""then"":""The system downloads a file in the selected format containing the exact data displayed.""}]","[""Create Odoo actions and views for each financial report."",""Design performant database queries to aggregate data from multiple models (trips, invoices, payments, expenses)."",""Implement robust PDF and Excel export functionality.""]","[""All acceptance criteria validated and passing."",""Unit tests for all calculation logic implemented with >80% coverage."",""Performance requirements verified with a large dataset."",""Security requirements validated by testing access with unauthorized roles.""]"
"US-044","Financial Management & Invoicing","Finance Officer views the profitability of a single trip","Finance Officer","As a Finance Officer, I want to view the calculated profitability for any given trip, broken down into total revenue and the sum of all approved expenses, so that I can accurately assess the financial performance of individual jobs.","Provides granular financial insight into individual trips, enabling the business to identify profitable vs. unprofitable routes, customers, or services.","Must Have","2","[""US-026"",""US-053"",""US-033"",""US-070""]","[{""scenario"":""Profitability calculation for a profitable trip"",""given"":""I am viewing a 'Completed' trip with a revenue of ₹50,000 and two 'Approved' expenses totaling ₹15,000"",""when"":""I open the form view of this trip"",""then"":""I see a section displaying 'Total Revenue: ₹50,000', 'Total Approved Expenses: ₹15,000', and 'Net Profitability: ₹35,000'.""},{""scenario"":""Calculation correctly ignores non-approved expenses"",""given"":""A trip has one 'Approved' expense of ₹8,000, one 'Pending' expense of ₹1,500, and one 'Rejected' expense of ₹500"",""when"":""I view the profitability section"",""then"":""The 'Total Approved Expenses' is displayed as ₹8,000.""},{""scenario"":""Role-based access control for profitability data"",""given"":""I am logged in as a Driver"",""when"":""I open the view for my assigned trip"",""then"":""I must not be able to see the 'Total Revenue', 'Total Approved Expenses', or 'Net Profitability' fields.""}]","[""WI-410: Implement Trip Profitability Calculation using computed fields."",""Add a dedicated 'Profitability' section to the Trip form view."",""Use Odoo's group-based view inheritance to hide the section from the Driver role.""]","[""All acceptance criteria validated and passing."",""Unit tests for the calculation logic have been written and achieve >80% coverage."",""A QA engineer has manually verified the UI and security rules for all relevant user roles.""]"
"US-043","Financial Management & Invoicing","Finance Officer manually updates a card's balance and sets its low-balance threshold","Finance Officer","As a Finance Officer, I want to manually update the current balance and set a low-balance notification threshold for each FASTag and diesel card, so that I can proactively manage card funds and receive automated alerts.","Enables proactive management of prepaid card funds, preventing service disruptions that can delay trips. This supports operational continuity and reduces financial risk.","Should Have","1","[""US-042""]","[{""scenario"":""Successfully update a card's balance and threshold"",""given"":""I am a Finance Officer viewing a card's form"",""when"":""I enter a new 'Current Balance' and a 'Low-Balance Threshold' and save"",""then"":""The system saves the new values, and they are displayed on the record.""},{""scenario"":""Updating balance below the threshold triggers an alert"",""given"":""A card has a 'Low-Balance Threshold' set to 1000"",""when"":""I update the 'Current Balance' to 999 and save"",""then"":""The system must trigger the low-balance alert mechanism for this card.""},{""scenario"":""Attempt to save with a negative balance"",""given"":""I am editing a card record"",""when"":""I enter '-100' into the 'Current Balance' field and attempt to save"",""then"":""The system prevents the save and displays a validation error.""}]","[""Add `Current Balance` and `Low-Balance Threshold` fields to the `tms.card` model and view."",""Implement a Python constraint (`@api.constrains`) for non-negative validation."",""Add logic in the `write()` method to check the balance against the threshold and trigger an alert.""]","[""All acceptance criteria validated and passing."",""Unit tests covering validation logic and the alert trigger condition are implemented."",""Security rules restricting access to Finance Officers/Admins are implemented and verified.""]"
"US-042","Financial Management & Invoicing","Finance Officer creates and manages records for FASTag and diesel cards","Finance Officer","As a Finance Officer, I want to create, view, and manage records for company-issued FASTag and diesel cards, so that I can maintain a centralized inventory of these financial instruments.","Centralizes management of critical financial instruments, moving tracking from spreadsheets into the TMS. This improves data accuracy and establishes the foundation for automated features like low-balance alerts.","Should Have","2","[""US-006""]","[{""scenario"":""Create a new FASTag card record"",""given"":""I am a Finance Officer on the 'Card Management' screen"",""when"":""I click 'Create' and fill in the form with valid details for a new FASTag card"",""then"":""The system saves the new card record, and it appears in the list of cards.""},{""scenario"":""View the list of all managed cards"",""given"":""Multiple card records exist"",""when"":""I navigate to the 'Card Management' screen"",""then"":""I see a list view displaying all cards with columns for Card Number (partially masked), Card Type, Provider, and Status.""},{""scenario"":""Attempt to create a card with a duplicate number"",""given"":""A card with a specific number already exists"",""when"":""I attempt to create a new card with the same number"",""then"":""The system prevents saving and displays a validation error: 'A card with this number already exists.'""}]","[""Create a new Odoo model `tms.card` with required fields."",""Create Odoo views (form, tree, search) and a menu action."",""Implement a `_sql_constraints` for the unique card number."",""Configure Odoo ACLs to restrict access to appropriate roles.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the unique constraint and passing."",""Security requirements (role access, data masking) validated.""]"
"US-041","Financial Management & Invoicing","Finance Officer adds a non-trip-related expense to a vehicle","Finance Officer","As a Finance Officer, I want to create and record non-trip-related expenses (like maintenance, insurance, or fines) and associate them directly with a specific vehicle record, so that I can maintain a complete and accurate total cost of ownership for each vehicle.","Provides a complete financial picture of each vehicle's operational cost, enabling accurate calculation of vehicle-specific profitability and total cost of ownership (TCO).","Should Have","5","[""US-006"",""US-004""]","[{""scenario"":""Successfully create a new vehicle expense"",""given"":""I am a Finance Officer viewing a vehicle's record"",""when"":""I click 'Add Expense', select an expense type, enter an amount, date, and save"",""then"":""A new vehicle expense record is created and linked to the correct vehicle.""},{""scenario"":""Attempt to enter invalid data types"",""given"":""I have the 'New Vehicle Expense' form open"",""when"":""I enter 'one hundred' in the 'Amount' field or select a future date"",""then"":""The system prevents saving and displays a user-friendly error message.""},{""scenario"":""Expense is reflected in vehicle's history and reports"",""given"":""A new 'Maintenance' expense has been created for a vehicle"",""when"":""I generate the 'Vehicle Profitability Report' for that vehicle"",""then"":""The new expense must be correctly included in the total expenses calculation.""}]","[""Create a new Odoo model `tms.vehicle.expense`."",""Create a new Odoo model for configurable expense types `tms.vehicle.expense.type`."",""Add a One2many field to the `tms.vehicle` model and display it on the form view."",""Modify the 'Vehicle Profitability Report' to aggregate data from this new source.""]","[""All acceptance criteria validated and passing."",""Integration tests are created to verify the link to vehicles and the impact on reporting."",""Security access controls are tested and verified.""]"
"US-040","Financial Management & Invoicing","Finance Officer views a customer's ledger","Finance Officer","As a Finance Officer, I want to access a detailed, chronological ledger for any given customer, so that I can efficiently track their complete history of invoices and payments, determine their current outstanding balance, and quickly resolve any billing inquiries.","Improves accounts receivable management by providing a single source of truth for a customer's financial history, enabling faster payment tracking and resolution of billing disputes.","Should Have","5","[""US-037"",""US-039"",""US-015"",""US-070""]","[{""scenario"":""Ledger displays all relevant financial transactions chronologically"",""given"":""The customer ledger view is open for a customer"",""when"":""The view loads"",""then"":""All invoices and payments for that customer are displayed as line items, sorted by date, with columns for Date, Type, Reference, Debit, Credit, and a Running Balance.""},{""scenario"":""Ledger displays accurate summary financial totals"",""given"":""The customer ledger view is open"",""when"":""The view is loaded"",""then"":""A summary section is visible displaying 'Total Invoiced', 'Total Paid', and 'Outstanding Balance'.""},{""scenario"":""Navigating from a ledger line to the source document"",""given"":""The customer ledger view is open"",""when"":""The user clicks on the Reference Number of an invoice line item"",""then"":""The system opens the form view for that specific invoice record.""}]","[""Create a new Odoo action and view for the customer ledger."",""Add a smart button to the `res.partner` form to link to the ledger."",""Implement a performant query to fetch and sort all `account.move.line` records for a customer."",""Develop logic to calculate and display the 'Running Balance'.""]","[""All acceptance criteria validated and passing."",""Performance requirements verified against a large dataset."",""Security access rules are tested and confirmed to be working as expected.""]"
"US-039","Financial Management & Invoicing","Finance Officer records a payment against an invoice","Finance Officer","As a Finance Officer, I want to record partial or full payments received from a customer against a specific invoice, so that I can accurately track accounts receivable and maintain an up-to-date customer ledger.","Enables accurate tracking of accounts receivable and cash flow. Ensures customer balances are correct, supporting good customer relationships and effective collections processes.","Must Have","1","[""US-037"",""US-015""]","[{""scenario"":""Record a full payment against an invoice"",""given"":""I am viewing a 'Posted' invoice with an outstanding balance of ₹50,000"",""when"":""I click 'Register Payment' and confirm a payment of ₹50,000"",""then"":""The invoice's 'Amount Due' updates to ₹0, and its status changes to 'Paid'.""},{""scenario"":""Record a partial payment against an invoice"",""given"":""I am viewing a 'Posted' invoice with an outstanding balance of ₹50,000"",""when"":""I click 'Register Payment' and confirm a payment of ₹20,000"",""then"":""The invoice's 'Amount Due' updates to ₹30,000, and its status remains 'Posted'.""},{""scenario"":""Attempt to record a payment on a fully paid invoice"",""given"":""I am viewing an invoice that is already in the 'Paid' state"",""when"":""I look for the payment registration action"",""then"":""The 'Register Payment' button must not be visible or must be disabled.""}]","[""Leverage the standard Odoo `account.payment.register` wizard."",""Ensure the 'Register Payment' button is correctly placed on the custom invoice view."",""Configure access rights to ensure only the 'Finance Officer' role can perform this action.""]","[""All acceptance criteria validated and passing."",""Role-based access controls for this feature are verified."",""The feature is successfully tested end-to-end in a staging environment.""]"
"US-038","Financial Management & Invoicing","Finance Officer manually intervenes on a failed e-invoice","Finance Officer","As a Finance Officer, I want to be immediately alerted to any e-invoice generation failures, view the specific error reason, and have the ability to retry the submission or mark it for manual handling, so that I can ensure all invoices are compliant with GST regulations and sent to customers without delay.","Ensures business continuity and GST compliance by providing a robust fallback mechanism for the critical e-invoicing process, mitigating risks of delayed payments and improving cash flow.","Must Have","5","[""US-037"",""US-087"",""US-060""]","[{""scenario"":""System flags invoice and alerts user after automated retries fail"",""given"":""An invoice's e-invoicing submission has failed repeatedly"",""when"":""The final automated retry attempt fails"",""then"":""The invoice's status changes to 'E-Invoice Failed', a high-priority notification is sent to the 'Finance Officer' group, and the last GSP error message is displayed on the invoice form.""},{""scenario"":""Finance Officer successfully retries a failed e-invoice submission"",""given"":""An invoice is in the 'E-Invoice Failed' state"",""when"":""The Finance Officer clicks the 'Retry E-Invoicing' button"",""then"":""The system initiates a new API call, and upon success, the invoice status updates to 'Invoiced' and the IRN is populated.""},{""scenario"":""Finance Officer manually processes an invoice"",""given"":""An invoice is in the 'E-Invoice Failed' state"",""when"":""The Finance Officer clicks 'Mark as Manually Processed', enters a valid IRN and a note"",""then"":""The invoice status updates to 'Invoiced', the manually entered IRN is saved, and the note is logged in the invoice's chatter.""}]","[""Add a new state 'e_invoice_failed' to the `account.move` model."",""Add 'Retry E-Invoicing' and 'Mark as Manually Processed' buttons to the invoice form, visible only in the failed state."",""Create a wizard to capture the manual IRN and notes."",""Implement the backend logic for both the retry and manual override actions.""]","[""All acceptance criteria validated and passing."",""Unit and integration tests are written for the new logic with >80% coverage."",""Security checks confirm that actions are restricted to authorized roles."",""User documentation is updated to explain the failure handling process.""]"
"US-037","Financial Management & Invoicing","Finance Officer generates a GST-compliant e-invoice for a completed trip","Finance Officer","As a Finance Officer, I want to generate a GST-compliant e-invoice for a completed trip so that I can bill the customer accurately and comply with government tax regulations.","Ensures compliance with Indian GST e-invoicing laws, automates the billing process, reduces manual data entry errors, and accelerates the payment cycle.","Must Have","13","[""US-015"",""US-026"",""US-052""]","[{""scenario"":""Successful e-invoice generation for a completed trip"",""given"":""A trip is in the 'Completed' state"",""when"":""I generate an invoice and click 'Generate E-Invoice'"",""then"":""The system communicates with the GSP API, receives a valid IRN and QR code, and updates the trip and invoice status to 'Invoiced'.""},{""scenario"":""Attempting to generate an invoice for a trip not in 'Completed' state"",""given"":""A trip is in 'In-Transit' state"",""when"":""I navigate to that trip record"",""then"":""The 'Generate Invoice' button is disabled or not visible.""},{""scenario"":""Asynchronous handling of GSP API timeouts"",""given"":""I have submitted an invoice for generation"",""when"":""The synchronous API call to the GSP times out"",""then"":""The system provides immediate feedback that the request is 'Processing' and adds the task to a background queue for automatic retries.""}]","[""WI-401"",""WI-402"",""WI-403""]","[""All acceptance criteria validated and passing in the staging environment."",""Integration tests with the GSP sandbox API are passing."",""The generated PDF invoice has been verified for compliance."",""Security review of the API key handling has been completed.""]"
"US-036","Reporting & Analytics","Dispatch Manager generates and exports operational reports","Dispatch Manager","As a Dispatch Manager, I want to access, filter, and export key operational reports, so that I can analyze the performance of trips, vehicles, and drivers to identify inefficiencies and make data-driven decisions.","Enables data-driven decision-making to improve operational efficiency, reduce costs by identifying underutilized assets, and enhance resource management.","Should Have","8","[""US-026"",""US-006"",""US-011"",""US-051""]","[{""scenario"":""Generating a Trip Report with filters"",""given"":""I am viewing the 'Trip Report'"",""when"":""I apply filters for a specific date range, customer, and vehicle, and click 'Apply'"",""then"":""The report data refreshes to show only the records that match all the selected filter criteria.""},{""scenario"":""Exporting a filtered report to Excel"",""given"":""I have generated a filtered report on the screen"",""when"":""I click the 'Export to Excel' button"",""then"":""The system downloads an '.xlsx' file that contains the exact data currently displayed.""},{""scenario"":""Generating the Vehicle Utilization Report"",""given"":""I am on the reporting interface"",""when"":""I select the 'Vehicle Utilization Report' and apply a date range"",""then"":""The system displays a report with a row for each vehicle, showing 'Total On-Trip Time', 'Total Idle Time', and 'Utilization Percentage'.""}]","[""Create Odoo actions and custom OWL views for each operational report."",""Develop optimized database queries for data aggregation."",""Integrate a reusable filtering component."",""Implement Excel and PDF export logic.""]","[""All acceptance criteria validated and passing."",""Performance testing confirms that report generation meets the specified NFRs."",""User interface reviewed and approved by the Product Owner."",""Documentation for the reporting feature is updated in the User Manual.""]"
"US-035","Financial Management & Invoicing","Dispatch Manager views the profitability of a single trip","Dispatch Manager","As a Dispatch Manager, I want to view the automatically calculated revenue, total approved expenses, and net profitability directly on the trip's detail page, so that I can immediately assess the financial performance of each trip I manage.","Provides immediate visibility into the financial health of individual trips, enabling data-driven decisions to improve profitability and control costs.","Should Have","2","[""US-026"",""US-053"",""US-033"",""US-070""]","[{""scenario"":""Profitability calculation for a profitable trip"",""given"":""A Dispatch Manager is viewing a trip with 'Total Revenue' of ₹50,000 and 'Approved' expenses of ₹12,000"",""when"":""The trip form loads"",""then"":""A profitability section displays 'Profitability' as ₹38,000.""},{""scenario"":""Profitability calculation updates after an expense is approved"",""given"":""A trip has a profitability of ₹15,000"",""when"":""The manager approves a new 'Pending' expense of ₹1,000 for that trip"",""then"":""The 'Profitability' value is recalculated and displayed as ₹14,000 upon view refresh.""},{""scenario"":""Role-based access control for profitability data"",""given"":""A user with the 'Driver' role is logged in"",""when"":""They view the details of their assigned trip"",""then"":""The profitability section is not visible.""}]","[""Implement a computed field on the `tms.trip` model for profitability."",""Add the new fields to the Trip Form View."",""Use `groups` attribute in the XML view to restrict visibility.""]","[""All acceptance criteria validated and passing."",""Unit tests for the computation logic implemented and passing."",""Security requirements validated by testing with different user roles.""]"
"US-034","Financial Management & Invoicing","Dispatch Manager rejects a submitted expense with a mandatory reason","Dispatch Manager","As a Dispatch Manager, I want to reject a submitted expense claim and be required to provide a reason for the rejection, so that I can maintain financial control, ensure policy compliance, and provide clear feedback to the driver.","Ensures financial accuracy by preventing payment for invalid claims, enforces company expense policies, and provides a feedback loop to drivers to reduce future errors.","Must Have","2","[""US-053"",""US-032"",""US-060"",""US-025""]","[{""scenario"":""Rejecting an expense with a valid reason"",""given"":""I am viewing an expense with 'Submitted' status"",""when"":""I click 'Reject', enter a reason, and confirm"",""then"":""The expense status updates to 'Rejected', the reason is saved, and a notification with the reason is sent to the driver.""},{""scenario"":""Attempting to reject an expense without providing a reason"",""given"":""I have opened the rejection dialog for an expense"",""when"":""I attempt to confirm without entering a reason"",""then"":""The system displays a validation error 'A reason for rejection is required' and the rejection is blocked.""},{""scenario"":""Rejected expense is excluded from financial calculations"",""given"":""An expense has been rejected"",""when"":""I view the profitability calculation for the associated trip"",""then"":""The amount of the rejected expense is not included in the trip's total expenses.""}]","[""Create an Odoo wizard (`TransientModel`) for the rejection reason dialog."",""Add a 'Reject' button to the expense form view that opens the wizard."",""Implement a method to handle the state change, save the reason, and trigger a notification.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the state change logic."",""Integration testing completed to ensure notifications and financial calculations are correct.""]"
"US-033","Financial Management & Invoicing","Dispatch Manager approves a submitted expense","Dispatch Manager","As a Dispatch Manager, I want to review the details of a submitted expense and approve it with a single action, so that I can validate its legitimacy, update the trip's financial record, and move it forward for reimbursement.","Ensures financial accuracy by validating trip-related costs before they impact profitability calculations and are sent for payment. This is a key financial control point.","Must Have","2","[""US-053"",""US-032"",""US-070""]","[{""scenario"":""Successful approval of a submitted expense"",""given"":""I am viewing an expense with the status 'Submitted'"",""when"":""I click the 'Approve' button"",""then"":""The system changes the expense's status to 'Approved' and an audit log entry is created.""},{""scenario"":""Financial Impact: Trip profitability is updated correctly"",""given"":""A trip has a profitability of $800 and a pending expense of $50"",""when"":""A Dispatch Manager approves the $50 expense"",""then"":""The trip's total 'Approved' expenses are recalculated, and its profitability updates to $750.""},{""scenario"":""State Validation: Attempting to approve a non-submitted expense"",""given"":""I am viewing an expense that is already 'Approved' or 'Rejected'"",""when"":""I view the expense details"",""then"":""The 'Approve' button is not visible or is disabled.""}]","[""Add an 'Approve' button to the `tms.expense` form view."",""Create a Python method on the model to handle the state transition from 'Submitted' to 'Approved'."",""Ensure this action triggers the recalculation of the related trip's profitability.""]","[""All acceptance criteria validated and passing."",""Unit tests for the approval logic implemented with >80% code coverage."",""Integration test verifying the update to trip profitability is implemented and passing.""]"
"US-032","Financial Management & Invoicing","Dispatch Manager views a queue of submitted expenses","Dispatch Manager","As a Dispatch Manager, I want to access a dedicated view that lists all submitted trip expenses awaiting my approval so that I can efficiently review and process them.","Streamlines the expense approval workflow, provides a control point for operational spending, and ensures timely reimbursement to drivers.","Must Have","1","[""US-053"",""US-026""]","[{""scenario"":""Viewing the list of pending expenses"",""given"":""There are multiple expenses with the status 'Submitted'"",""when"":""I navigate to the 'Expense Approvals' menu item"",""then"":""I see a list view containing only the expenses with the 'Submitted' status.""},{""scenario"":""Information displayed in the expense queue"",""given"":""I am viewing the 'Expense Approvals' list"",""when"":""The list is displayed"",""then"":""The list must display columns for: Trip ID, Driver Name, Vehicle Number, Submission Date, Expense Type, and Amount.""},{""scenario"":""Unauthorized access attempt"",""given"":""I am logged in as a 'Driver'"",""when"":""I attempt to access the 'Expense Approvals' menu item"",""then"":""The system must prevent access and display an 'Access Denied' error.""}]","[""Create an Odoo `ir.actions.act_window` with a domain filter for `[('state', '=', 'submitted')]`."",""Create a new menu item pointing to this action."",""Define the tree view with the required columns.""]","[""All acceptance criteria validated and passing."",""The new menu item and view are visible only to authorized user roles."",""The view's performance meets the specified NFR.""]"
"US-031","Trip Management Lifecycle","Dispatch Manager cancels a trip","Dispatch Manager","As a Dispatch Manager, I want to cancel a trip at any stage before delivery and provide a mandatory reason, so that the system accurately reflects the trip's status, releases assigned resources, and provides a clear audit trail.","Ensures data integrity, improves resource utilization by releasing vehicles and drivers, and provides data for operational analysis.","Must Have","2","[""US-026"",""US-027"",""US-060"",""US-070""]","[{""scenario"":""Cancel an assigned trip with a valid reason"",""given"":""A trip has status 'Assigned' or 'In-Transit'"",""when"":""The user clicks 'Cancel Trip', enters a reason, and confirms"",""then"":""The trip's status updates to 'Canceled', the reason is logged, a notification is sent to the driver, and the vehicle/driver are marked as 'Available'.""},{""scenario"":""Attempt to cancel a trip without providing a reason"",""given"":""The user has initiated the 'Cancel Trip' action"",""when"":""The user attempts to confirm without entering a reason"",""then"":""The system prevents the cancellation and displays an error: 'A reason for cancellation is required'.""},{""scenario"":""Attempt to cancel a trip that is already delivered"",""given"":""A trip has a status of 'Delivered' or 'Completed'"",""when"":""The user views the trip"",""then"":""The 'Cancel Trip' action is not visible or is disabled.""}]","[""WI-203: Implement Trip Cancellation Logic"",""Create a wizard (`TransientModel`) for the cancellation reason dialog."",""Add a method on `tms.trip` to handle the state change, logging, resource status update, and notification.""]","[""All acceptance criteria validated and passing."",""Unit tests covering state transitions and business logic are implemented."",""The cancellation event is correctly logged in the system's audit trail.""]"
"US-030","Trip Management Lifecycle","Dispatch Manager resolves an 'On Hold' trip and resumes its journey","Dispatch Manager","As a Dispatch Manager, I want to be able to change a trip's status from 'On Hold' back to 'In-Transit' after providing a mandatory resolution comment, so that I can officially resume a delayed trip and maintain a clear audit trail of the resolution.","Enables operational continuity by allowing paused trips to resume, minimizing delivery delays. Enhances accountability by creating an auditable log of disruption resolutions.","Must Have","2","[""US-077"",""US-026""]","[{""scenario"":""Successfully resuming an 'On Hold' trip"",""given"":""A trip is in 'On Hold' status"",""when"":""I click 'Resume Trip', enter a resolution comment, and confirm"",""then"":""The trip's status changes to 'In-Transit', and the comment is logged in the trip's history.""},{""scenario"":""Attempting to resume a trip without a resolution comment"",""given"":""I have opened the 'Resume Trip' dialog"",""when"":""I attempt to confirm without entering a comment"",""then"":""The system displays a validation error, and the trip's status remains 'On Hold'.""},{""scenario"":""An unauthorized user attempts to resume a trip"",""given"":""I am logged in as a 'Driver'"",""when"":""I view an 'On Hold' trip"",""then"":""The 'Resume Trip' button is not visible or is disabled.""}]","[""Create an Odoo wizard for the resolution comment."",""Add a 'Resume Trip' button to the trip form, visible only for 'On Hold' status and authorized roles."",""Implement the backend method to change the state and post the comment to the chatter.""]","[""All acceptance criteria validated and passing."",""Unit tests covering the server action logic have been written."",""Automated or manual integration tests confirm the correct UI behavior and role-based permissions.""]"
"US-029","Monitoring & Alerts","Dispatch Manager views the real-time location of vehicles on a map","Dispatch Manager","As a Dispatch Manager, I want to see a real-time map displaying the current location of all my vehicles that are on 'In-Transit' trips so that I can monitor their progress and proactively identify potential delays.","Provides real-time operational awareness, enabling proactive management of logistics, improved on-time delivery rates, and enhanced customer service.","Should Have","8","[""US-027"",""US-049""]","[{""scenario"":""Map displays all 'In-Transit' vehicles"",""given"":""There are multiple trips with 'In-Transit' status and recent GPS data"",""when"":""I navigate to the 'Live Map' view"",""then"":""The map loads and displays a distinct marker for each 'In-Transit' vehicle at its last known location.""},{""scenario"":""Clicking a vehicle marker displays trip details"",""given"":""I am viewing the 'Live Map'"",""when"":""I click on a vehicle marker"",""then"":""A pop-up appears, displaying Trip ID, Vehicle Number, Driver Name, and Destination.""},{""scenario"":""Vehicle marker position updates in near real-time"",""given"":""An 'In-Transit' vehicle is moving"",""when"":""The system receives a new GPS location update"",""then"":""The marker on the map moves to the new location without a full page reload, within the 60-second latency requirement.""}]","[""Implement the GPS data ingestion pipeline (microservice, message queue, Odoo consumer)."",""Extend the `tms.vehicle` model to store last known location."",""Create an Odoo Map view for `tms.trip` or `tms.vehicle`."",""Implement a real-time update mechanism for the map view, possibly via websockets or polling.""]","[""All acceptance criteria validated and passing."",""Integration testing of the full data pipeline (mock GPS to Odoo DB) completed successfully."",""E2E tests for map loading, marker display, and updates are passing."",""Performance requirements for data latency and page load are verified in staging.""]"
"US-028","Trip Management Lifecycle","Dispatch Manager selects a pre-defined route during trip creation","Dispatch Manager","As a Dispatch Manager, I want to select a pre-defined route from a list when creating a new trip, so that the source, destination, and standard distance are automatically populated, which saves me time and reduces data entry errors.","Increases operational efficiency by reducing manual data entry time. Improves data accuracy and consistency by using standardized route information.","Should Have","1","[""US-019"",""US-026""]","[{""scenario"":""Select a pre-defined route and auto-populate trip details"",""given"":""I am on the 'Create New Trip' form and a route 'Mumbai to Delhi' exists"",""when"":""I select the 'Mumbai to Delhi' route from the 'Route' selection field"",""then"":""The 'Source', 'Destination', and 'Standard Distance' fields are automatically populated.""},{""scenario"":""Override auto-populated values after selecting a route"",""given"":""The fields have been auto-populated by a route selection"",""when"":""I manually edit the 'Destination' field to 'Gurgaon'"",""then"":""The 'Destination' field must retain the new value 'Gurgaon'.""}]","[""Add a Many2one field for `tms.route` to the `tms.trip` form view."",""Implement an `@api.onchange` method on the route field."",""The onchange method will fetch the selected route's details and update the corresponding fields on the trip form.""]","[""All acceptance criteria validated and passing."",""Unit tests for the onchange logic implemented and passing."",""User interface reviewed and approved for responsiveness and usability.""]"
"US-027","Trip Management Lifecycle","Dispatch Manager assigns an available vehicle and driver to a trip","Dispatch Manager","As a Dispatch Manager, I want to select an available vehicle and an available driver from filtered lists and assign them to a 'Planned' trip so that I can operationalize the trip and move it to the 'Assigned' status.","Enables the transition of a trip from planning to execution, ensures efficient and compliant resource allocation, and prevents operational errors.","Must Have","5","[""US-026"",""US-006"",""US-012""]","[{""scenario"":""Successful assignment of a valid vehicle and driver"",""given"":""I am viewing a trip in 'Planned' status"",""when"":""I select an 'Active' vehicle and an 'Active' driver with a valid license and save"",""then"":""The trip's status changes from 'Planned' to 'Assigned'.""},{""scenario"":""Vehicle and Driver selection lists are correctly filtered"",""given"":""I am viewing a trip in 'Planned' status"",""when"":""I open the vehicle or driver selection dropdown"",""then"":""The lists MUST NOT include resources that are 'Inactive', have expired licenses (for drivers), or are assigned to another 'In-Transit' trip.""},{""scenario"":""Attempt to assign a vehicle with insufficient capacity"",""given"":""A trip has a material weight of 25 Tons"",""when"":""I attempt to assign a vehicle with a capacity of 20 Tons"",""then"":""The system prevents the assignment and displays an error message.""}]","[""WI-202: Implement Trip Assignment Logic and Validations"",""Use `domain` filters on the Many2one fields in the XML view to filter available resources."",""Implement Python constraints (`@api.constrains`) to validate capacity on save.""]","[""All acceptance criteria validated and passing."",""Unit tests for domain filtering and validation logic are implemented and passing."",""Performance of the selection dropdowns is verified against requirements.""]"
"US-026","Trip Management Lifecycle","Dispatch Manager creates a new trip","Dispatch Manager","As a Dispatch Manager, I want to create a new trip record by selecting a customer, defining the route, and specifying the material details and rate, so that I can formally initiate a transport job.","Initiates the primary revenue-generating workflow of the system. Enables formal planning, resource allocation, tracking, and subsequent invoicing for a transport job.","Must Have","5","[""US-015"",""US-019"",""US-020""]","[{""scenario"":""Successful trip creation with valid manual inputs"",""given"":""I am on the 'New Trip' form"",""when"":""I fill in all mandatory fields (Customer, Source, Destination, etc.) with valid data"",""then"":""The system creates a new trip record with a unique ID and an initial status of 'Planned'.""},{""scenario"":""Attempt to save a trip with missing mandatory fields"",""given"":""I am on the 'New Trip' form"",""when"":""I attempt to save without selecting a Customer"",""then"":""The system prevents saving and displays a validation message: 'Customer is a required field'.""},{""scenario"":""Dynamic revenue calculation based on rate type"",""given"":""I am on the 'New Trip' form"",""when"":""I select the rate type 'per km' and enter a rate and distance"",""then"":""A read-only 'Estimated Revenue' field updates automatically to show the calculated total.""}]","[""WI-201: Create `tms.trip` Model and Core Views"",""Implement server-side validation rules for mandatory fields."",""Implement client-side on-change events for dynamic revenue calculation.""]","[""All acceptance criteria validated and passing."",""Unit tests for all new business logic and validations have been written and are passing."",""All UI elements are mobile-responsive.""]"
"US-025","Core System & Foundation","Admin views the immutable audit trail for critical data changes","Admin","As an Admin, I want to access and filter a detailed, immutable audit trail of all changes made to critical data records, so that I can ensure system security, enforce accountability, and perform forensic analysis.","Provides a tamper-proof record of all critical system activities, enhancing security, enabling forensic analysis, and supporting regulatory compliance audits.","Must Have","8","[""US-001"",""US-026"",""US-037""]","[{""scenario"":""Audit log entry for an 'Update' action shows old and new values"",""given"":""A user has changed the status of an Invoice from 'Draft' to 'Posted'"",""when"":""I view the details of the corresponding 'Update' log entry"",""then"":""I should see the field changed ('status'), the 'Old Value' ('Draft'), and the 'New Value' ('Posted').""},{""scenario"":""Admin attempts to modify or delete an audit log entry"",""given"":""I am logged in as an Admin viewing the audit trail"",""when"":""I attempt to edit or delete any log entry"",""then"":""The system must prevent the action, and no 'Edit' or 'Delete' options should be available.""},{""scenario"":""Admin successfully filters the audit trail"",""given"":""The audit trail contains numerous entries"",""when"":""I apply a filter for a specific user and a date range"",""then"":""The view should update to show only the log entries that match the filter criteria.""}]","[""Leverage Odoo's `mail.thread` mixin on critical models (Trip, Invoice, Payment, User)."",""Track specific fields using the `tracking=True` attribute."",""Ensure access to the underlying `mail.message` model is restricted.""]","[""All acceptance criteria validated and passing."",""Integration testing completed for all audited models."",""Security testing confirms the immutability of the logs."",""Performance testing confirms the audit view meets NFRs.""]"
"US-024","Monitoring & Alerts","Admin manages rules and recipients for system-level alerts","Admin","As an Admin, I want a dedicated interface to manage the rules, thresholds, and recipients for system-level alerts, so that I can ensure critical operational issues are promptly communicated to the correct personnel.","Improves system monitoring and operational responsiveness by ensuring the right people are notified of critical issues immediately, reducing Mean Time To Resolution (MTTR).","Could Have","8","[""US-004"",""US-060"",""US-088""]","[{""scenario"":""Admin successfully configures and saves an alert rule"",""given"":""I am on the 'System Alert Configuration' page"",""when"":""I select the 'GSP API Failure' alert, set the recipient to the 'Finance Officer' group, and save"",""then"":""The system saves the configuration.""},{""scenario"":""Configured alert is triggered and sent correctly"",""given"":""The 'GSP API Failure' alert is configured to notify the 'Finance Officer' group"",""when"":""The monitoring system detects a GSP API failure event"",""then"":""A notification is sent to all active users within the 'Finance Officer' group.""},{""scenario"":""Attempt to save an alert rule without any recipients"",""given"":""I am configuring an alert rule"",""when"":""I enable the alert but do not select any recipients and click 'Save'"",""then"":""The system prevents saving and displays a validation error: 'At least one recipient must be selected.'""}]","[""Create an Odoo model and views for alert rule configuration."",""Develop a mechanism to sync the rules from the Odoo database to the Alertmanager configuration."",""Ensure the notification dispatch logic correctly resolves recipients from user and group lists.""]","[""All acceptance criteria validated and passing."",""Integration testing completed to verify notifications are sent based on configuration."",""Security requirements validated (access restricted to Admins)."",""Technical documentation for the alert configuration and sync mechanism is created.""]"
"US-023","Financial Management & Invoicing","Admin configures maximum allowable expense amounts per category","Admin","As an Admin, I want to configure maximum allowable expense amounts for each expense category so that I can enforce company spending policies and streamline the approval process by automatically flagging high-value expenses.","Enables automated enforcement of company expense policies, improves cost control, and increases operational efficiency for expense approvals.","Could Have","2","[""US-004""]","[{""scenario"":""Admin successfully sets a new expense threshold"",""given"":""I am on the 'Expense Threshold Configuration' page"",""when"":""I enter '500' into the amount field for the 'Food' category and click 'Save'"",""then"":""The value '500.00' is persisted and displayed for the 'Food' category.""},{""scenario"":""Admin attempts to save a negative value"",""given"":""I am on the 'Expense Threshold Configuration' page"",""when"":""I enter '-100' into the amount field"",""then"":""The system prevents saving and displays an error: 'Amount cannot be negative.'""},{""scenario"":""Non-Admin user attempts to access the configuration page"",""given"":""I am logged in as a 'Dispatch Manager'"",""when"":""I attempt to navigate to the 'Expense Threshold Configuration' page"",""then"":""The system denies access.""}]","[""Add a new `threshold_amount` field to the existing expense category model."",""Create a new settings view in Odoo to display all categories and their threshold fields."",""Implement validation to ensure amounts are non-negative.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the model logic with >80% coverage."",""Security access rules are implemented and tested.""]"
"US-022","Core System & Foundation","Admin configures system-wide settings","Admin","As an Admin, I want a centralized settings page to configure system-wide parameters, such as session timeout and alert intervals, so that I can customize the application's behavior to match our company's policies without requiring code changes.","Enables the business to adapt the system to changing policies without developer intervention, enhancing security posture and ensuring compliance.","Must Have","5","[""US-004"",""US-070""]","[{""scenario"":""Admin successfully edits and saves a setting"",""given"":""I am on the 'Transport Management' settings page"",""when"":""I change 'Session Timeout (minutes)' to '45' and click 'Save'"",""then"":""The setting is saved, and when I refresh the page, the field displays '45'.""},{""scenario"":""System rejects out-of-range values"",""given"":""I am on the settings page"",""when"":""I enter '-5' into the 'Expense Submission Deadline (days)' field and click 'Save'"",""then"":""The save is prevented, and a validation error is displayed.""},{""scenario"":""Non-Admin user is denied access"",""given"":""I am logged in as a 'Dispatch Manager'"",""when"":""I attempt to navigate to the settings page URL"",""then"":""The system displays an 'Access Denied' error.""}]","[""Implement a custom `res.config.settings` model to hold TMS settings."",""Create the corresponding XML view to display the fields in Odoo's settings area."",""Add validation logic for numeric and formatted fields."",""Ensure other parts of the application correctly read these configuration parameters.""]","[""All acceptance criteria validated and passing."",""Integration testing completed to verify other modules can read the settings."",""Security requirements validated (Admin-only access).""]"
"US-021","Monitoring & Alerts","Admin defines a geofence for a key location","Admin","As an Admin, I want to create, view, and manage named geographical boundaries (geofences) on a map for key locations like customer sites and warehouses, so that the system can automatically detect and trigger alerts when a vehicle enters or exits these areas.","Enables automated, real-time monitoring of vehicle movements at critical locations, improving operational efficiency, security, and providing data for performance analysis.","Should Have","8","[""US-029"",""US-001""]","[{""scenario"":""Admin successfully creates a new polygonal geofence"",""given"":""The Admin is on the 'Geofence Management' screen"",""when"":""The Admin clicks 'Create', enters a unique name, draws a closed polygon on the map, and clicks 'Save'"",""then"":""The system saves the geofence, and it appears in the list and is rendered on the map.""},{""scenario"":""Attempt to save a geofence with a duplicate name"",""given"":""A geofence named 'Main Depot' already exists"",""when"":""The Admin enters 'Main Depot' as the name for a new geofence and clicks 'Save'"",""then"":""The system prevents the save and displays a validation error.""},{""scenario"":""Non-Admin user attempts to access the page"",""given"":""A user with a 'Dispatch Manager' role is logged in"",""when"":""The user attempts to navigate to the geofence management URL"",""then"":""The system denies access.""}]","[""Integrate a JavaScript map library (e.g., Leaflet.js) into an Odoo OWL component."",""Set up a PostGIS extension in PostgreSQL."",""Create a new Odoo model `tms.geofence` with a geospatial data type field."",""Implement UI drawing tools and backend logic to save coordinates.""]","[""All acceptance criteria validated and passing."",""E2E tests for the geofence creation and editing flow are implemented and passing."",""Access control rules are verified to restrict access to Admins only.""]"
"US-020","Master Data Management","Admin manages the list of material types and their handling instructions","Admin","As an Admin, I want to create, view, edit, and deactivate material types and their associated special handling instructions, so that I can ensure data consistency and provide critical handling information to operational staff.","Ensures data integrity for accurate reporting, enhances operational safety by standardizing handling instructions, and improves efficiency in the trip creation process.","Must Have","1","[""US-001""]","[{""scenario"":""Admin creates a new material type successfully"",""given"":""The user is logged in as an Admin"",""when"":""The user clicks 'New' on the 'Material Types' screen, enters a unique name and optional instructions, and clicks 'Save'"",""then"":""The new material type is created and appears in the list view.""},{""scenario"":""System prevents creation of a material type with a duplicate name"",""given"":""A material type with the name 'Cement Bags' already exists"",""when"":""The Admin attempts to create a new material type with the name 'Cement Bags'"",""then"":""The system prevents saving and displays a validation error.""},{""scenario"":""Deactivated material types are not available for selection on new trips"",""given"":""The material type 'Obsolete Part' has been archived"",""when"":""A Dispatch Manager creates a new trip"",""then"":""'Obsolete Part' does not appear in the 'Material' selection list.""}]","[""WI-111: Create Material Master CRUD"",""Create a new Odoo model `tms.material` with 'Name', 'Handling Instructions', and 'Active' fields."",""Create standard list and form views."",""Implement a unique constraint on the 'Name' field.""]","[""All acceptance criteria validated and passing."",""Unit tests covering model constraints are implemented."",""Access control rules are implemented and verified for Admin and other roles.""]"
"US-019","Master Data Management","Admin creates and manages pre-defined transportation routes","Admin","As an Admin, I want to create and manage a master list of pre-defined transportation routes, including source, destination, and distance, so that Dispatch Managers can quickly select a standard route during trip creation, ensuring consistency and reducing errors.","Improves operational efficiency by reducing manual data entry. Enhances data accuracy and consistency by standardizing common routes.","Must Have","2","[""US-001""]","[{""scenario"":""Admin successfully creates a new pre-defined route"",""given"":""The user is logged in as an 'Admin'"",""when"":""The user creates a new route with a unique 'Route Name', 'Source', 'Destination', and 'Standard Distance'"",""then"":""The system saves the new route record, and it appears in the list.""},{""scenario"":""System prevents route creation with missing mandatory information"",""given"":""The user is on the new route creation form"",""when"":""The user attempts to save the route without providing a 'Route Name'"",""then"":""The system prevents saving and displays a validation message.""},{""scenario"":""Non-Admin users cannot access route management"",""given"":""A user is logged in with a role other than 'Admin'"",""when"":""The user attempts to navigate to the route management section"",""then"":""The system denies access.""}]","[""WI-110: Create Route Master CRUD"",""Create a new Odoo model `tms.route`."",""Create standard list and form views, an action, and a menu item."",""Implement validation for required fields and unique name.""]","[""All acceptance criteria validated and passing."",""Unit tests covering model constraints and validations are implemented."",""Security testing confirms that non-Admin roles cannot access the functionality.""]"
"US-018","Master Data Management","Admin sets a customer's status to 'Active' or 'Inactive'","Admin","As an Admin, I want to be able to set a customer's status to 'Active' or 'Inactive', so that I can control which customers are available for new business and prevent dispatchers from creating trips for clients we no longer serve.","Improves data integrity and operational efficiency by preventing the selection of non-serviceable customers for new trips. Reduces the risk of errors in trip planning and invoicing.","Must Have","1","[""US-015"",""US-026"",""US-070""]","[{""scenario"":""Admin deactivates an active customer"",""given"":""I am viewing an 'Active' customer's record"",""when"":""I change the status to 'Inactive' (Archive)"",""then"":""This customer no longer appears in the customer selection dropdown when a Dispatch Manager creates a new trip.""},{""scenario"":""Inactive customer data is retained for reporting"",""given"":""A customer with historical trips has been set to 'Inactive'"",""when"":""A Finance Officer generates a historical revenue report"",""then"":""The inactive customer's financial data remains accessible and is included in the report.""},{""scenario"":""Attempting to deactivate a customer with active trips"",""given"":""A customer is associated with an 'In-Transit' trip"",""when"":""I attempt to change their status to 'Inactive'"",""then"":""The system displays a warning modal: 'This customer has active trips. Are you sure you want to deactivate them?'""}]","[""Leverage Odoo's standard `active` field and archiving functionality on `res.partner`."",""Override the `toggle_active` method to check for related active trips and show a warning."",""Ensure the customer selection field on the trip form has a domain filter `[('active', '=', True)]`.""]","[""All acceptance criteria validated and passing."",""Unit tests for the overridden `toggle_active` method are written."",""Automated integration tests confirm the domain filter on the trip form.""]"
"US-017","Master Data Management","Admin creates and manages customer-specific rate agreements","Admin","As an Admin, I want to create and manage customer-specific rate agreements, defining rates based on routes, materials, and calculation methods, so that trip revenue is calculated automatically and accurately.","Ensures accurate and consistent billing, reducing manual entry errors and customer disputes. Streamlines the trip creation and invoicing process.","Should Have","5","[""US-015"",""US-019"",""US-020""]","[{""scenario"":""Create a new 'Per Km' rate agreement for a customer"",""given"":""I am viewing a customer record"",""when"":""I add a new rate with a specific Source, Destination, Material, select 'Per Km' as Rate Type, and enter a rate value"",""then"":""The new rate agreement is saved and appears in the list of agreements for that customer.""},{""scenario"":""Attempt to create a duplicate rate agreement"",""given"":""A rate agreement already exists for a customer with a specific route and material"",""when"":""I attempt to create a new agreement with the exact same parameters"",""then"":""The system prevents saving and displays a uniqueness error.""},{""scenario"":""Archive an obsolete rate agreement"",""given"":""An old rate agreement exists"",""when"":""I archive the rate agreement"",""then"":""The rate is no longer used for new trip calculations but is retained for historical reporting.""}]","[""Create a new Odoo model `tms.rate.agreement`."",""Add a One2many field to the `res.partner` model to display agreements on the customer form."",""Implement a unique constraint on the combination of customer, source, destination, and material.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for model constraints and business logic."",""Security permissions are correctly implemented and verified.""]"
"US-016","Master Data Management","Admin manages multiple shipping locations for a customer","Admin","As an Admin, I want to add, view, and manage multiple shipping locations for a single customer record, so that Dispatch Managers can quickly and accurately select a pre-defined destination when creating a new trip.","Improves operational efficiency by speeding up trip creation. Increases data accuracy by reducing manual address entry errors.","Should Have","3","[""US-015""]","[{""scenario"":""Admin successfully adds a new shipping location to a customer"",""given"":""I am viewing an existing customer's form"",""when"":""I add a new shipping location with all mandatory address fields and save"",""then"":""The new location is saved and displayed in the list of shipping locations for that customer.""},{""scenario"":""Shipping locations are available for selection during trip creation"",""given"":""A customer has multiple active shipping locations defined"",""when"":""A Dispatch Manager creates a new trip for that customer"",""then"":""The 'Destination' field dropdown is populated with the customer's active shipping locations.""},{""scenario"":""Admin deactivates a shipping location"",""given"":""A shipping location is no longer in use"",""when"":""I mark the shipping location as 'Inactive'"",""then"":""The location is no longer available for selection for new trips but is retained for historical records.""}]","[""Leverage Odoo's native parent/child contact functionality by using `type='delivery'`."",""Customize the `res.partner` form view to have a dedicated 'Shipping Locations' tab."",""Configure the 'Destination' field on the trip form to correctly filter and display these child contacts.""]","[""All acceptance criteria validated and passing."",""Integration testing with the Trip Creation form completed successfully."",""User interface on the customer form is reviewed and approved.""]"
"US-015","Master Data Management","Admin creates a new customer record","Admin","As an Admin, I want to create a new customer record by entering their essential business details, including name, billing address, GSTIN, and contact information, so that the new customer is available in the system for trip planning and invoicing.","Enables new business by onboarding clients into the system. Ensures data accuracy for logistics and financial operations.","Must Have","2","[]","[{""scenario"":""Successful creation of a new customer with valid data"",""given"":""The Admin is on the Customer management screen"",""when"":""The Admin fills in all mandatory fields with valid data and clicks 'Save'"",""then"":""A new customer record is created, saved, and defaults to 'Active' status.""},{""scenario"":""Attempt to save a new customer with an invalid GSTIN format"",""given"":""The Admin is on the new customer creation form"",""when"":""The Admin enters a GSTIN that does not match the standard Indian format"",""then"":""The system prevents saving and displays an error: 'Invalid GSTIN format.'""}]","[""WI-003: Extend Base Models (Customer part)"",""Inherit the `res.partner` model to add TMS-specific logic."",""Add a Python constraint for GSTIN format validation."",""Customize the `res.partner` form view.""]","[""All acceptance criteria validated and passing."",""Unit tests for GSTIN validation logic are written and achieve >80% coverage."",""Security check confirms that access is restricted to authorized roles.""]"
"US-014","Master Data Management","Admin sets a driver's status to 'Active' or 'Inactive'","Admin","As an Admin, I want to change a driver's status between 'Active' and 'Inactive' so that I can accurately manage the pool of available drivers and prevent unavailable drivers from being assigned to new trips.","Ensures operational accuracy by preventing assignments to unavailable drivers and preserves historical data for reporting.","Must Have","1","[""US-011"",""US-027""]","[{""scenario"":""Inactive driver is excluded from trip assignment"",""given"":""A driver's status has been set to 'Inactive'"",""when"":""A Dispatch Manager creates a new trip and accesses the driver selection dropdown"",""then"":""The inactive driver's name must NOT appear in the list.""},{""scenario"":""Admin attempts to deactivate a driver with an active trip"",""given"":""A driver is assigned to a trip with a status of 'In-Transit'"",""when"":""I attempt to change that driver's status to 'Inactive'"",""then"":""The system must prevent the change and display an error: 'Cannot deactivate a driver with an active trip.'""}]","[""Leverage Odoo's standard `active` field on the `hr.employee` model."",""Override the `write` or `toggle_active` method to check for active trips before archival."",""Ensure the driver selection field on the trip form filters for active drivers.""]","[""All acceptance criteria validated and passing."",""Unit tests for the active trip constraint are written and passing."",""Integration testing confirms the trip assignment list is correctly filtered.""]"
"US-013","Master Data Management","Admin uploads a scanned copy of a driver's license","Admin","As an Admin, I want to upload a scanned copy of a driver's license to their profile so that I can maintain a complete digital record for compliance and easy verification.","Centralizes critical compliance documents, improves operational efficiency, and mitigates risk by ensuring driver records are complete.","Should Have","1","[""US-011""]","[{""scenario"":""Successful upload of a valid license file"",""given"":""I am on the form view of an existing driver record"",""when"":""I select a valid image file (JPG, PNG, or PDF) under 5MB"",""then"":""The file uploads successfully, and a thumbnail or icon is displayed on the driver's form.""},{""scenario"":""Attempt to upload a file with an unsupported format"",""given"":""I am on the driver form"",""when"":""I attempt to upload a .docx file"",""then"":""The system rejects the upload and displays an error: 'Invalid file type. Please upload a JPG, PNG, or PDF file.'""}]","[""Add a `fields.Binary` field to the extended `hr.employee` model."",""Add the corresponding widget to the XML form view."",""Ensure file storage is configured for Amazon S3.""]","[""All acceptance criteria validated and passing."",""Integration testing with S3 storage is completed successfully."",""Security requirements validated, including role-based access checks.""]"
"US-012","Master Data Management","Admin adds and manages driver license details and expiry date","Admin","As an Admin, I want to add and edit a driver's license number and expiry date on their employee record so that I can maintain accurate compliance records and enable automated expiry alerts.","Enables enforcement of critical business rules, supports compliance, and provides necessary data for the automated alert system.","Must Have","1","[""US-011""]","[{""scenario"":""Successfully add license details to a new driver record"",""given"":""I am viewing a driver's employee record"",""when"":""I enter a valid 'License Number' and a future 'License Expiry Date' and save"",""then"":""The system saves the record, and the new details are displayed.""},{""scenario"":""System prevents saving with a past expiry date"",""given"":""I am editing a driver's record"",""when"":""I select a date in the past for 'License Expiry Date' and attempt to save"",""then"":""The system prevents saving and displays an error: 'License expiry date cannot be in the past.'""}]","[""Add `license_number` (Char) and `license_expiry_date` (Date) fields to the extended `hr.employee` model."",""Add the new fields to the `hr.employee` form view."",""Implement a Python constraint (`@api.constrains`) to validate the expiry date.""]","[""All acceptance criteria validated and passing."",""Unit tests for the model constraints have been written and achieve >80% coverage."",""Security requirements (role-based access) have been manually tested.""]"
"US-011","Master Data Management","Admin creates a new driver record by extending an HR employee","Admin","As an Admin, I want to create a new driver record by adding driver-specific details (like license information) to an existing HR employee record, so that I can properly onboard drivers into the TMS.","Enables the creation of a compliant and operational driver pool, which is fundamental for trip assignment and management.","Must Have","2","[]","[{""scenario"":""Successfully designate an existing HR employee as a driver"",""given"":""I am on the form view of an 'hr.employee' record"",""when"":""I enable a flag 'Is a Driver', enter a valid 'License Number' and future 'License Expiry Date', and save"",""then"":""The employee record is saved with the new driver-specific data, and this employee now appears in lists of available drivers.""},{""scenario"":""Driver-specific fields are hidden for non-driver employees"",""given"":""I am viewing the form of an 'hr.employee' record"",""when"":""The 'Is a Driver' flag is not enabled"",""then"":""The fields for 'License Number' and 'License Expiry Date' are not visible.""}]","[""WI-003: Extend Base Models (Driver part)"",""Inherit the `hr.employee` model."",""Add TMS-specific fields (`is_driver`, `license_number`, etc.)."",""Modify the `hr.employee` form view to add a 'TMS' tab and use `attrs` for conditional visibility.""]","[""All acceptance criteria validated and passing."",""Integration testing completed to ensure the new driver is available for trip assignment."",""Security rules restricting access to the 'Admin' role are implemented and verified.""]"
"US-010","Master Data Management","Admin logs a service history entry for a vehicle","Admin","As an Admin, I want to create, view, and manage detailed service history entries for each vehicle, so that I can maintain a complete maintenance log, track costs, and schedule future maintenance.","Provides a centralized record of vehicle maintenance, essential for tracking total cost of ownership, ensuring safety, and calculating accurate vehicle profitability.","Should Have","2","[""US-006""]","[{""scenario"":""Successfully create a new service history entry"",""given"":""I am viewing a vehicle's form"",""when"":""I navigate to 'Service History', click 'Add', fill in all mandatory fields (Date, Type, Cost, Odometer) and save"",""then"":""The new service entry is created and appears in the vehicle's service history list.""},{""scenario"":""Attempt to save a service entry with a future date"",""given"":""I am creating a new service entry"",""when"":""I enter a date in the future for the 'Service Date' and attempt to save"",""then"":""The system prevents saving and displays an error: 'Service Date cannot be in the future.'""}]","[""Create a new Odoo model `tms.vehicle.service.log`."",""Add a One2many field to the `tms.vehicle` model."",""Create form and tree views for the service log model."",""Implement Python constraints for validation.""]","[""All acceptance criteria validated and passing."",""Unit tests covering model constraints and validation logic are implemented."",""Security rules have been tested to ensure only Admins can access the functionality.""]"
"US-009","Master Data Management","Admin attaches a document with an expiry date to a vehicle record","Admin","As an Admin, I want to upload vehicle-specific documents, categorize them, and set their expiry dates, so that I can maintain a centralized, digital record of all compliance documents and enable timely renewal alerts.","Ensures legal and regulatory compliance by tracking critical vehicle documents, preventing fines and operational downtime. Centralizes documentation for easy access and auditing.","Must Have","5","[""US-006""]","[{""scenario"":""Successfully upload a new, valid document to a vehicle"",""given"":""I am viewing a vehicle form"",""when"":""I navigate to 'Documents', click 'Add', select a 'Document Type', choose a future 'Expiry Date', upload a valid file, and save"",""then"":""The document is successfully uploaded and appears in the list of documents for that vehicle.""},{""scenario"":""Attempt to upload a file with an unsupported format"",""given"":""I am on the 'Add Document' form"",""when"":""I attempt to upload a .zip file"",""then"":""The system rejects the file and displays an error: 'Invalid file type. Please upload JPG, PNG, or PDF.'""}]","[""WI-103: Implement Vehicle Document Management"",""Create a new Odoo model `tms.vehicle.document`."",""Add a One2many relationship to the `tms.vehicle` model."",""Configure Odoo's filestore to use Amazon S3.""]","[""All acceptance criteria validated and passing."",""Integration testing confirms files are correctly stored in and retrieved from the S3 bucket."",""Security testing has confirmed that file access is restricted to authorized users.""]"
"US-008","Master Data Management","Admin sets a vehicle's status to 'Active' or 'Inactive'","Admin","As an Admin, I want to set the status of a vehicle to 'Active' or 'Inactive', so that I can control which vehicles are available for new trip assignments while preserving historical records.","Improves data integrity by preventing assignment of unavailable vehicles and enhances operational efficiency by simplifying selection lists.","Must Have","1","[""US-006"",""US-027""]","[{""scenario"":""Admin deactivates an available vehicle"",""given"":""I am viewing an 'Active' vehicle"",""when"":""I change the status to 'Inactive' and save"",""then"":""The vehicle no longer appears in the list of selectable vehicles when creating a new trip.""},{""scenario"":""Attempting to deactivate a vehicle assigned to an active trip"",""given"":""A vehicle is currently assigned to an 'In-Transit' trip"",""when"":""I attempt to change its status to 'Inactive'"",""then"":""The system prevents the change and displays an error: 'This vehicle cannot be deactivated as it is currently assigned to an active trip.'""}]","[""WI-104: Implement Active/Inactive Status for Vehicles"",""Use Odoo's standard `active` field on the `tms.vehicle` model."",""Override the `write` method to add the validation check for active trips.""]","[""All acceptance criteria validated and passing."",""Unit tests are written for the business logic (blocking deactivation)."",""Integration testing confirms the vehicle selection list on the trip form is filtered.""]"
"US-007","Master Data Management","Admin edits an existing vehicle record","Admin","As an Admin, I want to edit the details of an existing vehicle record, so that I can ensure all vehicle information is accurate and up-to-date.","Ensures data integrity for the vehicle fleet, which is foundational for accurate trip planning, compliance tracking, and operational reporting.","Must Have","2","[""US-006"",""US-071"",""US-072"",""US-025""]","[{""scenario"":""Successfully edit and save a vehicle record"",""given"":""I am viewing the form for an existing vehicle"",""when"":""I modify the 'Capacity' from 20 to 25 and click 'Save'"",""then"":""The changes are saved, and the updated capacity is visible.""},{""scenario"":""Attempt to save with a duplicate Truck Number"",""given"":""Another vehicle already exists with the Truck Number 'KA01AB1234'"",""when"":""I change the current vehicle's 'Truck Number' to 'KA01AB1234' and click 'Save'"",""then"":""The save is prevented, and an error is displayed: 'Truck Number must be unique.'""},{""scenario"":""Non-Admin user attempts to edit a vehicle"",""given"":""I am logged in as a 'Driver'"",""when"":""I open a vehicle's form"",""then"":""The 'Edit' button is not visible, and all fields are read-only.""}]","[""Ensure the `tms.vehicle` form view and controller support edit mode."",""Apply uniqueness and format validation logic within the model's `write` method."",""Integrate with the audit trail system to log changes.""]","[""All acceptance criteria validated and passing."",""Unit tests for model validation logic implemented and passing."",""Audit trail generation is confirmed to be working as expected.""]"
"US-006","Master Data Management","Admin creates a new vehicle record","Admin","As an Admin, I want to create a new vehicle record by entering its key details like truck number, model, and capacity, so that the vehicle is officially registered in the system and can be assigned to trips.","Establishes the foundational master data for the vehicle fleet, enabling core functionalities like trip assignment, expense tracking, and operational reporting.","Must Have","3","[""US-058"",""US-070""]","[{""scenario"":""Successful creation of a new vehicle record"",""given"":""I am on the 'Vehicles' list view"",""when"":""I click 'Create', fill in all mandatory fields with valid data, and click 'Save'"",""then"":""A new vehicle record is created with a status defaulting to 'Active'.""},{""scenario"":""Attempt to create a vehicle with a duplicate Truck Number"",""given"":""A vehicle with the Truck Number 'KA01AB1234' already exists"",""when"":""I attempt to create a new vehicle with the same Truck Number"",""then"":""The system prevents saving and displays an error: 'Truck Number must be unique'.""}]","[""WI-101: Create `tms.vehicle` Model"",""WI-102: Create Vehicle Master Views and Menu""]","[""All acceptance criteria are validated and passing."",""Unit tests for the model's constraints and methods are written and achieve >80% coverage."",""The UI is confirmed to be responsive and meets accessibility standards.""]"
"US-005","Core System & Foundation","Admin grants additional specific permissions to a user group","Admin","As an Admin, I want to grant specific, granular permissions (like 'read-only access to invoices') to a user group, so that I can customize access rights beyond the standard roles to meet unique operational needs.","Provides flexibility to tailor user access to specific business needs. Enhances security by allowing adherence to the principle of least privilege.","Should Have","1","[""US-001"",""US-004""]","[{""scenario"":""Granting a new 'Read' permission to a standard role"",""given"":""A 'Dispatch Manager' user exists"",""when"":""I add a new 'Read' access right for the 'Invoice' model to the 'Dispatch Manager' group"",""then"":""The 'Dispatch Manager' user can now view invoices in a read-only state, but cannot create or edit them.""},{""scenario"":""Revoking a previously granted permission"",""given"":""The 'Dispatch Manager' group has 'Read' access to the 'Invoice' model"",""when"":""I remove the 'Read' access right for the 'Invoice' model from the group"",""then"":""The 'Dispatch Manager' user immediately loses access and can no longer view any invoices.""}]","[""Leverage the standard Odoo interface at Settings > Users & Companies > Groups."",""Ensure all custom TMS models are registered and available for permission assignment.""]","[""All acceptance criteria validated and passing."",""Integration testing completed successfully, confirming permissions are applied correctly."",""Security requirements validated, especially audit logging of permission changes.""]"
"US-004","Core System & Foundation","Admin assigns a primary role to a user","Admin","As an Admin, I want to assign a single, predefined primary role (like Dispatch Manager) to a user account, so that I can efficiently manage access control and ensure each user has the appropriate permissions.","Enforces a secure and manageable Role-Based Access Control (RBAC) system. Simplifies user onboarding and reduces the risk of unauthorized access.","Must Have","2","[""US-001"",""US-070""]","[{""scenario"":""Assign a primary role to a user"",""given"":""I am viewing a user's record"",""when"":""I select 'Dispatch Manager' from the 'Primary Role' dropdown and save"",""then"":""The user is assigned the 'Dispatch Manager' role, and their permissions are updated.""},{""scenario"":""Admin attempts to change their own role to a non-Admin role"",""given"":""I am editing my own user profile"",""when"":""I attempt to change my 'Primary Role' from 'Admin' to 'Driver'"",""then"":""The system prevents the change and displays an error: 'Administrators cannot revoke their own admin privileges.'""}]","[""WI-002: Define Core Security Groups (Roles)"",""Add a `Selection` field to the `res.users` model for 'Primary Role'."",""Override the `write` method to manage Odoo security group memberships based on the selection.""]","[""All acceptance criteria validated and passing."",""Unit tests for the role-switching logic are implemented with >80% coverage."",""Security requirement to prevent admin self-demotion is validated.""]"
"US-003","Core System & Foundation","Admin deactivates a user account","Admin","As an Admin, I want to deactivate a user's account, so that I can immediately revoke their system access when they are no longer with the company, ensuring data security.","Enhances system security by preventing unauthorized access from former employees. Preserves data integrity by retaining historical user actions for audit purposes.","Must Have","2","[""US-001"",""US-002""]","[{""scenario"":""Successful deactivation of a standard user account"",""given"":""I select an active user account"",""when"":""I trigger the 'Deactivate' action and confirm"",""then"":""The user's status is set to 'Inactive', and they are immediately unable to log in.""},{""scenario"":""Admin attempts to deactivate their own account"",""given"":""I am viewing my own user record"",""when"":""I attempt to use the 'Deactivate' action"",""then"":""The 'Deactivate' action is disabled or results in an error: 'Self-deactivation is not permitted'.""},{""scenario"":""Deactivated user's active session is terminated"",""given"":""A user is currently logged in"",""when"":""An Admin deactivates that user's account"",""then"":""The user's active session is invalidated, and they are forcefully logged out on their next action.""}]","[""Leverage Odoo's standard 'active' field and archive action on the `res.users` model."",""Implement a check to prevent self-deactivation."",""Implement logic to terminate active sessions for a deactivated user.""]","[""All acceptance criteria validated and passing."",""Security requirement for immediate session termination is validated."",""Audit trail logging is confirmed to be working as expected.""]"
"US-002","Core System & Foundation","Admin edits an existing user account's details and permissions","Admin","As an Admin, I want to edit an existing user's details, primary role, and specific permissions, so that I can maintain accurate user records and ensure their access rights align with their current job responsibilities.","Ensures system security by enforcing the principle of least privilege. Maintains data accuracy for user records. Supports operational changes.","Must Have","2","[""US-001"",""US-004""]","[{""scenario"":""Admin successfully changes a user's primary role"",""given"":""A user's primary role is 'Driver'"",""when"":""I change their role to 'Dispatch Manager' and save"",""then"":""The user is now assigned the permissions of the 'Dispatch Manager' role.""},{""scenario"":""Admin attempts to remove their own administrative privileges"",""given"":""I am editing my own user account"",""when"":""I attempt to remove the 'Admin' role from my account"",""then"":""The system prevents the change and displays an error: 'You cannot remove administrative privileges from your own account.'""}]","[""Leverage Odoo's standard user edit form."",""Implement logic in the `write` method of `res.users` to handle role changes and prevent admin self-lockout.""]","[""All acceptance criteria validated and passing."",""Unit tests for self-lockout prevention logic are implemented."",""E2E testing confirms an Admin can edit a user and permissions are correctly enforced.""]"
"US-001","Core System & Foundation","Admin creates a new user account with a primary role","Admin","As an Admin, I want to create a new user account by providing their name, email, and assigning a primary role, so that I can securely grant a new employee the appropriate level of system access.","Enables secure and controlled onboarding of new employees by provisioning role-based access to the system.","Must Have","1","[]","[{""scenario"":""Successful creation of a new user with a primary role"",""given"":""I am on the 'Create User' screen"",""when"":""I enter a unique email, a name, and select the 'Dispatch Manager' role"",""then"":""The system creates the new user and assigns them to the 'Dispatch Manager' security group.""},{""scenario"":""Attempt to create a user with a non-unique email address"",""given"":""A user with 'test@example.com' already exists"",""when"":""I enter 'test@example.com' for a new user and attempt to save"",""then"":""The system prevents creation and displays an error: 'A user with this email address already exists.'""}]","[""Extend the `res.users` model and view to include a 'Primary Role' field."",""Implement logic in the `create` and `write` methods to manage security group assignments based on the selected role.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the role assignment logic."",""Security requirement (Admin-only access) validated.""]"