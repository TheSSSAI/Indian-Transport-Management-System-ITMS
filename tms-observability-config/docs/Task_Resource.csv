"task_id","task_name","primary_skill","secondary_skills","complexity_level","estimated_hours","required_experience","productivity_factor","adjusted_hours","team_size","collaboration_required","dependencies","critical_path","skill_learning_curve","ramp_up_hours","resource_notes","alternative_approach","risk_factors","mitigation_strategy","quality_overhead","review_hours","documentation_hours","testing_coordination","integration_overhead"
"TASK-1201","Define Model-Level Access Rights (ACLs)","Odoo Security","CSV,RBAC","Medium","8.33","Senior","1.2","6.94","1","true","TASK-1101,TASK-2001,TASK-2101","true","Low","1","Requires deep understanding of Odoo's security layers to prevent data leaks. Must be reviewed by another senior resource.","Could be done by a Mid-level dev but requires 100% review time from a Senior, increasing total hours.","Incorrect ACLs can lead to critical security vulnerabilities or block legitimate user access.","Implement automated tests that check permissions for each role. Mandatory peer review.","1.25","2","1","4","1"
"TASK-402","Implement E-Invoice Generation Workflow with Sync/Async Fallback","API Integration","Python,Odoo ORM,RabbitMQ","Critical","24","Senior","1.3","18.46","1","true","TASK-401,TASK-9011","true","Medium","4","Core business-critical feature with high technical risk. Requires senior expertise in both Odoo and distributed systems.","Implement sync-only first, but this fails to meet resilience requirements (REQ-1-302).","RISK-001: GSP API unreliability. RISK-002: RabbitMQ integration complexity.","Develop a mock GSP server for testing. Implement Dead-Letter Queue (DLQ) and idempotent consumers.","4.8","4","2","8","6"
"TASK-9002","Design and Implement Terraform for Amazon EKS Cluster","Terraform","AWS EKS,Kubernetes,IAM","High","24.67","Senior","1.2","20.56","1","","TASK-9001","true","Low","","Foundational infrastructure task. Requires a DevOps specialist with proven EKS and Terraform experience.","Use AWS CloudFormation, but Terraform is the project standard.","RISK-004: Misconfiguration can lead to security vulnerabilities or an unstable environment.","Mandatory peer review of all Terraform code. Use `tfsec` for static analysis in CI pipeline.","3.7","4","2.5","4","2"
"TASK-301","Create Driver Portal Base Structure and Routes","OWL","JavaScript,Odoo Controllers","Medium","12","Mid","1","12","1","true","US-058","","Low","1","Foundation for all driver-facing features. Requires strong understanding of OWL component lifecycle and routing.","Use standard Odoo portal, but this fails to meet the simplified UI requirement (REQ-1-112).","Single point of failure on frontend expertise.","Pair programming with another developer. Comprehensive documentation of the component architecture.","1.8","2","1","4","2"