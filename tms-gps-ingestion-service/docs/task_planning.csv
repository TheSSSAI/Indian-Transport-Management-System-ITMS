"task_id","title","description","type","status","priority","assignee","reporter","due_date","estimated_hours","story_points","labels","sprint","sprint_goal","epic","epic_id","project","parent_id","dependencies","skills_required","complexity","risk_level","acceptance_criteria","definition_of_done","created_at","updated_at","sprint_start_date","sprint_end_date","capacity_allocation","collaboration_required","external_dependencies","testing_requirements","deployment_notes","business_value"
"TSK-004","Backend: Implement Model-Level Access Control Lists (ACLs)","Create and populate the security/ir.model.access.csv file. Define the Create, Read, Update, and Delete (CRUD) permissions for each of the four primary roles on all custom TMS models (tms.vehicle, tms.trip, etc.).","Task","Sprint Backlog","Critical","odoo.dev1@tms.com","project.manager@tms.com","2024-11-15","8","8","backend,odoo,security,rbac","Sprint 1","Establish core system foundation, including all master data models and the complete Role-Based Access Control (RBAC) framework.","Core System Foundation & RBAC","EPIC-001","Transport Management System 2.0","US-070","TSK-001","Odoo Security,XML","Medium","Medium","The ir.model.access.csv file is complete; Permissions align with requirements; Integration tests confirm CRUD permissions per role.","Code reviewed; Integration tests passing; Manual verification by QA completed.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-11-04","2024-11-15","100%","QA team for verification","None","Integration testing for each role's permissions.","Requires module upgrade to apply security changes.","Ensures data security and confidentiality by enforcing the principle of least privilege."
"TSK-021","Frontend: Develop Trip Form View with Dynamic Logic","Create the XML form view for `tms.trip`. Implement the onchange handler to auto-populate Source, Destination, and Distance when a Route is selected. Implement the dynamic calculation for 'Estimated Revenue'.","Task","Sprint Backlog","Critical","odoo.dev2@tms.com","project.manager@tms.com","2024-11-29","10.3","5","frontend,odoo,xml,trip-management","Sprint 2","Implement the complete end-to-end trip lifecycle and build the Driver Portal MVP, enabling trip creation, assignment, and execution from start to delivery.","Trip Lifecycle Management","EPIC-003","Transport Management System 2.0","US-026","TSK-019,TSK-017","Odoo,XML,Python","Medium","Low","Form view renders correctly; Selecting a Route auto-populates fields; 'Estimated Revenue' updates in real-time.","Code reviewed; Manual UI testing passed; E2E tests for dynamic logic passing.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-11-18","2024-11-29","100%","None","None","Manual UI testing, automated E2E tests for on-change events.","Requires module upgrade.","Initiates the primary revenue-generating workflow of the system."
"TSK-036","Backend: Implement E-Invoice Generation Resilient Workflow","Add the 'Generate E-Invoice' action to `account.move`. The action's method will first attempt a synchronous API call. On timeout or 5xx error, it will enqueue an asynchronous job using `queue.job` with an exponential backoff retry policy.","Task","Sprint Backlog","Critical","backend.dev1@tms.com","project.manager@tms.com","2024-12-13","16","13","backend,odoo,api-integration,gsp,resilience","Sprint 3","Deliver the core financial workflow with GST E-Invoicing and full expense management.","Financial Management & Compliance","EPIC-004","Transport Management System 2.0","US-037","TSK-035","Odoo,Python,queue.job,RabbitMQ","High","High","Successful sync call updates IRN immediately; Timeout enqueues a background job; Job retries and eventually updates the invoice; Permanent failures move invoice to 'failed' state.","Code reviewed; Integration tests simulating all API failure modes passing; Verified with GSP sandbox.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-12-02","2024-12-13","100%","QA team for extensive failure scenario testing.","GSP API sandbox availability.","Integration tests with a mock GSP server.","Requires RabbitMQ to be configured in the environment.","Ensures regulatory compliance, automates billing, and accelerates the payment cycle."
"TSK-045","Frontend: Develop Real-Time Map View Component","Create the Odoo Map view for trips. Extend the map view's JavaScript controller to poll a new backend endpoint for the latest vehicle locations and update the marker positions in real-time without page reloads.","Task","Sprint Backlog","High","frontend.dev@tms.com","project.manager@tms.com","2024-12-27","16.7","8","frontend,odoo,owl,gps,map","Sprint 4","Deliver advanced analytics and tracking features, including the live GPS map and manager's dashboard.","GPS Tracking & Geofencing","EPIC-005","Transport Management System 2.0","US-029","TSK-044","Odoo JS Framework,OWL,JavaScript,API Integration","High","Medium","Map loads with markers for 'In-Transit' vehicles; Marker positions update automatically; Clicking a marker shows trip details; UI is performant with up to 100 markers.","Code reviewed; E2E tests for map loading and updates are passing; Performance verified in staging.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-12-16","2024-12-27","100%","Backend team for location data API.","GPS data ingestion pipeline must be functional.","E2E test with a mock GPS data feed.","Requires Odoo `web_map` module to be installed.","Provides real-time operational awareness and proactive management of logistics."
"TSK-050","Develop and Test Data Migration ETL Scripts","Develop idempotent Python scripts to Extract data from legacy system CSVs, Transform it to the new Odoo model schema, and Load it into the staging database. Scripts must cover Customers, Vehicles, Drivers, and Open Invoices.","Task","Sprint Backlog","Critical","devops.eng@tms.com","project.manager@tms.com","2025-01-10","40","21","backend,python,etl,data-migration","Sprint 5","Finalize and validate data migration scripts and go-live readiness.","Data Migration & Go-Live","EPIC-008","Transport Management System 2.0","US-089","All master data models (US-006, US-011, US-015, US-037)","Python,Pandas,PostgreSQL,Odoo ORM","High","High","Scripts successfully migrate all scoped data; Scripts are idempotent; Scripts handle data cleansing and transformation rules; A detailed validation report is generated.","Code reviewed; Scripts successfully executed in a full dry-run on staging; Validation report approved by stakeholders.","2024-10-28T10:00:00Z","2024-10-28T10:00:00Z","2024-12-30","2025-01-10","100%","Business SMEs for data validation.","Legacy data extracts in CSV format.","At least two full dry-runs in staging environment.","Scripts will be executed during a planned production cutover window.","Enables business continuity by populating the new TMS with critical operational data before go-live."