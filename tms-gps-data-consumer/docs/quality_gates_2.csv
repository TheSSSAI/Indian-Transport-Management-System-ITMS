"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"Pull Request Merge Gate","Static & Unit","Pull Request Creation/Update","Code linting (Flake8, Black) passes; Pytest unit test coverage for new code > 80% (REQ-1-504); All unit tests pass; SonarQube scan finds no new critical bugs or security hotspots.","Block PR merge; Post failure report as a PR comment.","Development Team","Fully Automated","GitHub Actions, Pytest, SonarQube","Every PR commit","Automatic notification to PR author.","92","0.5","Prevents low-quality code and basic defects from entering the main branch."
"Staging Deployment Gate","Integration & E2E","Manual trigger for deployment to Staging","All integration tests pass; All critical-path E2E regression tests pass; Smoke test suite passes against the deployed environment.","Abort deployment; Rollback to previous version; Send alert to DevOps and QA teams.","DevOps / QA Team","Fully Automated","GitHub Actions, Playwright, Pytest","On-demand before staging deployment","Alert sent to #deployments Slack channel.","85","4","Ensures the staging environment is stable and ready for UAT and further testing."
"Release to Production Gate","Release Readiness","Manual Go/No-Go Decision Meeting","All UAT scenarios signed off by Product Owner; Performance tests show no degradation from baseline; Security scan (OWASP ZAP) shows zero critical/high vulnerabilities; All P1/P2 bugs resolved; Data migration dry-run successfully validated (for initial release).","Postpone release; Triage outstanding issues.","Project Manager, Tech Lead, QA Lead","Manual Checklist (supported by automated reports)","Jira, Confluence, JMeter Reports, ZAP Reports","Per Release","Go/No-Go decision by stakeholders.","99","24","Prevents deployment of a defective or non-performant product to customers."