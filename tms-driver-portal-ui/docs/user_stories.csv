"story_id","epic","title","user_role","description","business_value","priority","story_points","dependencies","acceptance_criteria","technical_tasks","definition_of_done"
"US-092","Driver Portal & Mobile UX","Driver: Access Self-Service Training Materials in Mobile Portal","Driver","As a Driver, I want to access a dedicated 'Help & Training' section within my mobile portal that contains short video tutorials and a downloadable quick-reference guide, so that I can learn how to use the system's features correctly at my own pace and quickly find answers to my questions while on the road.","Reduces the support load on dispatch and admin staff by empowering drivers with self-service training. Improves driver proficiency, reduces operational errors, and increases user adoption.","Medium","3","[""US-046"",""US-Admin-Manage-Training-Materials""]","[{""scenario"":""Navigation to Training Section"",""given"":""I am a user with the 'Driver' role and I am logged into the mobile-friendly web portal"",""when"":""I view the main navigation menu of the portal"",""then"":""I see a clearly labeled and easily tappable option for 'Help & Training'.""},{""scenario"":""Playing a Video Tutorial"",""given"":""I am on the 'Help & Training' page with a list of videos"",""when"":""I tap on a video tutorial's title or thumbnail"",""then"":""an embedded video player loads and plays the video directly within the page without navigating away.""},{""scenario"":""No Training Materials Available"",""given"":""I have navigated to the 'Help & Training' page and no training materials have been uploaded by an Admin"",""when"":""the page loads"",""then"":""I see a user-friendly message, such as 'No training materials are available at this time. Please check back later.'""}]","[""Create Odoo model 'tms.training.material' to store metadata."",""Develop Odoo controller to fetch training materials for the authenticated driver."",""Create OWL component for the 'Help & Training' page in the driver portal."",""Implement UI to list materials and embed an HTML5 video player."",""Ensure content is hosted on and streamed from Amazon S3.""]","[""All acceptance criteria validated and passing on target mobile browsers."",""Code has been peer-reviewed and merged into the main development branch."",""Unit tests for the new Odoo model and controller achieve >80% coverage."",""E2E tests simulating the driver's journey are implemented and passing."",""The UI has been reviewed and approved by the Product Owner for usability and adherence to design standards.""]"
"US-091","Transition & Go-Live","User receives role-based training and materials for the new TMS","All TMS user roles","As a new system user (Admin, Manager, Finance Officer, or Driver), I want to receive training materials and sessions tailored to my specific job responsibilities, so that I can confidently and effectively use the Transport Management System from the first day of go-live.","Ensures smooth user adoption, reduces post-launch errors and support requests, minimizes business disruption during cutover, and maximizes the return on investment in the new system.","High","13","[""US-046"",""ALL_CORE_FUNCTIONALITY""]","[{""scenario"":""Instructor-Led Training for Office Staff"",""given"":""The TMS is feature-complete and stable in the staging environment"",""when"":""An Admin, Dispatch Manager, or Finance Officer attends their scheduled, role-specific training session"",""then"":""They can successfully complete a set of predefined key tasks for their role in the staging environment.""},{""scenario"":""Driver Accesses Video Tutorials"",""given"":""A Driver is logged into the mobile-friendly web portal"",""when"":""They navigate to the 'Help & Training' section"",""then"":""They see a list of short video tutorials covering their key tasks and can play them directly within the browser.""},{""scenario"":""User Misses Scheduled Training"",""given"":""A user is unable to attend their scheduled instructor-led training session"",""when"":""They notify the project team"",""then"":""They are provided with alternative training options, such as a recorded session or a scheduled make-up class.""}]","[""Create and approve User Manual for office staff."",""Create, produce, and host video tutorials for drivers."",""Design and print Quick Reference Guide (QRG) for drivers."",""Develop OWL component in Driver Portal to host training videos (relates to US-092)."",""Schedule and conduct all instructor-led training sessions."",""Track training attendance and completion.""]","[""All acceptance criteria validated and passing."",""All training materials (User Manual, Videos, QRG) created, reviewed, and approved."",""Software component for Driver Portal training page is developed, code-reviewed, tested, and deployed to staging."",""All instructor-led training sessions have been completed and attendance recorded."",""A process for training new hires post-launch has been documented and handed over to the business.""]"
"US-090","Transition & Go-Live","Admin validates migrated data in a staging environment","Admin","As an Admin responsible for the system's go-live, I want to execute a dry-run of the data migration in a staging environment and receive a comprehensive validation report, so that I can verify data integrity, identify and fix any issues before the production cutover, and ensure a smooth and successful transition to the new TMS.","Mitigates the significant business risk of data loss, corruption, or a failed go-live. Ensures business continuity by verifying that all critical operational and financial data is accurately transferred to the new system.","High","13","[""US-089"",""US-006"",""US-011"",""US-015"",""US-039""]","[{""scenario"":""Validation report shows matching record counts for master data"",""given"":""The migration and validation process has been successfully executed"",""when"":""The Admin reviews the generated validation report"",""then"":""The report shows identical counts for 'active Customers', 'all Vehicles', and 'active Drivers' between the source and target.""},{""scenario"":""Validation report shows successful financial reconciliation"",""given"":""The migration and validation process has been successfully executed"",""when"":""The Admin reviews the generated validation report"",""then"":""The sum of all open invoice balances from the source data matches the sum of all outstanding balances in the staging TMS.""},{""scenario"":""Validation report identifies data transformation or mapping errors"",""given"":""A legacy data dump contains records that violate the new system's validation rules"",""when"":""The migration and validation process is executed"",""then"":""The validation report lists the specific records that failed to migrate, along with a reason for the failure.""}]","[""Develop Python scripts to perform post-migration validation."",""Script to compare record counts between source (CSVs) and target (Odoo DB)."",""Script to perform financial reconciliation of open invoices."",""Script to check for data integrity issues post-migration."",""Document the process for executing the dry-run and validation."",""Document the process to reset the staging environment for repeated dry-runs.""]","[""All acceptance criteria validated and passing."",""Migration validation scripts are written, code-reviewed, and merged."",""Unit tests for the validation logic are implemented and passing."",""A successful dry-run has been demonstrated to the project stakeholders using the full legacy dataset."",""The Admin user has formally signed off on the process and its results.""]"
"US-089","Transition & Go-Live","Admin executes a one-time data migration from the legacy system","System Administrator","As an Admin, I want to execute a well-defined process with supporting scripts to migrate key master data and open financial transactions from our legacy system into the new TMS, so that the system is populated with accurate, essential business data at go-live, ensuring operational continuity and a seamless transition for all users.","Enables business continuity by populating the new TMS with critical operational data (customers, vehicles, drivers, open invoices) before go-live, avoiding data loss and manual re-entry.","High","20","[""US-006"",""US-011"",""US-015"",""US-037""]","[{""scenario"":""Successful migration of active customer master data"",""given"":""A clean CSV file containing active customers from the legacy system is available"",""when"":""The Admin executes the customer migration process"",""then"":""All customer records from the file are created in Odoo, all fields are mapped correctly, and a validation report confirms matching record counts.""},{""scenario"":""Migration script handles records with missing mandatory data"",""given"":""A source CSV file where records are missing a mandatory field"",""when"":""The Admin executes the relevant migration script"",""then"":""The script skips the invalid records, logs a detailed error for each, and successfully processes all other valid records.""},{""scenario"":""Migration process is idempotent and prevents duplicate records"",""given"":""The customer migration process has already been run once successfully"",""when"":""The Admin re-runs the exact same customer migration process with the same source file"",""then"":""No duplicate customer records are created, and the log indicates records were skipped because they already exist.""}]","[""Analyze legacy data schema and create a detailed data mapping document."",""Develop Python scripts using Pandas for data cleansing and transformation."",""Develop loader scripts to import transformed data into Odoo using its ORM or data import tools."",""Create an orchestration script to run the migration in the correct sequence (Customers -> Vehicles/Drivers -> Invoices)."",""Implement robust logging for all successful, skipped, and failed records."",""Create a detailed runbook for executing the migration in production.""]","[""All acceptance criteria validated and passing in the staging environment."",""Migration scripts and supporting documentation are code-reviewed and merged."",""Unit tests for key data transformation logic are implemented."",""A full end-to-end migration dry-run has been successfully completed in the staging environment."",""The performance of the migration process is confirmed to be within the acceptable cutover window.""]"
"US-088","Financial Management & Compliance","System flags invoices and alerts on GSP API failure","Finance Officer","As a Finance Officer, I want the system to automatically flag an invoice and send me a high-priority alert when the e-invoice generation fails, so that I can immediately take corrective action, ensure GST compliance, and prevent delays in the billing cycle.","Ensures GST compliance by preventing silent failures of e-invoice generation. Improves operational efficiency by immediately notifying the responsible user to investigate and resolve billing issues.","High","5","[""US-037"",""US-087"",""US-060""]","[{""scenario"":""GSP API returns an error response during e-invoice generation"",""given"":""A Finance Officer has initiated the e-invoice generation process for a valid invoice"",""when"":""The system calls the GSP API and receives a definitive error response (e.g., HTTP 4xx or 5xx)"",""then"":""The invoice's status is immediately changed to 'E-Invoice Generation Failed' and a high-priority notification is sent to the 'Finance Officer' role.""},{""scenario"":""Visual indication of failed invoices in the list view"",""given"":""At least one invoice exists with the status 'E-Invoice Generation Failed'"",""when"":""A user with appropriate permissions views the main invoice list"",""then"":""The entire row for each failed invoice is visually highlighted (e.g., using a light red background).""},{""scenario"":""Failure after automated retries are exhausted"",""given"":""The system is configured for asynchronous e-invoice generation with a retry mechanism"",""when"":""An initial API call fails, and all subsequent automated retry attempts also fail"",""then"":""After the final retry fails, the invoice status is set to 'E-Invoice Generation Failed' and a single, final high-priority notification is sent.""}]","[""Add a new state 'e_invoice_failed' to the `account.move` model."",""Add a field to `account.move` to store the last GSP error message."",""Extend the GSP integration logic to catch exceptions and API errors."",""On failure, update the invoice state and trigger an Odoo notification to the 'Finance Officer' group."",""Modify the `account.move` tree view to apply conditional formatting for the 'e_invoice_failed' state.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved by team."",""Unit tests implemented for the error handling logic."",""Integration testing against a GSP sandbox environment completed successfully."",""User interface changes reviewed and approved by the Product Owner.""]"
"US-087","Financial Management & Compliance","Finance Officer generates a compliant e-invoice via GSP integration","Finance Officer","As a Finance Officer, I want to generate a GST-compliant e-invoice by sending trip data to a GST Suvidha Provider (GSP) through an automated integration, so that I can fulfill legal requirements efficiently, reduce manual errors, and ensure timely and accurate customer billing.","Ensures regulatory compliance with Indian GST laws, automates a critical financial process, reduces manual data entry errors, and accelerates the payment cycle.","High","13","[""US-037"",""US-015"",""US-039""]","[{""scenario"":""Successful e-invoice generation on the first attempt (Happy Path)"",""given"":""A Finance Officer is viewing a validated Odoo invoice in 'Posted' state"",""when"":""The officer clicks the 'Generate E-Invoice' button"",""then"":""The system receives a valid IRN and QR code from the GSP, stores these details against the invoice, and updates the status to 'Generated'.""},{""scenario"":""GSP API is temporarily unavailable or times out"",""given"":""A Finance Officer attempts to generate an e-invoice"",""when"":""The synchronous API call to the GSP fails due to a timeout or a 5xx server error"",""then"":""The task is added to an asynchronous queue for automatic retries, the status is set to 'Pending Retry', and the user is immediately notified.""},{""scenario"":""PDF invoice report is updated with e-invoice details"",""given"":""An e-invoice has been successfully generated for an invoice"",""when"":""A user prints or downloads the PDF version of the invoice"",""then"":""The PDF document prominently displays the signed QR code and the Invoice Reference Number (IRN).""}]","[""Develop a GSP API client service in Python to handle authentication, payload creation, and response parsing."",""Securely store GSP credentials in AWS Secrets Manager and implement logic to fetch them at runtime."",""Add fields to `account.move` to store IRN, QR code, and e-invoice status."",""Implement the sync/async fallback logic using RabbitMQ for retries as per REQ-1-302."",""Modify the Odoo QWeb report template for invoices to conditionally display the IRN and QR code."",""Add a 'Generate E-Invoice' button to the invoice form view.""]","[""All acceptance criteria validated and passing in the GSP sandbox environment."",""Code reviewed and approved."",""Unit tests for data mapping, API client, and error handling achieve >80% code coverage."",""Security review confirms credentials are managed securely via AWS Secrets Manager."",""The updated PDF invoice report is reviewed and approved.""]"
"US-086","Financial Management & Compliance","Finance Officer creates a pre-filled draft invoice from a completed trip","Finance Officer","As a Finance Officer, I want to automatically generate a pre-filled invoice from a completed trip record, so that I can reduce manual data entry, minimize errors, and speed up the customer billing process.","Improves billing accuracy and efficiency, reduces the time from service completion to invoicing, and enhances cash flow by minimizing data entry errors and delays.","High","2","[""US-015"",""US-026"",""US-037""]","[{""scenario"":""Generate a draft invoice from a completed trip"",""given"":""I am a Finance Officer viewing a Trip record in the 'Completed' state"",""when"":""I click the 'Create Invoice' button on the trip form"",""then"":""The system creates a new customer invoice in 'Draft' status and redirects me to the new invoice form.""},{""scenario"":""Correct data mapping from Trip to Invoice"",""given"":""A new draft invoice has been generated from a trip record"",""when"":""I view the newly created draft invoice"",""then"":""The invoice's 'Customer' matches the trip's 'Customer', and the invoice line's 'Unit Price' matches the trip's 'Rate'.""},{""scenario"":""Prevent duplicate invoice creation"",""given"":""I am viewing a 'Completed' trip for which an invoice has already been generated"",""when"":""I view the trip form"",""then"":""The 'Create Invoice' button is hidden, and a 'View Invoice' button/link is displayed instead.""}]","[""Add a 'Create Invoice' button to the `tms.trip` form view, visible only for 'Completed' trips."",""Create a Python method on the `tms.trip` model triggered by the button."",""Implement logic to create a new `account.move` record, mapping fields from the trip (customer, rate, etc.)."",""Add a `Many2one` field on `tms.trip` to link to the created invoice, preventing duplicates."",""Return an Odoo action to redirect the user to the new draft invoice.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved."",""Unit tests for the invoice creation method are written and achieve >80% coverage."",""Functionality is verified to be restricted to the correct user roles."",""Story is deployed and verified in the staging environment.""]"
"US-085","Financial Management & Compliance","System calculates trip profitability using only approved expenses","Dispatch Manager, Finance Officer, Admin","As a Dispatch Manager or Finance Officer, I want the trip profitability to be calculated using only expenses that have been explicitly approved, so that I can have an accurate and reliable view of a trip's financial performance for making informed business decisions.","Ensures financial accuracy in reporting by preventing unverified or rejected costs from impacting profitability metrics. This builds trust in the system's data and supports accurate analysis.","High","2","[""US-026"",""US-053"",""US-033""]","[{""scenario"":""Profitability calculation with mixed expense statuses"",""given"":""A trip exists with a revenue of 25,000, one 'Approved' expense of 8,000, one 'Pending' expense of 500, and one 'Rejected' expense of 200"",""when"":""a user views the trip's details"",""then"":""the system must display 'Total Approved Expenses' as 8,000 and 'Trip Profitability' as 17,000.""},{""scenario"":""Profitability calculation when an expense is approved"",""given"":""A trip shows a current profitability of 17,000 and has a 'Pending' expense of 500"",""when"":""a Dispatch Manager changes the status of the 'Pending' expense to 'Approved'"",""then"":""the trip's 'Trip Profitability' must be automatically updated to 16,500.""}]","[""Add a computed field `total_approved_expenses` to the `tms.trip` model."",""Implement the compute method to sum the `amount` of related `tms.expense` records where `state = 'approved'`."",""Add another computed field `profitability` that calculates `revenue - total_approved_expenses`."",""Ensure the `@api.depends` decorator correctly tracks changes to related expenses' state and amount."",""Add these new fields to the `tms.trip` form view.""]","[""All acceptance criteria validated and passing."",""Code is peer-reviewed and merged."",""Unit tests for the computed field logic are implemented and passing."",""Integration tests confirm that changing an expense status correctly triggers recalculation."",""Role-based access to profitability data is confirmed to be working as specified.""]"
"US-084","Financial Management & Compliance","System validates odometer reading for diesel expenses to ensure data integrity","Driver/Dispatch Manager","As a Dispatch Manager, I want the system to enforce that a new odometer reading for a diesel expense is always greater than the previous one for that vehicle, so that I can ensure data integrity for accurate fuel efficiency and profitability reporting.","Prevents data entry errors, ensuring the integrity of vehicle mileage data. This is critical for accurate fuel efficiency calculations (km/liter), maintenance scheduling, and vehicle profitability analysis.","High","2","[""US-053"",""US-006"",""US-027""]","[{""scenario"":""Submitting a valid (higher) odometer reading"",""given"":""A Driver is submitting a 'Diesel' expense for a vehicle where the last recorded odometer was 50,000 km"",""when"":""The Driver enters a new reading of 50,250 km and submits the form"",""then"":""The system validates the reading successfully and the expense is created.""},{""scenario"":""Submitting an invalid (lower) odometer reading"",""given"":""A Driver is submitting a 'Diesel' expense for a vehicle where the last recorded odometer was 50,000 km"",""when"":""The Driver enters a new reading of 49,950 km and attempts to submit"",""then"":""The system prevents the submission and displays a clear error: 'Odometer reading must be greater than the last recorded value of 50,000 km.'""},{""scenario"":""First-ever diesel expense for a vehicle"",""given"":""A Driver is submitting the first-ever 'Diesel' expense for a new vehicle"",""when"":""There is no previously recorded odometer reading for this vehicle, and the Driver enters a reading of 150 km"",""then"":""The system accepts the submission without performing the 'greater than' validation.""}]","[""Implement a server-side constraint (`@api.constrains`) on the `tms.expense` model."",""The constraint will trigger for 'Diesel' type expenses and query for the most recent previous odometer reading for the same vehicle."",""The logic must handle the case where no previous reading exists."",""If the new reading is not greater than the previous one, raise a `ValidationError` with a dynamic message."",""Add a unit test for this validation logic.""]","[""All acceptance criteria validated and passing."",""Backend validation logic is covered by unit tests."",""The full submission flow is covered by an integration test."",""Code has been peer-reviewed and merged."",""The database query for the last odometer reading is confirmed to be indexed and performant.""]"
"US-083","Financial Management & Compliance","Driver receives clear feedback when uploading an invalid expense receipt file","Driver","As a Driver, I want to receive immediate and clear feedback if my uploaded expense receipt is an invalid format or too large, so that I can quickly correct the issue and successfully submit my expense claim.","Ensures data quality, manages system storage costs, improves system security, and provides a better user experience by giving instant, actionable feedback.","High","2","[""US-053""]","[{""scenario"":""Uploading a file with an invalid type"",""given"":""A Driver is on the 'Submit Expense' form"",""when"":""the user attempts to upload a file with an unallowed extension (e.g., .docx, .zip)"",""then"":""the system immediately rejects the file and displays a clear error: 'Invalid file type. Please upload a JPG, PNG, or PDF.'""},{""scenario"":""Uploading a file that is too large"",""given"":""A Driver is on the 'Submit Expense' form"",""when"":""the user attempts to upload a valid file type (e.g., a JPG) that is 6MB in size"",""then"":""the system immediately rejects the file and displays a clear error: 'File is too large. Maximum size is 5MB.'""},{""scenario"":""Server-side validation rejects invalid file types"",""given"":""A user attempts to bypass client-side validation and submits a POST request with a disallowed file type"",""when"":""the server receives the upload request"",""then"":""the server-side logic validates the file's MIME type, rejects the file, and returns an appropriate error response.""}]","[""Implement client-side validation in the OWL component for the expense form to check file extension and size."",""Display user-friendly error messages in the UI upon validation failure."",""Implement mandatory server-side validation in the Odoo controller to check the MIME type and size of the uploaded file."",""Return a 400 Bad Request response with a clear error message from the server on validation failure.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved."",""Unit tests for backend validation logic implemented."",""Automated E2E tests for UI validation scenarios implemented and passing."",""Mandatory server-side security validation is confirmed to be in place.""]"
"US-082","Reporting, Dashboards & Alerts","System sends a cancellation notification to the driver","Driver","As a Driver, I want to receive an immediate notification when my assigned trip is canceled, so that I can avoid starting a journey that is no longer required and make myself available for a new assignment.","Prevents wasted fuel, time, and resources on canceled trips. Improves operational efficiency by allowing for faster driver reassignment.","High","2","[""US-031"",""US-027"",""US-060""]","[{""scenario"":""Successful notification on trip cancellation"",""given"":""A trip is in 'Assigned' status and is assigned to a specific driver"",""when"":""A user with 'Dispatch Manager' permissions changes the trip's status to 'Canceled'"",""then"":""The assigned driver immediately receives a notification via the Odoo internal notification system (bell icon) and email.""},{""scenario"":""Notification content is clear and informative"",""given"":""A trip from 'Mumbai Port' to 'Delhi Warehouse' is assigned to a driver"",""when"":""The trip is canceled"",""then"":""The body of the notification contains the essential details: 'Trip [ID] from Mumbai Port to Delhi Warehouse has been canceled.'""},{""scenario"":""Trip canceled with no driver assigned"",""given"":""A trip is in 'Planned' status and has no driver assigned"",""when"":""A user with 'Dispatch Manager' permissions cancels the trip"",""then"":""The system successfully cancels the trip and no driver notification is triggered.""}]","[""Override the `write` method of the `tms.trip` model."",""In the override, check if the `state` field is being changed to 'canceled' and if a `driver_id` exists."",""If conditions are met, call a method to send a notification to the `driver_id.user_id`."",""Use Odoo's `message_post` or `activity_schedule` to create the in-app and email notifications."",""Create or use an existing mail template for the email notification content.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved."",""Unit tests implemented for the notification trigger logic."",""Integration testing completed successfully in a staging environment with a test mail server.""]"
"US-081","Reporting, Dashboards & Alerts","System generates an alert for low card balance","Finance Officer","As a Finance Officer, I want the system to automatically generate an alert when a card's balance is updated to a level at or below its pre-set threshold, so that I can proactively recharge the card and prevent operational disruptions for our drivers.","Prevents operational delays and potential fines caused by insufficient funds on essential cards (FASTag, diesel). Improves financial planning and reduces human error from manual tracking.","High","2","[""US-042"",""US-043"",""US-065"",""US-061""]","[{""scenario"":""Alert generation when balance drops below threshold"",""given"":""A FASTag card record exists with a 'Low-Balance Threshold' set to 500 and a 'Balance' of 600"",""when"":""A Finance Officer updates the card's 'Balance' to 450 and saves the record"",""then"":""The system generates a low-balance alert for this card, visible on the dashboard and sent via notification.""},{""scenario"":""No duplicate alert for balance updates that remain below threshold"",""given"":""A card record has a threshold of 500, a balance of 400, and an active low-balance alert already exists"",""when"":""A Finance Officer updates the balance to 300"",""then"":""The system does NOT generate a new, duplicate low-balance alert.""},{""scenario"":""Existing alert is cleared when card is recharged above threshold"",""given"":""A card record has a threshold of 500, a balance of 400, and an active alert exists"",""when"":""A Finance Officer updates the 'Balance' to 2000 (a recharge)"",""then"":""The system automatically marks the existing low-balance alert as 'Resolved' or removes it from the active alerts panel.""}]","[""Override the `write` method of the `tms.card` model."",""Inside the method, check if the `balance` field was changed."",""Compare the old and new balance values against the `low_balance_threshold` to detect a transition from above-threshold to below-threshold."",""If a transition is detected, create a new `tms.alert` record."",""If the balance is updated from below to above the threshold, find and resolve any existing active alerts for that card.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved."",""Unit tests implemented for the balance check logic with >80% coverage."",""Integration testing completed successfully, verifying the flow from UI update to alert display.""]"
"US-080","Reporting, Dashboards & Alerts","System generates an alert for geofence entry/exit","Dispatch Manager, Admin","As a Dispatch Manager, I want to receive automatic alerts when a vehicle enters or leaves a predefined geofenced area, so that I can monitor trip milestones in real-time, verify arrivals and departures without manual checks, and quickly identify potential delays or deviations from the plan.","Provides real-time operational awareness of vehicle movements at key locations, enabling proactive management, improved security, and automation of manual tracking tasks.","High","8","[""US-021"",""US-029"",""US-065""]","[{""scenario"":""Vehicle enters a geofence for the first time on a trip"",""given"":""A vehicle is on an 'In-Transit' trip and a geofence 'Customer Warehouse A' is defined"",""when"":""The system processes a GPS location update for the vehicle that is inside the geofence boundary, and its previous state was 'outside'"",""then"":""The system generates an 'Entry' event and a corresponding alert is visible on the Dispatch Manager's dashboard.""},{""scenario"":""Vehicle exits a geofence"",""given"":""A vehicle has a known state of 'inside' the 'Customer Warehouse A' geofence"",""when"":""The system processes a GPS location update for the vehicle that is outside the geofence boundary"",""then"":""The system generates an 'Exit' event and a corresponding alert.""},{""scenario"":""No duplicate alerts are generated for a vehicle remaining within a geofence"",""given"":""A vehicle has already triggered an 'Entry' alert and its state is 'inside'"",""when"":""The system processes subsequent GPS location updates that are also inside the boundary"",""then"":""No new 'Entry' alerts for this geofence and vehicle shall be generated.""}]","[""Enhance the GPS Ingestion Microservice to perform a point-in-polygon check for each location update."",""Implement a state management mechanism (e.g., using Redis) to track the inside/outside status of each active vehicle for each geofence."",""When a state transition is detected, the microservice will publish a 'GeofenceEvent' to a dedicated RabbitMQ queue."",""Create a new consumer in the Odoo monolith to process these events from RabbitMQ."",""The Odoo consumer will create a `tms.alert` record, making it visible on the manager's dashboard.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved."",""Unit tests for the point-in-polygon logic and state transitions are implemented."",""Integration testing of the microservice -> message queue -> Odoo consumer flow is completed successfully."",""Performance testing confirms that the geofence check does not degrade the GPS ingestion pipeline.""]"
"US-079","Reporting, Dashboards & Alerts","System generates automated alerts for upcoming driver license expiry","Admin, Dispatch Manager","As an Admin / Dispatch Manager, I want the system to automatically generate and send alerts when a driver's license is approaching its expiry date, so that I can proactively ensure the driver renews their license in time, maintaining legal compliance and operational readiness.","Mitigates significant legal and operational risk by preventing drivers from operating with expired licenses. Ensures compliance, avoids fines, and maintains a fully operational pool of drivers.","High","5","[""US-012"",""US-014"",""US-060"",""US-065""]","[{""scenario"":""30-Day Expiry Alert Generation"",""given"":""An 'Active' driver has a license expiry date set to exactly 30 days from today"",""when"":""The daily automated check for license expiries is executed"",""then"":""An alert is generated for 'Admin' or 'Dispatch Manager' roles, visible on the dashboard's alert panel and sent via configured channels.""},{""scenario"":""No Alert for Inactive Drivers"",""given"":""A driver is marked as 'Inactive' and their license is due to expire in 30 days"",""when"":""The daily automated check is executed"",""then"":""No alert is generated for this driver.""},{""scenario"":""Idempotency of Alerts"",""given"":""An alert for the 30-day milestone has already been sent for a specific driver"",""when"":""The daily automated check runs again the next day (when the license is 29 days from expiry)"",""then"":""The system does not generate a duplicate 30-day alert for that driver.""}]","[""Create an Odoo scheduled action (`ir.cron`) to run daily."",""Implement the Python method for the cron job to query `hr.employee` records for active drivers."",""The method will check the `license_expiry_date` against the current date for the 30, 15, and 7-day milestones."",""For each match, create a `tms.alert` record with the relevant details."",""Implement logic to prevent creating duplicate alerts for the same milestone.""]","[""All acceptance criteria validated and passing."",""Code is peer-reviewed and merged."",""Unit tests are written for the date calculation and driver selection logic."",""Integration tests are written to verify the `ir.cron` job creates the correct notifications."",""The scheduled job's performance is verified against the NFR.""]"
"US-078","Reporting, Dashboards & Alerts","System generates automated alerts for upcoming vehicle document expiries","Admin, Dispatch Manager","As an Admin or Dispatch Manager, I want the system to automatically generate and send me alerts when a vehicle's compliance documents are nearing their expiry date, so that I can take timely action to renew them, ensuring our fleet remains compliant and operational without interruption.","Mitigates legal and financial risks associated with non-compliant vehicles. Reduces manual tracking effort, minimizes human error, and prevents operational downtime.","High","5","[""US-006"",""US-008"",""US-009"",""US-060"",""US-065""]","[{""scenario"":""30-Day Expiry Alert Generation"",""given"":""An 'Active' vehicle record exists with a document expiring exactly 30 days from the current date"",""when"":""The daily scheduled job for checking document expiries runs"",""then"":""An alert is generated and delivered to users with 'Admin' or 'Dispatch Manager' roles via in-app notification and email.""},{""scenario"":""Inactive Vehicles are Ignored"",""given"":""A vehicle is marked as 'Inactive' and it has a document that is due to expire in 30 days"",""when"":""The daily scheduled job runs"",""then"":""The system does not generate any expiry alerts for this inactive vehicle's documents.""},{""scenario"":""Alert Idempotency"",""given"":""A 30-day alert has already been generated for a specific document"",""when"":""The daily scheduled job runs on the following day"",""then"":""The system does not re-send the 30-day alert.""}]","[""Create an Odoo scheduled action (`ir.cron`) to run daily."",""Implement the Python method for the cron job to query `tms.vehicle.document` for documents linked to 'Active' vehicles."",""The method will check the `expiry_date` against the current date for the 30, 15, and 7-day milestones."",""For each match, create a `tms.alert` record."",""Implement logic to avoid creating duplicate alerts for the same milestone.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved."",""Unit tests implemented for the new logic with >80% coverage."",""Integration testing of the cron job and notification delivery completed successfully."",""Performance of the scheduled job has been tested against a representative data volume.""]"
"US-077","Trip Lifecycle Management","System automatically changes trip status to 'On Hold' for critical events","Dispatch Manager, Admin","As a Dispatch Manager, I want the system to automatically change a trip's status to 'On Hold' when a driver reports a critical event so that I am immediately alerted to operational disruptions and can take timely corrective action.","Enables immediate operational awareness of on-road incidents, allowing for faster response times, improved risk management, and better customer communication regarding delays.","High","3","[""US-050"",""US-026"",""US-065""]","[{""scenario"":""Trip status changes to 'On Hold' when driver logs an 'Accident' event"",""given"":""A trip exists with the status 'In-Transit'"",""when"":""The assigned driver logs a new trip event of type 'Accident'"",""then"":""The trip's status is automatically updated to 'On Hold' AND a high-priority alert is generated for the Admin/Manager dashboard.""},{""scenario"":""Trip status does not change for non-critical events"",""given"":""A trip exists with the status 'In-Transit'"",""when"":""The assigned driver logs a new trip event of type 'Fueling'"",""then"":""The trip's status remains 'In-Transit' and no critical alert is generated.""}]","[""Override the `create` method of the `tms.trip.event` model."",""In the override, check if the event type being created is marked as 'critical'."",""If it is, and the related trip's status is 'In-Transit', update the trip's status to 'on_hold'."",""Trigger the creation of a `tms.alert` record."",""Add a boolean field `is_critical` to the event type master data model.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved."",""Unit tests implemented for the state transition logic."",""Integration testing completed to verify the trigger from event creation to status change."",""The generation of a dashboard alert is verified.""]"
"US-076","Trip Lifecycle Management","System enforces mandatory fields for new trips to ensure data integrity","Dispatch Manager, Admin","As a Dispatch Manager, I want the system to prevent me from saving a new trip if the Customer, Source, or Destination fields are not filled, so that I can ensure every created trip record is complete, actionable, and maintains high data quality for downstream processes.","Ensures foundational data integrity for all trip records, preventing the creation of incomplete or unusable data. This improves operational efficiency and the accuracy of all subsequent processes.","High","1","[""US-015"",""US-026""]","[{""scenario"":""Attempt to save a trip with a missing Customer"",""given"":""A Dispatch Manager is on the 'Create New Trip' form"",""when"":""they fill in the Source and Destination but leave the Customer field empty, and then click 'Save'"",""then"":""the trip record is not saved and an error message is displayed indicating the 'Customer' field is required.""},{""scenario"":""Attempt to save a trip with a missing Source location"",""given"":""A Dispatch Manager is on the 'Create New Trip' form"",""when"":""they select a Customer and Destination but leave the Source field empty, and then click 'Save'"",""then"":""the trip record is not saved and an error message is displayed indicating the 'Source' field is required.""}]","[""In the `tms.trip` model definition, add the `required=True` attribute to the `customer_id`, `source`, and `destination` fields."",""Ensure the Odoo framework automatically handles the UI and server-side validation based on this attribute."",""Write a unit test to verify that calling `create` without these fields raises a `ValidationError`.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved."",""Unit tests for model-level validation are implemented and passing."",""User interface reviewed and approved for clarity of error states.""]"
"US-075","Trip Lifecycle Management","System prevents trip assignment if material weight exceeds vehicle capacity","Dispatch Manager","As a Dispatch Manager, I want the system to prevent me from assigning a vehicle to a trip if the material weight exceeds the vehicle's capacity, so that I can ensure compliance with safety regulations, prevent damage to our vehicles, and avoid operational delays.","Enforces legal and safety compliance by preventing vehicle overloading. Protects company assets from damage and reduces the risk of operational failures, fines, and accidents.","High","1","[""US-006"",""US-026""]","[{""scenario"":""Assigning a suitable vehicle"",""given"":""A trip has a 'Material Weight' of 15 Tons"",""when"":""The Dispatch Manager assigns a vehicle with a 'Capacity' of 20 Tons"",""then"":""The system successfully saves the trip record.""},{""scenario"":""Assigning an undersized vehicle"",""given"":""A trip has a 'Material Weight' of 25 Tons"",""when"":""The Dispatch Manager attempts to assign a vehicle with a 'Capacity' of 20 Tons"",""then"":""The system prevents saving and displays an error: 'Error: The selected vehicle's capacity (20 Tons) is less than the required material weight (25 Tons).'""}]","[""Implement a server-side constraint (`@api.constrains`) on the `tms.trip` model, triggered by changes to `vehicle_id` and `weight`."",""The constraint logic will compare `self.weight` with `self.vehicle_id.capacity`."",""If weight exceeds capacity, raise a `ValidationError` with a dynamic message."",""Write a unit test for this constraint.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved."",""Unit tests implemented with >80% coverage for the new logic."",""Security requirements (server-side enforcement) validated.""]"
"US-074","Trip Lifecycle Management","System prevents assignment of a driver with an expired license","Dispatch Manager, Admin","As a Dispatch Manager, I want the system to prevent me from assigning a driver with an expired license to a trip, so that I can ensure all trips are compliant with legal regulations and company safety policies, thereby mitigating risk.","Ensures compliance with the Indian Motor Vehicles Act, 1988, mitigates legal and financial risks from using unlicensed drivers, and upholds company safety standards.","High","1","[""US-011"",""US-012"",""US-027""]","[{""scenario"":""Assigning a driver with a valid license"",""given"":""A Dispatch Manager is on the Trip form"",""when"":""The manager selects a driver whose 'License Expiry Date' is in the future and saves"",""then"":""The system successfully assigns the driver.""},{""scenario"":""Attempting to assign a driver with an expired license"",""given"":""A Dispatch Manager is on the Trip form"",""when"":""The manager selects a driver whose 'License Expiry Date' is in the past and attempts to save"",""then"":""The system prevents saving and displays an error: 'Cannot assign [Driver Name]. Their license expired on [Expiry Date].'""}]","[""Implement a server-side constraint (`@api.constrains`) on the `tms.trip` model, triggered by changes to `driver_id`."",""The constraint logic will check if `self.driver_id.license_expiry_date` is less than the current date."",""If the license is expired, raise a `ValidationError`."",""Write a unit test for this constraint.""]","[""All acceptance criteria validated and passing."",""Code reviewed and approved."",""Unit tests implemented with >90% coverage for the validation logic."",""Security requirements (server-side enforcement) validated.""]"
"US-073","Master Data Management","Customer Form: Validate GSTIN format on entry","Finance Officer, Admin","As a Finance Officer, I want the system to validate the format of the GSTIN when I create or update a customer record, so that I can ensure data accuracy and prevent failures during the e-invoicing process.","Ensures data integrity of customer records, prevents downstream e-invoicing failures, supports regulatory compliance, and reduces manual correction effort.","High","1","[""US-015""]","[{""scenario"":""User enters a correctly formatted GSTIN"",""given"":""A user is on the 'Create/Edit Customer' form"",""when"":""The user enters a valid 15-character alphanumeric GSTIN and saves"",""then"":""The system accepts the input and saves the record successfully.""},{""scenario"":""User enters a GSTIN with incorrect length or pattern"",""given"":""A user is on the 'Create/Edit Customer' form"",""when"":""The user enters a GSTIN with fewer than 15 characters or an incorrect pattern"",""then"":""The system prevents saving and displays an error: 'Invalid GSTIN format. It must be 15 characters long.'""}]","[""Implement a server-side constraint (`@api.constrains`) on the `res.partner` model for the `vat` field."",""Use a regular expression to validate the GSTIN format."",""Raise a `ValidationError` if the format is incorrect."",""Write a unit test with valid and invalid GSTIN examples.""]","[""All acceptance criteria validated and passing."",""Backend validation logic is implemented with `@api.constrains`."",""Unit tests for the validation logic are implemented with at least 90% coverage."",""Code reviewed and approved.""]"
"US-072","Master Data Management","System validates format of Indian vehicle registration numbers","Admin, Dispatch Manager","As an Admin, I want the system to validate the format of the 'Truck Number' field when I create or edit a vehicle record, so that I can ensure data accuracy, prevent operational errors, and maintain compliance with Indian vehicle registration standards.","Ensures high data quality for a critical master data entity (Vehicle), which prevents operational errors, supports regulatory compliance, and improves the reliability of reporting.","High","1","[""US-006""]","[{""scenario"":""Valid standard format"",""given"":""An Admin is on the 'Create Vehicle' form"",""when"":""The user enters a valid truck number like 'MH12AB1234' and saves"",""then"":""The system accepts the value and saves the record.""},{""scenario"":""Invalid format"",""given"":""An Admin is on the 'Create Vehicle' form"",""when"":""The user enters an incomplete or invalid truck number like 'MH12AB123' and saves"",""then"":""The system prevents saving and displays an error: 'Invalid format. Please use a format like XX12AB1234.'""}]","[""Implement a server-side constraint (`@api.constrains`) on the `tms.vehicle` model for the `truck_number` field."",""Use a regular expression to validate the format."",""Raise a `ValidationError` if the format is incorrect."",""Write a unit test for the validation.""]","[""All acceptance criteria validated and passing."",""Backend validation using `@api.constrains` is implemented and covered by unit tests."",""Code has been peer-reviewed and merged.""]"
"US-071","Master Data Management","System validates uniqueness of vehicle truck number","Admin","As an Admin, I want the system to prevent me from saving a vehicle record if its truck number already exists for another vehicle, so that I can maintain unique and accurate vehicle records, ensuring data integrity across the entire system.","Ensures high data integrity for the vehicle master list, which prevents operational, financial, and reporting errors.","High","3","[""US-006"",""US-007""]","[{""scenario"":""Attempt to create a new vehicle with a duplicate truck number"",""given"":""A vehicle with the truck number 'MH12AB3456' already exists"",""when"":""An Admin attempts to create a new vehicle with the same truck number"",""then"":""The system prevents saving and displays an error: \""Error: Truck number 'MH12AB3456' is already in use.\""""},{""scenario"":""Uniqueness check is case-insensitive and ignores separators"",""given"":""A vehicle with the truck number 'MH12AB3456' already exists"",""when"":""An Admin attempts to create a new vehicle with 'mh 12 ab 3456'"",""then"":""The system correctly identifies it as a duplicate and prevents the save.""}]","[""Add a `_sql_constraints` attribute to the `tms.vehicle` model for the `truck_number` field to enforce uniqueness at the database level."",""Consider adding a normalized, computed field for the truck number (uppercase, no spaces) and apply the unique constraint on that field for robust checking."",""Write a unit test that attempts to create two vehicles with the same number and expects an `IntegrityError`.""]","[""All acceptance criteria validated and passing."",""A database-level unique constraint is implemented on the truck number field."",""Unit tests for normalization and validation logic are implemented."",""Code reviewed and approved.""]"
"US-070","User & Access Management","System Enforces Role-Based Access Control (RBAC) for All Data Models","System Administrator","As a System Administrator, I want the system to strictly enforce data access and modification rights based on a user's assigned role, so that sensitive company data is protected, operational integrity is maintained, and each user can only perform actions relevant to their job function.","Ensures data security and confidentiality, enforces the principle of least privilege, prevents unauthorized actions, and supports compliance with data protection regulations.","High","8","[""US-004"",""US-026"",""US-037"",""US-053""]","[{""scenario"":""Finance Officer is restricted from operational functions"",""given"":""A user is logged in with the 'Finance Officer' role"",""when"":""The user attempts to create or assign a new Trip"",""then"":""The system prevents the action by hiding the 'Create' button or raising an access error.""},{""scenario"":""Driver has restricted, personal access (Record-Level Security)"",""given"":""A user is logged in with the 'Driver' role"",""when"":""The user navigates to the list of Trips"",""then"":""The user can ONLY see Trip records where they are the assigned driver.""},{""scenario"":""Driver is restricted from viewing sensitive financial data (Field-Level Security)"",""given"":""A user with the 'Driver' role is viewing a Trip form assigned to them"",""when"":""The Trip form is displayed"",""then"":""Fields such as 'Rate', 'Total Revenue', and 'Profitability' are not visible.""}]","[""Define security groups in XML for each role (Admin, Dispatch Manager, Finance Officer, Driver)."",""Create the `ir.model.access.csv` file to define model-level CRUD permissions for each group."",""Implement `ir.rule` records (record rules) in XML to enforce row-level security, especially for the Driver role."",""Use the `groups` attribute in XML views to implement field-level and action-level security."",""Write integration tests to verify access rights for each role.""]","[""All acceptance criteria validated and passing for all defined roles."",""Code for security groups, access rights, and record rules is implemented and peer-reviewed."",""Automated integration tests are written to verify key access restrictions."",""A manual testing cycle has been completed by QA, logging in as each user type.""]"
"US-069","Reporting, Dashboards & Alerts","Manager generates a Detailed Expense Report with comprehensive filtering and export capabilities","Managerial User (Admin, Dispatch Manager, Finance Officer)","As a Manager, I want to generate a detailed expense report with flexible filtering options (by date range, expense type, vehicle, and driver), so that I can perform in-depth analysis of operational costs, identify spending trends, and make informed decisions to improve financial efficiency.","Provides critical insights into operational costs, enabling better budget management, identification of cost-saving opportunities, and enhanced financial oversight.","High","8","[""US-053"",""US-033"",""US-041"",""US-006"",""US-011""]","[{""scenario"":""Generate and filter the report by multiple criteria"",""given"":""The system contains multiple expense records"",""when"":""A Manager generates the 'Detailed Expense Report', filtering by 'Vehicle' and 'Expense Type' (e.g., 'Diesel')"",""then"":""The system displays a table containing only the expense records that match all applied filter criteria.""},{""scenario"":""Export the filtered report to Excel and PDF"",""given"":""A filtered expense report is displayed on the screen"",""when"":""The Manager clicks the 'Export to Excel' or 'Export to PDF' button"",""then"":""The browser downloads a file containing all the data from the filtered report.""}]","[""Create a new dynamic report view using OWL."",""Develop an Odoo controller to handle data fetching with multiple optional filters."",""Write an optimized database query to join expense data with trips, vehicles, and drivers."",""Implement server-side logic for exporting the filtered data to Excel (using openpyxl) and PDF (using QWeb)."",""Ensure access to the report is restricted to manager roles.""]","[""All acceptance criteria validated and passing."",""Code has been peer-reviewed and merged."",""Performance testing against a large dataset confirms the NFRs are met."",""Security review confirms that access controls are correctly implemented.""]"
"US-068","Reporting, Dashboards & Alerts","Manager generates a Vehicle Profitability Report","Manager (Admin, Dispatch Manager, Finance Officer)","As a Manager, I want to generate a Vehicle Profitability Report that aggregates total revenue and total expenses for each vehicle over a specific period, so that I can analyze the financial performance of each asset and make informed decisions about fleet optimization.","Enables data-driven asset management by providing clear financial performance indicators for each vehicle, helping to optimize fleet usage and improve company profitability.","High","8","[""US-006"",""US-026"",""US-033"",""US-041"",""US-063""]","[{""scenario"":""Accurate Revenue Calculation"",""given"":""A Vehicle Profitability Report has been generated for a specific date range"",""when"":""I view the 'Total Revenue' column for a specific vehicle"",""then"":""The value is the sum of the revenue from all trips assigned to that vehicle with a 'Completed' date within the date range.""},{""scenario"":""Accurate and Comprehensive Expense Calculation"",""given"":""A Vehicle Profitability Report has been generated"",""when"":""I view the 'Total Expenses' column for a specific vehicle"",""then"":""The value is the sum of all 'Approved' trip-related expenses AND all non-trip-related expenses associated with that vehicle within the date range.""},{""scenario"":""Accurate Profit and Margin Calculation"",""given"":""The report has 'Total Revenue' and 'Total Expenses' calculated"",""when"":""I view the 'Net Profit' and 'Profit Margin (%)' columns"",""then"":""'Net Profit' is (Total Revenue - Total Expenses), and 'Profit Margin (%)' is ((Net Profit / Total Revenue) * 100).""}]","[""Create the UI for the report, including date range filters."",""Develop the backend logic to perform a complex aggregation query, joining vehicles, trips, and expenses."",""The query must sum revenue from completed trips and expenses (both trip and non-trip related) within the specified date range."",""Implement the calculation logic for Net Profit and Profit Margin."",""Add export functionality for PDF and Excel.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for all calculation logic."",""Performance requirements verified against a realistic test dataset."",""Security access rules are implemented and tested.""]"
"US-067","Reporting, Dashboards & Alerts","Manager generates a Fuel Efficiency Report","Admin, Dispatch Manager","As a Manager, I want to generate a fuel efficiency report (km/liter) for each vehicle so that I can monitor fuel consumption, identify inefficient vehicles or driving patterns, and take corrective actions to control fuel costs.","Provides critical insights into fuel expenses, enabling data-driven decisions for vehicle maintenance, driver training, and cost reduction.","High","5","[""US-006"",""US-053"",""US-054"",""US-063""]","[{""scenario"":""Generate report with valid data"",""given"":""I am on the 'Fuel Efficiency Report' page"",""when"":""I select a date range for a vehicle with at least two 'Diesel' expense entries with odometer readings"",""then"":""The system displays 'Total Distance' (last - first odometer), 'Total Fuel' (sum of liters), and 'Fuel Efficiency' (Distance / Fuel).""},{""scenario"":""Vehicle has fuel expenses but only one odometer reading"",""given"":""I am on the 'Fuel Efficiency Report' page"",""when"":""I generate a report for a period where a vehicle has only one odometer reading recorded"",""then"":""The report row for that vehicle displays 'Total Distance (km)' as 0, and 'Fuel Efficiency (km/L)' as 'N/A'.""}]","[""Create the UI for the report with date and vehicle filters."",""Develop the backend logic to query 'Diesel' type expenses for selected vehicles within the date range."",""The logic must find the min and max odometer readings to calculate distance, and sum the fuel quantities."",""Implement the fuel efficiency calculation, gracefully handling division-by-zero errors."",""Add export to Excel functionality.""]","[""All acceptance criteria validated and passing."",""Unit tests for the calculation logic achieve >80% code coverage."",""Performance testing confirms report generation is within the 15-second threshold."",""Security rules restricting access to authorized roles are verified.""]"
"US-066","Reporting, Dashboards & Alerts","Manager generates a Driver Performance Report","Dispatch Manager, Admin","As a Dispatch Manager or Admin, I want to generate a filterable Driver Performance Report with key metrics like on-time delivery percentage, total trips, and incentives earned, so that I can objectively evaluate driver performance, provide data-driven feedback, and identify opportunities for recognition or training.","Enables data-driven driver management, improves operational oversight, and provides objective data for performance reviews and incentive programs.","High","5","[""US-011"",""US-026"",""US-050"",""US-052"",""US-054""]","[{""scenario"":""Report Data Columns"",""given"":""the Driver Performance Report is displayed"",""when"":""the user views the report table"",""then"":""the table contains 'Driver Name', 'Total Trips Completed', 'On-Time Delivery %', 'Average Fuel Efficiency', and 'Number of Critical Events'.""},{""scenario"":""Calculation of On-Time Delivery Percentage"",""given"":""a driver has completed multiple trips with 'Expected Delivery Dates' and POD timestamps"",""when"":""the system calculates the 'On-Time Delivery %'"",""then"":""the value is calculated as `(Number of trips where POD timestamp <= Expected Delivery Date) / (Total 'Delivered' trips) * 100`.""}]","[""Create the UI for the report with filters for date range and driver."",""Develop the backend logic to query and aggregate data from trips, expenses, and events for each driver."",""Implement the calculation for each metric, including on-time delivery percentage and average fuel efficiency."",""Implement export to Excel and PDF functionality."",""Restrict access to Dispatch Manager and Admin roles.""]","[""All acceptance criteria validated and passing."",""Unit tests for all calculation logic implemented with >80% coverage."",""Performance testing confirms report generation is within the 5-second threshold."",""Security access controls are verified.""]"
"US-065","Reporting, Dashboards & Alerts","Manager views and acknowledges critical alerts on the dashboard","Dispatch Manager, Admin","As a Dispatch Manager or Admin, I want to view a dedicated panel of critical system alerts on my dashboard and be able to acknowledge them, so that I can immediately identify and take action on urgent operational issues, ensuring timely resolution and clear accountability.","Improves operational responsiveness by centralizing critical, time-sensitive information. Reduces risk by ensuring urgent issues are seen and acted upon promptly.","High","8","[""US-064"",""US-050"",""US-077"",""US-078"",""US-081""]","[{""scenario"":""Display of a new critical trip event alert"",""given"":""I am a Manager viewing the dashboard, and a driver has logged a critical event ('Accident')"",""when"":""the dashboard loads or updates"",""then"":""the 'Critical Alerts' panel displays a new, unacknowledged alert with event details.""},{""scenario"":""Acknowledging a critical alert"",""given"":""I am viewing an unacknowledged alert"",""when"":""I click the 'Acknowledge' button"",""then"":""the alert's visual state changes to 'acknowledged' and an audit entry is created.""},{""scenario"":""Navigating from an alert to its source record"",""given"":""I am viewing an alert related to a trip"",""when"":""I click on the main body of the alert"",""then"":""the system navigates me directly to the detail form view of the associated trip record.""}]","[""Create a new Odoo model `tms.alert` to store alert data, status, and audit information."",""Develop an OWL component for the 'Critical Alerts' panel on the dashboard."",""Implement a controller to fetch active alerts for the current user."",""Implement a controller action for acknowledging an alert, which updates the alert record and logs the action."",""Use Odoo's bus system to push real-time updates to the alerts panel.""]","[""All acceptance criteria validated and passing."",""Unit test coverage for new logic is at or above 80%."",""An end-to-end automated test for the primary success scenario is passing."",""The performance impact on dashboard loading is within acceptable limits."",""Security audit trail for acknowledgment is confirmed to be working.""]"
"US-064","Reporting, Dashboards & Alerts","Manager views the main dashboard with operational and financial KPIs","Admin, Dispatch Manager","As a Manager, I want to view a real-time, consolidated dashboard with key operational and financial widgets, so that I can quickly assess the health of the business, identify immediate priorities, and make informed decisions without needing to run multiple reports.","Provides an at-a-glance overview of business health, enabling faster, data-driven decision-making and proactive identification of operational issues.","High","8","[""US-006"",""US-026"",""US-037"",""US-053"",""US-009"",""US-050""]","[{""scenario"":""Vehicle Status widget displays correct data"",""given"":""I am viewing the main dashboard"",""when"":""the 'Vehicle Status' widget finishes loading"",""then"":""I see a pie chart correctly representing the proportion of all 'Active' vehicles in 'Available', 'On-Trip', and 'In-Maintenance' statuses.""},{""scenario"":""Operational and Financial KPI cards display correct values"",""given"":""I am viewing the main dashboard"",""when"":""the KPI cards finish loading"",""then"":""I see distinct KPI cards for 'Pending Deliveries', 'Delayed Trips', 'Pending Payment Collections', 'Total Revenue (MTD)', and 'Total Expenses (MTD)'.""},{""scenario"":""Clicking on a KPI card navigates to a relevant filtered list"",""given"":""The KPI cards are displayed"",""when"":""I click on the 'Delayed Trips' KPI card"",""then"":""I am navigated to the Trip list view, pre-filtered to show only trips that are 'In-Transit' and past their 'Expected Delivery Date'.""}]","[""Create a custom Odoo dashboard view."",""Develop backend Odoo controllers to provide aggregated data for each KPI and widget."",""Write optimized database queries for each controller to ensure performance."",""Develop custom OWL components for each dashboard widget (pie chart, KPI cards, alerts panel)."",""Integrate a charting library (e.g., Chart.js) for the pie chart component."",""Implement click-through functionality to navigate to filtered list views.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for all KPI calculation logic."",""Performance requirements (LCP < 3s) verified."",""Security requirements (role-based access) validated."",""Dashboard is confirmed to be responsive on mobile viewport.""]"
"US-063","Reporting, Dashboards & Alerts","Manager exports a report to Excel or PDF for offline use","Admin, Dispatch Manager, or Finance Officer","As a Manager, I want to export any report I am viewing to either an Excel or PDF file, so that I can perform offline analysis, share the data with stakeholders, and archive records for compliance and historical purposes.","Enables data portability for offline analysis, sharing with external stakeholders, and creating physical or digital archives for auditing and record-keeping.","High","5","[""US-036"",""US-045""]","[{""scenario"":""Successful export of filtered data to Excel"",""given"":""I am viewing the 'Trip Profitability Report' and have filtered it by a specific customer and date range"",""when"":""I click the 'Export to Excel' button"",""then"":""the browser downloads an '.xlsx' file with data matching the filtered view.""},{""scenario"":""Successful export of filtered data to PDF"",""given"":""I am viewing the 'Outstanding Invoices Report'"",""when"":""I click the 'Export to PDF' button"",""then"":""the browser downloads a '.pdf' file with the data presented in a clean, paginated table.""},{""scenario"":""Export functionality respects user permissions"",""given"":""I am logged in as a 'Driver'"",""when"":""I attempt to access a report URL directly"",""then"":""the system either denies access or the 'Export' buttons are not present.""}]","[""Create a generic, reusable export mechanism for Odoo reports."",""For PDF export, develop a standard QWeb template with a header for filters and a paginated table for data."",""For Excel export, create a controller that takes report data and generates an XLSX file using a library like `openpyxl`."",""Add 'Export to PDF' and 'Export to Excel' buttons to all relevant report views."",""Ensure the export logic respects the active filters on the report.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the export logic."",""Performance for exporting 1,000 records verified to be under 10 seconds."",""Security requirements validated by testing with different user roles.""]"
"US-062","System Configuration & Admin","Admin schedules and broadcasts advance notification for planned system maintenance","All active system users","As an active system user, I want to receive a clear and timely notification about upcoming planned maintenance at least 24 hours in advance, so that I can plan my work accordingly and avoid disruption to my tasks.","Minimizes operational disruption by allowing users to plan around system downtime. Increases user trust and satisfaction through proactive communication.","High","5","[""US-004"",""US-060""]","[{""scenario"":""Admin successfully schedules a maintenance notification"",""given"":""The Admin is on the 'Schedule Maintenance' interface"",""when"":""The Admin creates a notification with a start time 48 hours in the future and a clear message"",""then"":""A notification is immediately sent to all 'Active' users via both in-app and email channels.""},{""scenario"":""Admin attempts to schedule maintenance with less than 24 hours notice"",""given"":""The Admin is on the 'Schedule Maintenance' form"",""when"":""The Admin sets the start time to 12 hours from now and tries to save"",""then"":""The system prevents saving and displays an error: 'Maintenance must be scheduled at least 24 hours in advance.'""},{""scenario"":""Admin cancels a previously scheduled maintenance"",""given"":""A maintenance window has been previously scheduled"",""when"":""The Admin triggers a 'Cancel' action"",""then"":""The system sends a new notification to all 'Active' users stating that the maintenance has been canceled.""}]","[""Create a new Odoo model `tms.maintenance.schedule` with fields for start/end times and message."",""Create form and tree views for managing maintenance schedules, restricted to Admins."",""Implement server-side validation for the 24-hour advance notice rule."",""On creation or cancellation, trigger an asynchronous job to send notifications to all active users."",""Use Odoo's mail and messaging system to broadcast the notifications.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for business logic with >80% coverage."",""Performance requirements verified (asynchronous sending)."",""Security requirements validated (Admin-only access).""]"
"US-061","Reporting, Dashboards & Alerts","User configures notification preferences for type and channel","Any authenticated system user","As an authenticated system user, I want to access a settings screen where I can select which types of notifications I receive and choose the delivery channel (in-app or email) for each type, so that I can control the volume of alerts and reduce notification fatigue.","Improves user satisfaction and efficiency by reducing 'alert fatigue'. Ensures that critical notifications are not missed due to an overwhelming volume of less important ones.","Medium","5","[""US-058"",""US-060"",""US-078"",""US-081""]","[{""scenario"":""System respects the user's configured preferences"",""given"":""I am a Finance Officer and I have configured my preferences to receive 'Low Card Balance' alerts via 'In-App' but NOT 'Email'"",""when"":""A system event triggers a 'Low Card Balance' alert targeted to me"",""then"":""I receive a notification within the Odoo application, but I do not receive an email.""},{""scenario"":""Notification options are filtered based on user role"",""given"":""I am logged in as a 'Driver'"",""when"":""I view my 'Notification Preferences' screen"",""then"":""I do not see options for administrative or financial alerts like 'GSP API Failure'.""},{""scenario"":""New users have a set of default notification preferences"",""given"":""An Admin creates a new user account"",""when"":""The new user logs in for the first time"",""then"":""A predefined set of default preferences is already configured, with critical alerts enabled for all channels.""}]","[""Create a new Odoo model `tms.notification.preference` linked to `res.users`."",""Create a new settings view for users to manage their preferences."",""Create a master data model or selection field for all possible notification types."",""Refactor the centralized notification dispatch service to query the user's preferences before sending any notification."",""Implement logic to apply system-wide defaults if a user has no preference saved.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the preference-checking logic."",""Integration testing completed to confirm preferences are respected by the notification system."",""Security requirement (users can only edit their own preferences) is validated.""]"
"US-060","Reporting, Dashboards & Alerts","User receives in-app and email notifications for critical events","Any authenticated system user","As a System User, I want to receive timely notifications for important system events via an in-app notification center and email, so that I can stay informed and take prompt action on critical operational, financial, and compliance-related matters.","Improves operational responsiveness by proactively alerting users to critical events, enhances compliance by warning of upcoming deadlines, and increases efficiency by reducing the need for manual system checks.","High","8","[""US-050"",""US-009"",""US-031""]","[{""scenario"":""Manager receives notification for a critical trip event"",""given"":""A Dispatch Manager is logged into the TMS"",""when"":""A driver logs a critical event (e.g., 'Accident')"",""then"":""The manager's in-app notification icon immediately shows an unread count badge and they receive an email with a direct link to the trip.""},{""scenario"":""User interacts with the in-app notification center"",""given"":""A user has several unread notifications"",""when"":""The user clicks on the notification icon to open the panel"",""then"":""The panel displays a list of recent notifications, and after viewing, the unread count badge disappears.""},{""scenario"":""System handles email service failure"",""given"":""The external SMTP email service is unavailable"",""when"":""A notifiable event occurs"",""then"":""The in-app notification is still delivered successfully and the system logs an error indicating the email delivery failure.""}]","[""Develop a centralized notification service/mixin in Odoo."",""Create a custom OWL component for the in-app notification center (bell icon and panel)."",""Integrate the component with Odoo's bus system for real-time updates."",""Create base mail templates for email notifications."",""Ensure all notification-triggering logic uses asynchronous processing (e.g., via RabbitMQ) to avoid blocking user actions.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the notification service."",""The OWL component for the notification center is implemented and approved."",""Performance requirements for asynchronous processing are verified.""]"
"US-059","User & Access Management","System automatically terminates user session after a configurable period of inactivity","Any authenticated user","As an authenticated system user, I want my session to automatically terminate after a configurable period of inactivity, so that sensitive company and customer data is protected from unauthorized access on an unattended device.","Enhances system security by mitigating the risk of unauthorized access to sensitive data from an unattended, logged-in terminal. Supports compliance with data protection regulations.","High","5","[""US-058"",""US-022""]","[{""scenario"":""Successful Timeout and Logout"",""given"":""the session timeout is configured to 15 minutes and a user is logged in"",""when"":""the user remains inactive for 15 minutes"",""then"":""the user is automatically logged out, their session is invalidated on the server, and they are redirected to the login page.""},{""scenario"":""Session Extension from Warning Dialog"",""given"":""a session timeout warning modal is displayed after 13 minutes of inactivity"",""when"":""the user clicks the 'Stay Logged In' button"",""then"":""the modal closes and the inactivity timer is reset to 15 minutes.""},{""scenario"":""Server-Side Session Invalidation"",""given"":""a user's session has timed out"",""when"":""a malicious actor attempts to reuse the old session token to make a direct API call"",""then"":""the server rejects the request with an authentication error (e.g., 401 Unauthorized).""}]","[""Implement a client-side inactivity timer in JavaScript/OWL."",""Create an OWL component for the warning modal dialog."",""Implement a custom Odoo controller or modify session handling to enforce server-side session expiration."",""Ensure user activity (API calls) resets both the client and server-side timers."",""Link the timeout duration to the value configured in the Admin settings (US-022).""]","[""All acceptance criteria validated and passing."",""Automated E2E tests for the timeout and session extension flow are implemented."",""Security requirement for server-side session invalidation is explicitly tested."",""Documentation for the Admin setting is added to the Administrator Guide.""]"
"US-058","User & Access Management","User logs into the system with credentials","Any Registered System User","As a Registered System User, I want to securely log into the Transport Management System using my email and password, so that I can gain access to the dashboards, features, and data relevant to my specific role.","Enables secure, role-based access to the system, which is the primary gateway for all system functionality.","High","1","[""US-001""]","[{""scenario"":""Successful login with valid credentials"",""given"":""I am a registered user with an active account on the login page"",""when"":""I enter my correct email and password and click 'Log In'"",""then"":""I am successfully authenticated and redirected to my role-specific dashboard.""},{""scenario"":""Login attempt with an incorrect password"",""given"":""I am on the login page with a valid email"",""when"":""I enter an incorrect password"",""then"":""The system displays a generic error 'Invalid email or password.' and I remain on the login page.""},{""scenario"":""Login communication is secure"",""given"":""I am on the login page"",""when"":""I submit my login credentials"",""then"":""The request is sent to the server over an HTTPS connection.""}]","[""Leverage Odoo's standard authentication system."",""Implement post-login redirection logic to route users to the correct dashboard (Admin/Manager vs. Driver Portal) based on their role."",""Ensure the login page is themed and styled according to the project's design, especially for the mobile-friendly driver portal."",""Verify server configuration enforces HTTPS.""]","[""All acceptance criteria validated and passing."",""Automated E2E tests for the happy path login scenario are created."",""The login page UI is verified to be responsive."",""Security checks (HTTPS, no user enumeration) have been manually verified.""]"
"US-057","Driver Portal & Mobile UX","Driver views their personal compensation details","Driver","As a Driver, I want to access a clear and simple view of my submitted expenses and earned incentives, so that I can track my personal earnings and reimbursements without needing to contact a manager.","Increases driver satisfaction and trust through financial transparency. Reduces administrative workload by providing a self-service channel for drivers.","High","5","[""US-053"",""US-033"",""US-034""]","[{""scenario"":""Driver views summary totals for unpaid compensation"",""given"":""The Driver is on the 'My Earnings' page"",""when"":""The page loads with expense and incentive data"",""then"":""The page displays a summary total for 'Total Approved Expenses (Unpaid)' and 'Total Incentives Earned (Unpaid)'.""},{""scenario"":""Driver views a rejected expense"",""given"":""One of their submitted expenses has been 'Rejected' by a manager"",""when"":""The Driver views the expense list on the 'My Earnings' page"",""then"":""The rejected expense is clearly marked with the 'Rejected' status and the reason for rejection is visible.""},{""scenario"":""Driver cannot view another driver's compensation data"",""given"":""Driver A is logged into the system"",""when"":""Driver A attempts to access the compensation data for Driver B"",""then"":""The system must enforce security rules and prevent access.""}]","[""Create a new secure API endpoint in Odoo to fetch compensation data (expenses, incentives) for the logged-in driver only."",""Build a new responsive UI component in OWL for the 'My Earnings' page in the Driver Portal."",""Implement logic to calculate summary totals based on the status of expenses and incentives."",""Ensure the backend query is strictly filtered by the current user's employee ID (`ir.rule`).""]","[""All acceptance criteria validated and passing."",""Security test case for data segregation is created and passed."",""Performance of the API endpoint is benchmarked and meets requirements."",""UI component is fully responsive and approved by the Product Owner.""]"
"US-056","Driver Portal & Mobile UX","Driver submits a leave application via the web portal","Driver","As a Driver, I want to submit a leave application through the mobile web portal, specifying the dates and type of leave, so that I can formally request time off and my availability is accurately reflected in the system for dispatch planning.","Streamlines the leave request process, reduces administrative overhead, and improves resource planning by providing clear visibility into driver availability.","Medium","5","[""US-046"",""US-011""]","[{""scenario"":""Successful submission of a valid leave application"",""given"":""I am a Driver on the 'New Leave Request' page"",""when"":""I select a 'Leave Type', a valid 'Start Date' and 'End Date', and click 'Submit'"",""then"":""The system creates a new leave application with a 'Pending' status and I see a success confirmation.""},{""scenario"":""Attempt to submit a leave request that overlaps with an existing request"",""given"":""I have an existing leave request from July 10th to July 15th"",""when"":""I try to submit a new leave request for July 12th to July 17th"",""then"":""The system prevents submission and displays an error: 'This request overlaps with an existing leave application'.""},{""scenario"":""Attempt to submit a leave request that conflicts with an assigned trip"",""given"":""I am assigned to a trip expected to be in transit during my requested leave dates"",""when"":""I try to submit the leave request"",""then"":""The system prevents submission and displays an error specifying the conflicting trip ID.""}]","[""Create new Odoo models `tms.leave.application` and `tms.leave.type`."",""Develop a custom web portal interface using OWL for the form and history list."",""Implement server-side validation for date ranges, overlaps with existing leave, and conflicts with assigned trips."",""Ensure access is restricted so a driver can only manage their own leave.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for all validation logic."",""User interface reviewed and approved for mobile-friendliness and usability."",""Security requirements validated (a driver cannot see another driver's leave).""]"
"US-055","Financial Management & Compliance","Driver submits a request for a cash advance","Driver","As a Driver, I want to submit a request for a cash advance through the mobile portal so that I can get the necessary funds for my trip expenses in a timely and trackable manner.","Streamlines the advance request process, improves financial accountability, reduces funding delays, and provides a clear audit trail.","Medium","3","[""US-046"",""US-011"",""US-060""]","[{""scenario"":""Successful submission of a new advance request"",""given"":""I am a Driver on the 'Advance Request' page"",""when"":""I enter a valid positive amount and a reason, then click 'Submit Request'"",""then"":""The system creates a new advance request record with a 'Pending' status and displays a success message.""},{""scenario"":""Attempt to submit a request with an invalid amount or missing reason"",""given"":""I am a Driver on the 'Advance Request' page"",""when"":""I enter a zero amount or leave the reason blank and try to submit"",""then"":""The system prevents submission and displays a clear validation error message.""},{""scenario"":""Driver views their history of advance requests"",""given"":""I have previously submitted one or more advance requests"",""when"":""I navigate to the 'Advance Request' section of the portal"",""then"":""I can see a list of all my past and current requests, displaying the date, amount, and status.""}]","[""Create a new Odoo model `tms.advance.request` with fields and state management."",""Develop a new mobile-first OWL component for the request form and history list."",""Implement server-side validation for amount and reason."",""Integrate with the notification system to alert the approver of a new request."",""Ensure a driver can only view and create their own requests.""]","[""All acceptance criteria are validated and passing."",""Unit tests are written for the new model and logic."",""The user interface is reviewed and approved for mobile usability."",""Security checks (access control) are validated.""]"
"US-054","Financial Management & Compliance","Driver includes odometer reading and fuel quantity for diesel expenses","Driver","As a Driver, I want to enter the vehicle's current odometer reading and the quantity of fuel purchased when I submit a 'Diesel' type expense, so that the company can accurately track fuel efficiency and I can get my expense claim processed correctly.","Enables accurate fuel efficiency (km/liter) tracking, which is critical for cost control, vehicle maintenance planning, and validating fuel purchases.","High","2","[""US-053"",""US-027""]","[{""scenario"":""UI: Conditional field visibility"",""given"":""A Driver is on the 'Submit Expense' form"",""when"":""The Driver selects an expense type other than 'Diesel' (e.g., 'Toll')"",""then"":""The 'Odometer Reading' and 'Fuel Quantity' fields are not visible.""},{""scenario"":""Error Condition: Odometer reading is lower than the previous reading"",""given"":""A Driver is submitting a 'Diesel' expense for a vehicle whose last recorded odometer was 50,000 km"",""when"":""The Driver enters an odometer reading of 49,999 and attempts to submit"",""then"":""The system prevents submission and displays an error: 'Odometer reading must be greater than the last recorded value of 50,000 km.'""},{""scenario"":""Edge Case: First diesel expense for a new vehicle"",""given"":""A Driver is submitting the very first 'Diesel' expense for a vehicle"",""when"":""The Driver enters a valid odometer reading and fuel quantity"",""then"":""The system accepts the submission without performing the 'greater than previous' validation.""}]","[""Add `odometer_reading` and `fuel_quantity` fields to the `tms.expense` model."",""Modify the OWL component for the expense form to conditionally show/hide these fields based on the selected expense type."",""Implement a server-side constraint (`@api.constrains`) to validate the odometer reading against the previous entry for the same vehicle."",""Ensure the query for the last odometer reading is optimized for performance.""]","[""All acceptance criteria validated and passing."",""Unit tests for the backend validation logic are implemented with >80% coverage."",""Integration testing of the form submission process is completed successfully."",""User interface has been reviewed and approved on both mobile and desktop viewports.""]"
"US-053","Financial Management & Compliance","Driver submits a trip-related expense with receipt","Driver","As a Driver, I want to submit a trip-related expense through my mobile web portal by selecting the expense type, entering the amount, and uploading a photo of the receipt, so that I can get reimbursed and the company can accurately track the total cost of the trip.","Enables accurate and timely tracking of trip expenditures, which is crucial for calculating trip profitability, managing driver reimbursements, and maintaining financial records.","High","5","[""US-046"",""US-047"",""US-032""]","[{""scenario"":""Successful submission of a standard expense (e.g., Toll)"",""given"":""I am a Driver viewing an 'In-Transit' trip assigned to me"",""when"":""I navigate to 'Add Expense', select 'Toll', enter '250.00', upload a valid receipt, and press 'Submit'"",""then"":""A new expense record is created with a 'Submitted' status, the receipt is stored, and a confirmation message is displayed.""},{""scenario"":""Attempt to upload an invalid file type or size for the receipt"",""given"":""I am on the 'Add Expense' form"",""when"":""I attempt to upload a '.docx' file or a 6MB image"",""then"":""The system rejects the file and displays a clear error message specifying allowed formats (JPG, PNG, PDF) and max size (5MB).""},{""scenario"":""Attempt to submit with missing required fields"",""given"":""I am on the 'Add Expense' form"",""when"":""I leave the 'Amount' field blank and press 'Submit'"",""then"":""The system prevents submission and displays an inline validation error: 'Amount is a required field'.""}]","[""Create the `tms.expense` Odoo model with fields for type, amount, status, trip_id, etc."",""Develop the OWL component for the mobile-friendly expense submission form."",""Implement an Odoo controller to handle the form submission, including file upload to Amazon S3."",""Implement server-side validation for all fields and file attachments."",""Ensure a driver can only submit expenses for trips they are assigned to.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for all validation logic."",""Integration testing completed successfully (form -> DB -> S3)."",""User interface reviewed and approved for mobile usability."",""Security requirements validated (e.g., cannot submit expense for another driver's trip).""]"
"US-052","Driver Portal & Mobile UX","Driver uploads a Proof of Delivery (POD)","Driver","As a Driver, I want to upload a Proof of Delivery (either a photo or a captured e-signature) and enter the recipient's name, so that I can formally confirm the delivery is complete, which updates the trip status to 'Delivered' and initiates the billing process.","Provides auditable proof of service completion, a prerequisite for customer invoicing. Provides real-time operational visibility by updating the trip status instantly.","High","5","[""US-046"",""US-047"",""US-049""]","[{""scenario"":""Driver successfully uploads a POD photo"",""given"":""a Driver is viewing a trip with status 'In-Transit'"",""when"":""the Driver selects 'Upload POD', chooses 'Photo', selects an image, enters the recipient's name, and submits"",""then"":""the system uploads the photo, records the recipient and timestamp, changes the trip status to 'Delivered', and displays a success message.""},{""scenario"":""Driver successfully captures an e-signature POD"",""given"":""a Driver is viewing a trip with status 'In-Transit'"",""when"":""the Driver selects 'Upload POD', chooses 'E-Signature', captures a signature, enters the recipient's name, and submits"",""then"":""the system converts the signature to an image, uploads it, updates the trip status to 'Delivered', and displays a success message.""},{""scenario"":""Submission without a recipient name or POD"",""given"":""a Driver is on the POD submission screen"",""when"":""the Driver attempts to submit without a recipient's name or without a photo/signature"",""then"":""the system prevents submission and displays a clear validation error message.""}]","[""Develop the OWL component for POD submission with options for photo vs. signature."",""Integrate a JavaScript library for e-signature capture."",""Implement an Odoo controller to handle the upload (photo or signature image) to Amazon S3."",""The controller must perform an atomic transaction to store the file, update the trip record with POD details, and change the trip status to 'Delivered'."",""The 'Upload POD' action should only be available for trips in 'In-Transit' status.""]","[""All acceptance criteria validated and passing."",""Unit and integration tests implemented with >80% coverage."",""E2E testing completed successfully in the staging environment."",""User interface reviewed and approved on both small and large mobile screens."",""Security review confirms secure file handling and access control.""]"
"US-051","Driver Portal & Mobile UX","Driver reports a trip halt","Driver","As a Driver, I want to report that my trip is halted and provide a mandatory reason, so that the dispatch team is immediately aware of the delay and I have a formal record of the interruption.","Provides real-time visibility of operational delays, enabling proactive customer communication and better logistics planning. Creates an auditable log of trip interruptions.","High","3","[""US-046"",""US-047"",""US-049"",""US-065""]","[{""scenario"":""Driver successfully reports a trip halt"",""given"":""I am a Driver viewing my active trip in 'In-Transit' status"",""when"":""I tap 'Report Halt', enter a reason, and tap 'Submit'"",""then"":""The system records a 'Halt' event against the trip and a high-priority alert is generated for the Dispatch Manager's dashboard.""},{""scenario"":""Driver attempts to report a halt without a reason"",""given"":""I am a Driver on the 'Report Halt' screen"",""when"":""I tap 'Submit' without entering a reason"",""then"":""The submission is blocked and a validation error is displayed.""}]","[""Create a 'Report Halt' button on the active trip view in the driver portal."",""Develop an OWL component for the halt submission form (modal or screen)."",""Implement a backend Odoo controller to receive the halt report."",""The controller will create a new `tms.trip.event` record and trigger a `tms.alert` for the manager dashboard."",""Enforce server-side validation for mandatory reason and correct trip status.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the backend controller."",""Integration testing completed to ensure the alert is generated correctly."",""User interface reviewed and approved for mobile usability.""]"
"US-050","Driver Portal & Mobile UX","Driver logs a trip event with an optional photo","Driver","As a Driver, I want to log specific events for my active trip, such as 'Accident' or 'Fueling', with an optional photo, so that I can maintain an accurate trip log and immediately inform the dispatch team of important updates or disruptions.","Provides real-time operational visibility into on-road events, enables faster response to critical incidents, and creates a detailed, auditable history for each trip.","High","5","[""US-047"",""US-049"",""US-065"",""US-077""]","[{""scenario"":""Driver logs a non-critical event without a photo"",""given"":""I am a Driver with an active trip in 'In-Transit' status"",""when"":""I select 'Log Event', choose 'Fueling', and submit"",""then"":""A 'Fueling' event is created for my trip, and the trip status remains 'In-Transit'.""},{""scenario"":""Driver logs a critical event with a photo, triggering a status change and alert"",""given"":""I am a Driver with an active trip in 'In-Transit' status"",""when"":""I select 'Log Event', choose 'Accident', attach a photo, and submit"",""then"":""An 'Accident' event is created, the trip's status automatically changes to 'On Hold', and a high-priority alert appears on the Manager dashboard.""}]","[""Create a `tms.trip.event` Odoo model."",""Develop an OWL component for the event logging form in the driver portal."",""Implement a backend controller to handle event submission, including optional photo upload to S3."",""In the `create` method of the event model, add logic to check if the event type is critical and, if so, update the related trip's status to 'on_hold'."",""Trigger a `tms.alert` on creation of a critical event.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the business logic with >80% coverage."",""Integration testing of the form submission, status change, and alert generation is completed successfully."",""User interface reviewed and approved for mobile usability.""]"
"US-049","Driver Portal & Mobile UX","Driver starts a trip from the mobile portal","Driver","As a Driver, I want to be able to mark a trip as 'In-Transit' when I begin my journey, so that the dispatch team is immediately aware that the delivery has started and the system can begin tracking my progress accurately.","Provides real-time operational visibility, enables accurate transit time tracking, triggers live GPS monitoring, and creates a verifiable audit trail for trip milestones.","High","2","[""US-027"",""US-046"",""US-047"",""US-050""]","[{""scenario"":""Driver successfully starts an assigned trip"",""given"":""I am a Driver viewing a trip with status 'Assigned'"",""when"":""I tap the 'Start Trip' button and confirm"",""then"":""The trip's status updates to 'In-Transit' and a 'Trip Start' event is logged.""},{""scenario"":""Action is unavailable for trips not in 'Assigned' status"",""given"":""I am a Driver viewing a trip with status 'In-Transit' or 'Delivered'"",""when"":""I view the trip details page"",""then"":""The 'Start Trip' button must not be visible or must be disabled.""},{""scenario"":""Backend authorization check"",""given"":""I am a logged-in Driver"",""when"":""I attempt to trigger the 'start trip' action for a trip that is not assigned to me"",""then"":""The system must reject the request with an 'Access Denied' error.""}]","[""Add a 'Start Trip' button to the OWL component for the trip detail view."",""The button should only be visible if the trip status is 'Assigned'."",""Create a backend controller endpoint for the start trip action."",""The controller must verify the user is the assigned driver and the trip is in the correct state."",""The controller will update the trip state to 'in_transit' and create a 'Trip Start' event log.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the backend logic."",""E2E test scenario for the happy path is automated and passing."",""Security requirements (server-side authorization) validated.""]"
"US-048","Driver Portal & Mobile UX","Driver views and downloads documents for their currently assigned vehicle","Driver","As a Driver, I want to easily view and download all required legal documents for the specific vehicle I am currently driving, so that I can quickly present them to authorities during on-road checks, ensuring compliance and avoiding delays.","Enhances on-road compliance, reduces risk of fines and delays, and mitigates issues from lost physical documents.","High","5","[""US-009"",""US-027"",""US-047""]","[{""scenario"":""Successful viewing and downloading of vehicle documents"",""given"":""a Driver is assigned to an active trip with a specific vehicle"",""when"":""the Driver navigates to the 'Vehicle Documents' section for their current trip"",""then"":""the system displays a list of all documents for that vehicle and provides options to view and download each.""},{""scenario"":""Display of expired vehicle documents"",""given"":""a Driver is viewing the document list and one document has expired"",""when"":""the document list is displayed"",""then"":""the expired document is clearly and visually distinguished from valid documents (e.g., using red text).""},{""scenario"":""Security check for unauthorized document access"",""given"":""a Driver is assigned to a trip with Vehicle 'A'"",""when"":""the Driver attempts to access the documents for Vehicle 'B'"",""then"":""the system must deny access and return an authorization error.""}]","[""Create a new OWL component for the 'Vehicle Documents' page in the driver portal."",""Develop a secure Odoo controller that serves a list of documents for the vehicle assigned to the driver's current trip."",""The controller must use Odoo record rules (`ir.rule`) to ensure a driver can only access data related to their active assignment."",""Implement logic to generate secure, time-limited, pre-signed S3 URLs for document access.""]","[""All acceptance criteria validated and passing."",""Unit tests covering the security rule and data retrieval logic are implemented."",""Automated E2E tests for the happy path and the negative security scenario are passing."",""Security review confirms that the access control mechanism is robust.""]"
"US-047","Driver Portal & Mobile UX","Driver views their list of current and past trips","Driver","As a Driver, I want to view a clear, mobile-friendly list of my current and past trips, so that I can easily see my immediate assignments and review my work history for reference.","Improves operational efficiency by providing drivers with immediate, clear access to their assignments, reducing communication overhead with dispatch.","High","3","[""US-046"",""US-027""]","[{""scenario"":""Default view shows current trips"",""given"":""a Driver is logged in and has trips with statuses 'Assigned' and 'In-Transit'"",""when"":""the driver navigates to the 'My Trips' page"",""then"":""a list of their 'Current' trips is displayed by default.""},{""scenario"":""Switching to view past trips"",""given"":""a Driver is on the 'My Trips' page"",""when"":""the driver selects the 'Past Trips' view"",""then"":""the list updates to display only their trips with statuses like 'Delivered', 'Completed', or 'Canceled'.""},{""scenario"":""Data is properly scoped to the logged-in driver"",""given"":""a Driver is logged in"",""when"":""they access the 'My Trips' page"",""then"":""the system ensures that only trips explicitly assigned to that driver are displayed, enforced by backend record rules.""}]","[""Develop a new OWL component for the 'My Trips' list view."",""Create a backend Odoo controller to serve trip data, strictly filtered for the currently logged-in user."",""Implement tabs or filters in the UI to switch between 'Current' and 'Past' trip views."",""Implement pagination or lazy loading to handle long trip histories efficiently."",""Define Odoo record rules (`ir.rule`) to enforce data segregation at the database level.""]","[""All acceptance criteria validated and passing."",""Unit tests for the backend controller achieve >80% coverage."",""E2E tests for the happy path and 'no trips' scenarios are passing."",""Performance of the list loading has been verified against requirements."",""Backend API endpoint is confirmed to be secure via record rules.""]"
"US-046","Driver Portal & Mobile UX","Driver logs into the mobile-friendly web portal","Driver","As a Driver, I want to securely log into a simple, mobile-friendly web portal using my credentials, so that I can access my assigned trips, submit expenses, and update my status while on the go.","Enables drivers to access the system, which is the primary entry point for all field-based data capture (trip status, expenses, PODs), enabling real-time operational visibility.","High","5","[""US-001"",""US-004"",""US-014"",""US-047""]","[{""scenario"":""Successful login with valid credentials"",""given"":""A user with the 'Driver' role exists and is on the login page"",""when"":""The driver enters their correct username and password and taps 'Log In'"",""then"":""The system validates the credentials and redirects the driver to their main portal dashboard.""},{""scenario"":""Login attempt with invalid password"",""given"":""A user is on the login page"",""when"":""The user enters a valid username but an incorrect password"",""then"":""The system displays a generic error message 'Invalid username or password' and the user remains on the login page.""},{""scenario"":""Login page responsiveness on mobile device"",""given"":""A user is accessing the login page"",""when"":""The page is viewed on a device with a screen width of 360px"",""then"":""All UI elements are clearly visible and usable without horizontal scrolling.""}]","[""Create a custom Odoo controller and OWL template for a dedicated driver login page."",""Ensure the login page is fully responsive and mobile-first."",""Integrate with Odoo's core authentication endpoint for credential validation."",""Implement post-login redirection logic that directs users with the 'Driver' role to the driver portal, and other users elsewhere.""]","[""All acceptance criteria are validated and passing."",""E2E automated tests for the login flow are created and passing."",""The feature has been successfully tested on representative iOS and Android devices/emulators."",""Security review confirms adherence to security NFRs.""]"
"US-045","Reporting, Dashboards & Alerts","Finance Officer generates a suite of financial reports for analysis","Finance Officer","As a Finance Officer, I want to access and generate a suite of financial reports (including an Aging Report, Customer Revenue, and Profitability reports) with filtering and export capabilities, so that I can effectively analyze the company's financial performance and manage receivables.","Provides critical financial insights for strategic decision-making, improves cash flow management, identifies profitable customers, and ensures financial accountability.","High","8","[""US-037"",""US-039"",""US-033"",""US-026"",""US-015"",""US-006""]","[{""scenario"":""Generate Outstanding Invoices (Aging) Report"",""given"":""There are multiple unpaid invoices with varying due dates"",""when"":""I generate the 'Outstanding Invoices Report'"",""then"":""The report lists all invoices with an outstanding balance, categorized into aging buckets: 0-30, 31-60, 61-90, and 90+ days overdue.""},{""scenario"":""Generate Trip Profitability Report"",""given"":""Multiple trips have been completed with associated revenue and 'Approved' expenses"",""when"":""I generate the 'Trip Profitability Report' with a date filter"",""then"":""The report lists individual trips, showing Total Revenue, Total Approved Expenses, and Net Profit for each.""},{""scenario"":""Export any generated report to PDF and Excel"",""given"":""I have successfully generated a financial report on the screen"",""when"":""I click the 'Export to PDF' or 'Export to Excel' button"",""then"":""The system downloads a file containing the exact data displayed in the on-screen report.""}]","[""Create a new Odoo menu for financial reports, accessible only to Finance/Admin roles."",""For each report, create a wizard for filter selection (e.g., date range)."",""Develop backend Python methods to perform the complex data aggregation queries for each report."",""Create QWeb templates for the PDF layout of each report."",""Implement controllers for Excel export functionality.""]","[""All acceptance criteria validated and passing."",""Unit tests for all calculation logic implemented with >80% coverage."",""Performance requirements verified with a large dataset."",""Security requirements validated by testing access with unauthorized roles.""]"
"US-044","Financial Management & Compliance","Finance Officer views the profitability of a single trip","Finance Officer","As a Finance Officer, I want to view the calculated profitability for any given trip, broken down into total revenue and the sum of all approved expenses, so that I can accurately assess the financial performance of individual jobs.","Provides granular financial insight into individual trips, enabling the business to identify profitable vs. unprofitable routes, customers, or services.","High","2","[""US-026"",""US-053"",""US-033"",""US-070""]","[{""scenario"":""Profitability calculation for a profitable trip"",""given"":""I am a Finance Officer viewing a trip with a revenue of ₹50,000 and two 'Approved' expenses totaling ₹15,000"",""when"":""I open the form view of this trip"",""then"":""A profitability section displays 'Total Revenue: ₹50,000', 'Total Approved Expenses: ₹15,000', and 'Net Profitability: ₹35,000'.""},{""scenario"":""Calculation correctly ignores non-approved expenses"",""given"":""A trip has one 'Approved' expense of ₹8,000, one 'Pending' expense of ₹1,500, and one 'Rejected' expense of ₹500"",""when"":""I view the profitability section"",""then"":""The 'Total Approved Expenses' is displayed as ₹8,000.""},{""scenario"":""Role-based access control for profitability data"",""given"":""I am logged in as a Driver"",""when"":""I open the view for my assigned trip"",""then"":""I must not be able to see the 'Total Revenue' or 'Net Profitability' fields.""}]","[""Add computed fields for `total_approved_expenses` and `profitability` to the `tms.trip` model."",""Implement the compute methods to perform the calculations, ensuring expenses are filtered by 'Approved' status."",""Add a new section to the `tms.trip` form view to display these fields."",""Use the `groups` attribute in the view's XML to restrict visibility of these fields to authorized roles.""]","[""All acceptance criteria validated and passing."",""Unit tests for the calculation logic have been written and achieve >80% coverage."",""A QA engineer has manually verified the UI and security rules for all relevant user roles.""]"
"US-043","Financial Management & Compliance","Finance Officer manually updates a card's balance and sets its low-balance threshold","Finance Officer","As a Finance Officer, I want to manually update the current balance and set a low-balance notification threshold for each FASTag and diesel card, so that I can proactively manage card funds and receive automated alerts.","Enables proactive management of prepaid card funds, preventing service disruptions that can delay trips and reducing financial risk.","High","1","[""US-042""]","[{""scenario"":""Successfully update a card's balance and threshold"",""given"":""I am a Finance Officer viewing a card's form"",""when"":""I enter a new 'Current Balance' and a 'Low-Balance Threshold' and save"",""then"":""The system saves the new values, and they are displayed on the record.""},{""scenario"":""Updating balance below the threshold triggers an alert"",""given"":""A card has a 'Low-Balance Threshold' of 1000"",""when"":""I update the 'Current Balance' to 999 and save"",""then"":""The system triggers the low-balance alert mechanism for this card.""}]","[""Add `current_balance` and `low_balance_threshold` fields to the `tms.card` model."",""Add these fields to the form view, making them editable for the Finance Officer role."",""Override the `write` method to compare the new balance with the threshold and trigger an alert if necessary."",""Add constraints to ensure balance and threshold are non-negative.""]","[""All acceptance criteria validated and passing."",""Unit tests covering validation logic and the alert trigger condition are implemented."",""Security rules restricting access to Finance Officers/Admins are implemented and verified.""]"
"US-042","Financial Management & Compliance","Finance Officer creates and manages records for FASTag and diesel cards","Finance Officer","As a Finance Officer, I want to create, view, and manage records for company-issued FASTag and diesel cards, so that I can maintain a centralized inventory of these financial instruments.","Centralizes management of critical financial instruments, improving data accuracy and providing visibility. Establishes the foundation for automated features like low-balance alerts.","High","2","[""US-006""]","[{""scenario"":""Create a new FASTag card record"",""given"":""I am a Finance Officer on the 'Card Management' screen"",""when"":""I click 'Create' and fill in the form with a unique Card Number, select 'FASTag' as the type, and set the status to 'Active'"",""then"":""The system saves the new card record, and it appears in the list of cards.""},{""scenario"":""Attempt to create a card with a duplicate number"",""given"":""A card with a specific number already exists"",""when"":""I attempt to create a new card with the same number"",""then"":""The system prevents saving and displays a validation error: 'A card with this number already exists.'""}]","[""Create a new Odoo model `tms.card` with fields for Card Number, Type, Provider, Assigned Vehicle, and Status."",""Implement a unique constraint on the 'Card Number' field."",""Create standard Odoo form and tree views for this model."",""Configure access control lists (ACLs) to restrict access to Finance Officer and Admin roles.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the unique constraint."",""Security requirements (role access, data masking) validated."",""Story deployed and verified in the staging environment.""]"
"US-041","Financial Management & Compliance","Finance Officer adds a non-trip-related expense to a vehicle","Finance Officer","As a Finance Officer, I want to create and record non-trip-related expenses (like maintenance, insurance, or fines) and associate them directly with a specific vehicle record, so that I can maintain a complete total cost of ownership for each vehicle.","Provides a complete financial picture of each vehicle's operational cost, enabling accurate calculation of vehicle-specific profitability and total cost of ownership (TCO).","High","5","[""US-006"",""US-004""]","[{""scenario"":""Successfully create a new vehicle expense"",""given"":""I am a Finance Officer viewing a specific vehicle's record"",""when"":""I click 'Add Expense', select 'Maintenance', enter an amount, date, and save"",""then"":""A new vehicle expense record is created and linked to the correct vehicle.""},{""scenario"":""Expense is reflected in vehicle's history and reports"",""given"":""A new 'Maintenance' expense has been created for a vehicle"",""when"":""I view the vehicle's record or generate the 'Vehicle Profitability Report'"",""then"":""The new expense is listed in the vehicle's history and included in the total expenses calculation in the report.""},{""scenario"":""Unauthorized user attempts to add a vehicle expense"",""given"":""I am logged in as a 'Driver'"",""when"":""I navigate to a vehicle's record"",""then"":""The 'Add Expense' button is not visible or accessible.""}]","[""Create a new Odoo model `tms.vehicle.expense` and `tms.vehicle.expense.type`."",""Add a one-to-many relationship from `tms.vehicle` to the new expense model."",""Modify the vehicle form view to include an 'Add Expense' button and a list of non-trip expenses."",""Implement access control to restrict creation to Finance Officer and Admin roles."",""Update the 'Vehicle Profitability Report' query to include these expenses.""]","[""All acceptance criteria validated and passing."",""Unit tests are written for the new models and business logic."",""Integration tests are created to verify the link to vehicles and the impact on reporting."",""Security access controls are tested and verified.""]"
"US-040","Financial Management & Compliance","Finance Officer views a customer's ledger","Finance Officer","As a Finance Officer, I want to access a detailed, chronological ledger for any given customer, so that I can efficiently track their complete history of invoices and payments and determine their current outstanding balance.","Improves accounts receivable management and customer service by providing a single source of truth for a customer's financial history.","High","5","[""US-037"",""US-039"",""US-015"",""US-070""]","[{""scenario"":""Ledger displays all relevant transactions and a running balance"",""given"":""the customer ledger view is open for a customer with multiple invoices and payments"",""when"":""the view loads"",""then"":""all invoices and payments are displayed as line items, sorted by date, with columns for Debit, Credit, and a correctly calculated Running Balance.""},{""scenario"":""Ledger displays accurate summary totals"",""given"":""the customer ledger view is open"",""when"":""the view is loaded"",""then"":""a summary section is visible displaying 'Total Invoiced', 'Total Paid', and 'Outstanding Balance'.""},{""scenario"":""Access to the ledger is restricted by role"",""given"":""a user with the 'Dispatch Manager' role is logged in"",""when"":""they navigate to a customer's record page"",""then"":""the 'Customer Ledger' smart button is not visible.""}]","[""Leverage Odoo's standard Partner Ledger report (`account.report_partner_ledger`)."",""Add a smart button to the `res.partner` form view that opens this report, pre-filtered for the current customer."",""Ensure the 'Finance Officer' group has the necessary access rights to view the report."",""Customize the report view if necessary to add a 'Running Balance' column, which may require a custom model or query.""]","[""All acceptance criteria validated and passing."",""Performance requirements verified against a large dataset."",""Security access rules are tested and confirmed to be working as expected.""]"
"US-039","Financial Management & Compliance","Finance Officer records a payment against an invoice","Finance Officer","As a Finance Officer, I want to record partial or full payments received from a customer against a specific invoice, so that I can accurately track accounts receivable and maintain an up-to-date customer ledger.","Enables accurate tracking of accounts receivable and cash flow, which is critical for financial health monitoring. Ensures customer balances are correct.","High","1","[""US-037"",""US-015""]","[{""scenario"":""Record a full payment against an invoice"",""given"":""I am viewing a 'Posted' invoice with an outstanding balance of ₹50,000"",""when"":""I click 'Register Payment' and confirm a payment of ₹50,000"",""then"":""The invoice's 'Amount Due' updates to ₹0 and its status changes to 'Paid'.""},{""scenario"":""Record a partial payment against an invoice"",""given"":""I am viewing a 'Posted' invoice with an outstanding balance of ₹50,000"",""when"":""I click 'Register Payment' and confirm a payment of ₹20,000"",""then"":""The invoice's 'Amount Due' updates to ₹30,000 and the status remains 'Posted'.""}]","[""Leverage the standard Odoo payment registration wizard (`account.payment.register`)."",""Ensure the 'Register Payment' button is present on the `account.move` form view."",""Verify that the 'Finance Officer' role has the necessary permissions to access and use this wizard.""]","[""All acceptance criteria validated and passing."",""Role-based access controls for this feature are verified."",""The feature is successfully tested end-to-end in a staging environment.""]"
"US-038","Financial Management & Compliance","Finance Officer manually intervenes on a failed e-invoice","Finance Officer","As a Finance Officer, I want to be immediately alerted to any e-invoice generation failures, view the specific error reason, and have the ability to retry the submission or mark it for manual handling, so that I can ensure all invoices are compliant and sent without delay.","Ensures business continuity and GST compliance by providing a robust fallback mechanism for the critical e-invoicing process, mitigating risks of delayed payments.","High","5","[""US-037"",""US-087"",""US-060""]","[{""scenario"":""System flags invoice and alerts user after automated retries fail"",""given"":""An invoice's e-invoicing submission has failed repeatedly"",""when"":""The final automated retry attempt fails"",""then"":""The invoice status changes to 'E-Invoice Failed', a high-priority notification is sent to the Finance Officer, and the last error message is displayed on the invoice form.""},{""scenario"":""Finance Officer successfully retries a failed submission"",""given"":""An invoice is in the 'E-Invoice Failed' state"",""when"":""The Finance Officer clicks the 'Retry E-Invoicing' button and the API call succeeds"",""then"":""The invoice status updates to 'Invoiced' and the IRN is populated.""},{""scenario"":""Finance Officer manually processes an invoice"",""given"":""An invoice is in the 'E-Invoice Failed' state and the IRN was generated externally"",""when"":""The Finance Officer clicks 'Mark as Manually Processed' and enters the IRN"",""then"":""The invoice status updates to 'Invoiced' and the manually entered IRN is saved.""}]","[""Add a new state 'e_invoice_failed' to the `account.move` model."",""Add buttons 'Retry E-Invoicing' and 'Mark as Manually Processed' to the invoice form, visible only in the failed state."",""Create a wizard to capture the manual IRN."",""Implement the Python methods for the retry and manual override actions."",""Ensure all manual interventions are logged to the invoice's chatter for audit purposes.""]","[""All acceptance criteria validated and passing."",""Unit and integration tests are written and achieve >80% coverage."",""Security checks confirm that actions are restricted to authorized roles."",""User documentation is updated to explain the failure handling process.""]"
"US-037","Financial Management & Compliance","Finance Officer generates a GST-compliant e-invoice for a completed trip","Finance Officer","As a Finance Officer, I want to generate a GST-compliant e-invoice for a completed trip so that I can bill the customer accurately and comply with government tax regulations.","Ensures compliance with Indian GST e-invoicing laws, automates billing, reduces errors, and accelerates the payment cycle.","High","13","[""US-015"",""US-026"",""US-052""]","[{""scenario"":""Successful e-invoice generation for a completed trip"",""given"":""A trip is in the 'Completed' state"",""when"":""I click 'Generate Invoice' and then 'Generate E-Invoice'"",""then"":""The system communicates with the GSP, receives a valid IRN and QR code, updates the invoice and trip status to 'Invoiced', and makes the compliant PDF available.""},{""scenario"":""Attempting to generate an invoice for a non-completed trip"",""given"":""A trip is in 'In-Transit' state"",""when"":""I navigate to that trip record"",""then"":""The 'Generate Invoice' button is disabled or not visible.""},{""scenario"":""Asynchronous handling of GSP API timeouts"",""given"":""I have submitted an invoice for generation"",""when"":""The synchronous API call to the GSP times out"",""then"":""The system provides immediate feedback that the request is 'Processing' and adds the task to a background queue for automatic retries.""}]","[""Implement the full GSP integration as described in the Work Catalog (WI-5022, WI-5023, WI-5024)."",""Develop the GSP API client for handling requests and responses."",""Implement the sync/async fallback mechanism using RabbitMQ."",""Modify the `account.move` model to store e-invoice data and manage states."",""Customize the QWeb PDF report to include the IRN and QR code.""]","[""All acceptance criteria validated and passing in the GSP sandbox environment."",""Integration tests with the GSP sandbox API are passing."",""The generated PDF invoice has been verified for compliance."",""Security review of the API key handling has been completed.""]"
"US-036","Reporting, Dashboards & Alerts","Dispatch Manager generates and exports operational reports","Dispatch Manager","As a Dispatch Manager, I want to access, filter, and export key operational reports, so that I can analyze the performance of trips, vehicles, and drivers to improve our logistics.","Enables data-driven decision-making to improve operational efficiency, reduce costs, and enhance resource management.","High","8","[""US-026"",""US-006"",""US-011"",""US-051""]","[{""scenario"":""Generating a Trip Report with filters"",""given"":""I am viewing the 'Trip Report'"",""when"":""I apply filters for a specific date range, customer, and vehicle, and click 'Apply'"",""then"":""The report data refreshes to show only the records that match all the selected filter criteria.""},{""scenario"":""Exporting a filtered report to Excel and PDF"",""given"":""I have generated a filtered report on the screen"",""when"":""I click the 'Export to Excel' or 'Export to PDF' button"",""then"":""The system downloads a file that contains the exact data displayed in the on-screen report.""}]","[""Create a new Odoo menu for operational reports."",""For each report (Trip, Vehicle Utilization, etc.), create a wizard for filter selection."",""Develop backend Python methods to perform data aggregation queries for each report."",""Implement export to Excel and PDF functionality for the queried data."",""Restrict access to Dispatch Manager and Admin roles.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for all data aggregation logic."",""Performance testing confirms that report generation meets the specified NFRs."",""User interface reviewed and approved by the Product Owner.""]"
"US-035","Financial Management & Compliance","Dispatch Manager views the profitability of a single trip","Dispatch Manager","As a Dispatch Manager, I want to view the automatically calculated revenue, total approved expenses, and net profitability directly on the trip's detail page, so that I can immediately assess the financial performance of each trip.","Provides immediate visibility into the financial health of individual trips, enabling data-driven decisions to improve profitability and control costs.","High","2","[""US-026"",""US-053"",""US-033"",""US-070""]","[{""scenario"":""Profitability calculation for a profitable trip"",""given"":""A Dispatch Manager is viewing a trip with 'Total Revenue' of ₹50,000 and 'Approved' expenses totaling ₹12,000"",""when"":""The trip form is displayed"",""then"":""A profitability section displays 'Profitability' as ₹38,000.""},{""scenario"":""Role-based access control for profitability data"",""given"":""A user with the 'Driver' role is logged in"",""when"":""They view their assigned trip"",""then"":""The entire profitability section is not visible.""},{""scenario"":""Profitability calculation updates after an expense is approved"",""given"":""A trip has a profitability of ₹15,000 and a pending expense of ₹1,000"",""when"":""The manager approves the pending expense"",""then"":""The 'Profitability' value is recalculated and displayed as ₹14,000 upon view refresh.""}]","[""Add computed fields for `total_approved_expenses` and `profitability` to the `tms.trip` model."",""Implement the compute methods, ensuring expenses are filtered by 'Approved' status."",""Add a new section to the `tms.trip` form view to display these fields."",""Use the `groups` attribute in the view XML to restrict visibility.""]","[""All acceptance criteria validated and passing."",""Unit tests for the computation logic implemented."",""Security requirements validated by testing with different user roles."",""Code reviewed and approved.""]"
"US-034","Financial Management & Compliance","Dispatch Manager rejects a submitted expense with a mandatory reason","Dispatch Manager, Finance Officer","As a Dispatch Manager, I want to reject a submitted expense claim and be required to provide a reason for the rejection, so that I can maintain financial control and provide clear feedback to the driver.","Ensures financial accuracy, enforces company expense policies, creates an audit trail, and provides a feedback loop to drivers to reduce future errors.","High","2","[""US-053"",""US-032"",""US-060"",""US-025""]","[{""scenario"":""Rejecting an expense with a valid reason"",""given"":""I am a Dispatch Manager viewing a 'Submitted' expense"",""when"":""I click 'Reject', enter a reason, and confirm"",""then"":""The expense status updates to 'Rejected', the reason is saved, and a notification is sent to the driver.""},{""scenario"":""Attempting to reject an expense without a reason"",""given"":""I am a Dispatch Manager in the rejection dialog"",""when"":""I attempt to confirm without entering a reason"",""then"":""The system displays a validation error 'A reason for rejection is required.'""}]","[""Create an Odoo wizard (TransientModel) to capture the rejection reason."",""Add a 'Reject' button to the expense form that opens this wizard."",""Implement the Python method for the wizard to update the expense state to 'rejected', save the reason, and trigger a notification."",""Ensure the wizard's reason field is mandatory.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the state change logic."",""Integration testing completed to ensure notifications and financial calculations are correct."",""Security requirements (role-based access) validated.""]"
"US-033","Financial Management & Compliance","Dispatch Manager approves a submitted expense","Dispatch Manager","As a Dispatch Manager, I want to review and approve a submitted expense with a single action, so that I can validate its legitimacy and move it forward for reimbursement.","Ensures financial accuracy by validating trip-related costs before they impact profitability calculations and are sent for payment. A key financial control point.","High","2","[""US-053"",""US-032"",""US-070""]","[{""scenario"":""Successful approval of a submitted expense"",""given"":""I am a Dispatch Manager viewing an expense with status 'Submitted'"",""when"":""I click the 'Approve' button"",""then"":""The expense's status changes to 'Approved' and an audit log entry is created.""},{""scenario"":""Financial Impact: Trip profitability is updated correctly"",""given"":""A trip has a profitability of $800 and a pending expense of $50"",""when"":""A Dispatch Manager approves the $50 expense"",""then"":""The trip's profitability is recalculated to $750.""},{""scenario"":""State Validation: Attempting to approve an already approved expense"",""given"":""I am a Dispatch Manager viewing an 'Approved' expense"",""when"":""I view the expense details"",""then"":""The 'Approve' button is not visible or is disabled.""}]","[""Add an 'Approve' button to the `tms.expense` form view."",""Create a Python method on the model to change the state from 'submitted' to 'approved'."",""Ensure this action is restricted to manager roles."",""Trigger the recalculation of the related trip's profitability computed field.""]","[""All acceptance criteria validated and passing."",""Unit tests for the approval logic implemented."",""Integration test verifying the update to trip profitability is implemented and passing."",""Security requirements (RBAC) validated via automated or manual testing.""]"
"US-032","Financial Management & Compliance","Dispatch Manager views a queue of submitted expenses","Dispatch Manager","As a Dispatch Manager, I want to access a dedicated view that lists all submitted trip expenses awaiting my approval so that I can efficiently review and process them.","Streamlines the expense approval workflow, provides a control point for operational spending, and ensures timely reimbursement to drivers.","High","1","[""US-053"",""US-026""]","[{""scenario"":""Viewing the list of pending expenses"",""given"":""I am a 'Dispatch Manager' and multiple expenses have been 'Submitted'"",""when"":""I navigate to the 'Expense Approvals' menu item"",""then"":""I see a list containing only the expenses with the 'Submitted' status.""},{""scenario"":""Unauthorized access attempt"",""given"":""I am logged in as a 'Driver'"",""when"":""I attempt to access the 'Expense Approvals' menu item"",""then"":""The system must prevent access and display an 'Access Denied' error.""}]","[""Create a new Odoo menu item 'Expense Approvals'."",""Create an `ir.actions.act_window` for the `tms.expense` model."",""Set the `domain` on the action to `[('state', '=', 'submitted')]`."",""Link the action to the menu item and restrict the menu's visibility to manager groups.""]","[""All acceptance criteria validated and passing."",""Automated integration tests are created and passing."",""The new menu item and view are visible only to authorized user roles.""]"
"US-031","Trip Lifecycle Management","Dispatch Manager cancels a trip","Dispatch Manager","As a Dispatch Manager, I want to cancel a trip at any stage before delivery and provide a mandatory reason, so that the system accurately reflects the trip's status and the assigned resources are released.","Ensures data integrity, improves resource utilization by releasing vehicles and drivers, and provides data for analysis by capturing cancellation reasons.","High","2","[""US-026"",""US-027"",""US-060"",""US-070""]","[{""scenario"":""Cancel an assigned trip with a valid reason"",""given"":""A trip has a status of 'Assigned'"",""when"":""The user clicks 'Cancel Trip', enters a reason, and confirms"",""then"":""The trip's status updates to 'Canceled', the reason is logged, a notification is sent to the driver, and resources are marked as available.""},{""scenario"":""Attempt to cancel a trip without a reason"",""given"":""The user has initiated the 'Cancel Trip' action"",""when"":""The user attempts to confirm without entering a reason"",""then"":""The cancellation is prevented and a validation error is displayed.""},{""scenario"":""Attempt to cancel a delivered trip"",""given"":""A trip has a status of 'Delivered'"",""when"":""The user views the trip"",""then"":""The 'Cancel Trip' button is not visible or is disabled.""}]","[""Add a 'Cancel Trip' button to the trip form view, conditionally visible."",""Create an Odoo wizard to capture the mandatory cancellation reason."",""Implement the server-side method to change the trip state, log the reason to the chatter, trigger a notification, and update resource status."",""Ensure the action is restricted to authorized roles.""]","[""All acceptance criteria validated and passing."",""Unit tests covering state transitions and business logic are implemented."",""The cancellation event is correctly logged in the system's audit trail."",""Integration tests for the end-to-end flow are passing.""]"
"US-030","Trip Lifecycle Management","Dispatch Manager resolves an 'On Hold' trip and resumes its journey","Dispatch Manager","As a Dispatch Manager, I want to be able to change a trip's status from 'On Hold' back to 'In-Transit' after providing a mandatory resolution comment, so that I can officially resume a delayed trip and maintain a clear audit trail of the resolution.","Enables operational continuity by allowing paused trips to resume, minimizing delivery delays. Enhances accountability by creating an auditable log of disruption resolutions.","High","2","[""US-077"",""US-026""]","[{""scenario"":""Successfully resuming an 'On Hold' trip"",""given"":""I am a 'Dispatch Manager' viewing a trip in 'On Hold' status"",""when"":""I click 'Resume Trip', enter a resolution comment, and confirm"",""then"":""The trip's status changes to 'In-Transit' and the comment is logged in the trip's history.""},{""scenario"":""Attempting to resume a trip without a resolution comment"",""given"":""I am in the 'Resume Trip' dialog for an 'On Hold' trip"",""when"":""I attempt to confirm without entering a comment"",""then"":""The system displays a validation error and the trip status remains 'On Hold'.""},{""scenario"":""An unauthorized user attempts to resume a trip"",""given"":""I am logged in as a 'Driver'"",""when"":""I view a trip in 'On Hold' status"",""then"":""The 'Resume Trip' button is not visible or is disabled.""}]","[""Add a 'Resume Trip' button to the trip form view, visible only for 'On Hold' status and for manager roles."",""Create an Odoo wizard to capture the mandatory resolution comment."",""Implement the server-side method to change the trip state back to 'in_transit' and post the comment to the chatter."",""Ensure access to this action is restricted to Dispatch Managers and Admins.""]","[""All acceptance criteria validated and passing."",""Unit tests covering the server action logic have been written and are passing."",""Automated or manual integration tests confirm the correct UI behavior and role-based permissions.""]"
"US-029","GPS & Real-Time Monitoring","Dispatch Manager views the real-time location of vehicles on a map","Dispatch Manager","As a Dispatch Manager, I want to see a real-time map displaying the current location of all my vehicles that are on 'In-Transit' trips so that I can monitor their progress and proactively identify potential delays.","Provides real-time operational awareness, enabling proactive management of logistics, improved on-time delivery rates, and enhanced customer service.","High","8","[""US-027"",""US-049""]","[{""scenario"":""Map displays all 'In-Transit' vehicles upon loading"",""given"":""There are multiple trips with the status 'In-Transit' with recent GPS data"",""when"":""I navigate to the 'Live Map' view"",""then"":""The map loads and displays a distinct marker for each 'In-Transit' vehicle at its last known location.""},{""scenario"":""Vehicle marker position updates in near real-time"",""given"":""I am viewing the 'Live Map' and an 'In-Transit' vehicle is moving"",""when"":""The system receives a new GPS location update for that vehicle"",""then"":""The corresponding marker on the map moves to the new location without a full page reload, meeting the 60-second latency requirement.""},{""scenario"":""Handling of stale GPS data"",""given"":""A vehicle is 'In-Transit', but the system has not received a GPS update for it in over 15 minutes"",""when"":""I view the 'Live Map'"",""then"":""The marker for that vehicle is visually distinct (e.g., grayed out) and its info-window shows the last update timestamp.""}]","[""Implement the full GPS data ingestion pipeline (FastAPI microservice, RabbitMQ, Odoo consumer) as per the Work Catalog."",""Create a custom Odoo Map view for the `tms.trip` model."",""Develop an Odoo controller to serve location data for active trips."",""Build a custom OWL component to render the map, markers, and handle real-time updates via polling the controller.""]","[""All acceptance criteria validated and passing."",""Integration testing of the full data pipeline is completed successfully."",""E2E tests for map loading, marker display, and updates are passing."",""Performance requirements for data latency and page load are verified in staging.""]"
"US-028","Trip Lifecycle Management","Dispatch Manager selects a pre-defined route during trip creation","Dispatch Manager","As a Dispatch Manager, I want to select a pre-defined route from a list when creating a new trip, so that the source, destination, and standard distance are automatically populated, saving time and reducing errors.","Increases operational efficiency and data accuracy by using standardized route information.","High","1","[""US-019"",""US-026""]","[{""scenario"":""Select a pre-defined route and auto-populate trip details"",""given"":""I am on the 'Create New Trip' form and a route 'Mumbai to Delhi' exists"",""when"":""I select the 'Mumbai to Delhi' route from the 'Route' field"",""then"":""The 'Source', 'Destination', and 'Standard Distance' fields are automatically populated.""},{""scenario"":""Override auto-populated values"",""given"":""I have selected a route and the fields are auto-populated"",""when"":""I manually edit the 'Destination' field"",""then"":""The 'Destination' field retains my new value.""}]","[""Add a Many2one field for `tms.route` to the `tms.trip` model and form view."",""Implement an `@api.onchange` method in the `tms.trip` model."",""The onchange method will trigger when the route field is changed and will update the source, destination, and distance fields on the form.""]","[""All acceptance criteria validated and passing."",""Unit tests for the onchange logic implemented and passing."",""Code reviewed and approved.""]"
"US-027","Trip Lifecycle Management","Dispatch Manager assigns an available vehicle and driver to a trip","Dispatch Manager","As a Dispatch Manager, I want to select an available vehicle and driver from filtered lists and assign them to a 'Planned' trip so that I can operationalize the trip and move it to the 'Assigned' status.","Enables the transition of a trip from planning to execution, ensures efficient and compliant resource allocation, and prevents operational errors.","High","5","[""US-026"",""US-006"",""US-012""]","[{""scenario"":""Successful assignment of a valid vehicle and driver"",""given"":""I am viewing a trip in 'Planned' status"",""when"":""I select an 'Active' vehicle with sufficient capacity and an 'Active' driver with a valid license, and save"",""then"":""The trip's status changes from 'Planned' to 'Assigned'.""},{""scenario"":""Vehicle and driver selection lists are correctly filtered"",""given"":""I am viewing a trip in 'Planned' status"",""when"":""I open the vehicle or driver selection dropdown"",""then"":""The lists MUST NOT include any resources that are 'Inactive' or currently on another 'In-Transit' trip.""},{""scenario"":""Attempt to assign a vehicle with insufficient capacity"",""given"":""A trip has a material weight of 25 Tons"",""when"":""I attempt to assign a vehicle with a capacity of only 20 Tons"",""then"":""The system prevents the assignment and displays a clear error message.""}]","[""Add Many2one fields for `tms.vehicle` and `hr.employee` to the `tms.trip` model and form view."",""Implement dynamic domain filters on these fields in the XML view to exclude unavailable resources."",""Override the `write` method of the `tms.trip` model to automatically change the state to 'Assigned' when both vehicle and driver are added."",""Implement the server-side validation constraints for capacity and license expiry.""]","[""All acceptance criteria validated and passing."",""Unit tests for domain filtering and validation logic are implemented."",""Role-based security is confirmed (only Dispatch Manager/Admin can perform the action).""]"
"US-026","Trip Lifecycle Management","Dispatch Manager creates a new trip","Dispatch Manager","As a Dispatch Manager, I want to create a new trip record by selecting a customer, defining the route, and specifying the material details and rate, so that I can formally initiate a transport job.","Initiates the primary revenue-generating workflow of the system, enabling formal planning, resource allocation, tracking, and invoicing.","High","5","[""US-015"",""US-019"",""US-020""]","[{""scenario"":""Successful trip creation with valid manual inputs"",""given"":""I am on the 'New Trip' form"",""when"":""I fill in all mandatory fields (Customer, Source, Destination, etc.) and click 'Save'"",""then"":""A new trip record is created with a unique ID and its initial status is 'Planned'.""},{""scenario"":""Attempt to save a trip with missing mandatory fields"",""given"":""I am on the 'New Trip' form"",""when"":""I attempt to save without selecting a Customer"",""then"":""The system prevents saving and displays a validation message.""},{""scenario"":""Dynamic revenue calculation based on rate type"",""given"":""I am on the 'New Trip' form with a distance and weight entered"",""when"":""I select the rate type 'per km' and enter a rate"",""then"":""A read-only 'Estimated Revenue' field updates automatically.""}]","[""Create the `tms.trip` Odoo model with all necessary fields and relationships."",""Develop the form, tree, and kanban views for the trip model."",""Implement server-side validation rules for mandatory fields and date logic."",""Implement client-side on-change logic for auto-population from routes and dynamic revenue calculation.""]","[""All acceptance criteria validated and passing."",""Unit tests for all new business logic and validations have been written and are passing."",""Automated E2E tests for the happy path and key error conditions are passing."",""All UI elements are mobile-responsive.""]"
"US-025","System Configuration & Admin","Admin views the immutable audit trail for critical data changes","Admin","As an Admin, I want to access and filter a detailed, immutable audit trail of all changes made to critical data records, so that I can ensure system security, enforce accountability, and perform forensic analysis.","Provides a tamper-proof record of all critical system activities, enhancing security, enabling forensic analysis, and supporting regulatory compliance audits.","High","8","[""US-001"",""US-004"",""US-026"",""US-037"",""US-039""]","[{""scenario"":""Audit log entry for an 'Update' action shows old and new values"",""given"":""A Finance Officer has changed an Invoice status from 'Draft' to 'Posted'"",""when"":""I view the details of the corresponding log entry"",""then"":""I should see the field changed ('status'), the 'Old Value' ('Draft'), and the 'New Value' ('Posted').""},{""scenario"":""Admin attempts to modify or delete an audit log entry"",""given"":""I am an Admin viewing the audit trail"",""when"":""I attempt to edit or delete any log entry"",""then"":""The system must prevent the action, and no 'Edit' or 'Delete' options should be available.""},{""scenario"":""Audit trail logs changes to user permissions"",""given"":""I am an Admin and I have granted the 'Finance Officer' role to a new user"",""when"":""I view the audit trail"",""then"":""I see a log entry detailing the permission change for that user.""}]","[""Leverage Odoo's built-in `mail.thread` (chatter) functionality for tracking field changes on designated models (Trip, Invoice, Payment, User)."",""Ensure critical fields on these models are marked with `tracking=True`."",""Create a dedicated, read-only menu and view for Admins to see all `mail.message` records related to tracking, potentially filtered for clarity."",""Verify that Odoo's default behavior prevents editing or deleting these log messages.""]","[""All acceptance criteria validated and passing."",""Integration testing completed for all audited models."",""Security testing confirms the immutability of the logs."",""Performance testing confirms the audit view meets NFRs.""]"
"US-024","System Configuration & Admin","Admin manages rules and recipients for system-level alerts","Admin","As an Admin, I want a dedicated interface to manage the rules, thresholds, and recipients for system-level alerts, so that I can ensure critical operational issues are promptly communicated to the correct personnel.","Improves system monitoring and operational responsiveness by ensuring the right people are notified of critical issues immediately.","High","8","[""US-001"",""US-004"",""US-060"",""US-088""]","[{""scenario"":""Admin successfully configures and saves an alert rule"",""given"":""I am on the 'System Alert Configuration' page"",""when"":""I select 'GSP API Failure', set the recipient to the 'Finance Officer' group, select 'Email', and save"",""then"":""The system saves the configuration.""},{""scenario"":""Configured alert is triggered and sent correctly"",""given"":""The 'GSP API Failure' alert is configured to notify the 'Finance Officer' group via Email"",""when"":""The system detects a GSP API failure event"",""then"":""An email notification is sent to all active users in the 'Finance Officer' group.""}]","[""Create a new Odoo model to store alert configurations."",""Develop a settings view for Admins to manage these configurations."",""Integrate the Odoo application with Alertmanager: Odoo will be the source of truth for alert rules and recipients."",""A script or service will be needed to periodically sync the configuration from the Odoo DB to the Alertmanager configuration file and reload Alertmanager.""]","[""All acceptance criteria validated and passing."",""Integration testing completed to verify notifications are sent based on configuration."",""Security requirements validated (access restricted to Admins)."",""Technical documentation for the alert configuration and sync mechanism is created.""]"
"US-023","System Configuration & Admin","Admin configures maximum allowable expense amounts per category","Admin","As an Admin, I want to configure maximum allowable expense amounts for each expense category so that I can enforce company spending policies and flag high-value expenses for special review.","Enables automated enforcement of company expense policies, improves cost control, and increases operational efficiency.","Medium","2","[""US-004""]","[{""scenario"":""Admin successfully sets a new expense threshold"",""given"":""I am an Admin on the 'Expense Threshold Configuration' page"",""when"":""I enter '500' for the 'Food' category and click 'Save'"",""then"":""the system saves the value '500.00' for the 'Food' category.""},{""scenario"":""Non-Admin user attempts to access the configuration page"",""given"":""I am logged in as a 'Dispatch Manager'"",""when"":""I attempt to navigate to the 'Expense Threshold Configuration' page"",""then"":""the system must deny access.""}]","[""Add a new `max_amount` field to the existing expense category master data model."",""Create a new settings view (or extend an existing one) for Admins to edit this field for all categories."",""Implement field validation to ensure the amount is a non-negative number."",""Ensure access to this view is restricted to the Admin group.""]","[""All acceptance criteria validated and passing."",""Security access rules are implemented and tested."",""User interface is responsive and matches the requirements.""]"
"US-022","System Configuration & Admin","Admin configures system-wide settings","Admin","As an Admin, I want a centralized settings page to configure system-wide parameters, such as session timeout and alert intervals, so that I can customize the application's behavior without requiring code changes.","Enables the business to adapt the system to changing policies without developer intervention, enhancing security and operational efficiency.","High","5","[""US-004"",""US-070""]","[{""scenario"":""Admin successfully edits and saves a setting"",""given"":""I am on the 'Transport Management' settings page"",""when"":""I change 'Session Timeout (minutes)' to '45' and click 'Save'"",""then"":""the setting is saved, and when I refresh, the field displays '45'.""},{""scenario"":""System rejects out-of-range values"",""given"":""I am on the settings page"",""when"":""I enter '-5' into the 'Expense Submission Deadline (days)' field and save"",""then"":""the save is prevented and a validation error is displayed.""},{""scenario"":""Non-Admin user is denied access"",""given"":""I am logged in as a 'Dispatch Manager'"",""when"":""I attempt to navigate to the TMS settings page"",""then"":""I receive an 'Access Denied' error.""}]","[""Implement a `res.config.settings` model for the TMS module."",""Define fields for each configurable parameter (e.g., `session_timeout_minutes`)."",""Create an XML view to render these fields in the Odoo Settings interface."",""Implement validation logic for the fields."",""Ensure access to this model is restricted to the Admin group.""]","[""All acceptance criteria validated and passing."",""Integration testing completed to verify other modules can read the settings."",""Security requirements validated."",""Help text and labels are implemented for all settings.""]"
"US-021","GPS & Real-Time Monitoring","Admin defines a geofence for a key location","Admin","As an Admin, I want to create, view, and manage named geographical boundaries (geofences) on a map for key locations, so that the system can automatically detect and trigger alerts when a vehicle enters or exits these areas.","Enables automated, real-time monitoring of vehicle movements at critical locations, improving operational efficiency, security, and providing data for performance analysis.","High","8","[""US-029"",""US-001""]","[{""scenario"":""Admin successfully creates a new polygonal geofence"",""given"":""The Admin is on the 'Geofence Management' screen"",""when"":""The Admin enters a unique name, draws a closed polygon on the map, and clicks 'Save'"",""then"":""The system saves the geofence with its name and coordinates, and it appears in the list.""},{""scenario"":""Attempt to save a geofence with a duplicate name"",""given"":""A geofence named 'Main Depot' already exists"",""when"":""The Admin enters 'Main Depot' as the name for a new geofence"",""then"":""The system prevents the save and displays a validation error.""},{""scenario"":""Non-Admin user attempts to access the page"",""given"":""A 'Dispatch Manager' is logged in"",""when"":""The user attempts to navigate to the geofence management URL"",""then"":""The system denies access.""}]","[""Enable PostGIS extension in the PostgreSQL database."",""Create a new Odoo model `tms.geofence` with a geospatial field type."",""Develop a custom OWL component integrating a JavaScript map library (e.g., Leaflet.js) with drawing tools."",""Implement a controller to save the geospatial data from the frontend component."",""Restrict access to the model and view to the Admin group.""]","[""All acceptance criteria validated and passing."",""E2E tests for the geofence creation and editing flow are passing."",""Access control rules are verified to restrict access to Admins."",""Feature is documented in the Administrator Guide.""]"
"US-020","Master Data Management","Admin manages the list of material types and their handling instructions","Admin","As an Admin, I want to create, view, edit, and deactivate material types and their associated special handling instructions, so that I can ensure data consistency and provide critical handling information to staff.","Ensures data integrity for reporting, enhances operational safety, and improves efficiency in trip creation.","High","1","[""US-001""]","[{""scenario"":""Admin creates a new material type successfully"",""given"":""The Admin is on the 'Material Types' list view"",""when"":""The user enters a unique name and optional handling instructions and saves"",""then"":""A new, active material type record is created.""},{""scenario"":""System prevents creation of a material type with a duplicate name"",""given"":""A material type with the name 'Cement Bags' already exists"",""when"":""The Admin attempts to create a new material type with the name 'Cement Bags'"",""then"":""The system prevents saving and displays a validation error.""},{""scenario"":""Deactivated material types are not available for selection on new trips"",""given"":""A material type has been archived"",""when"":""A Dispatch Manager creates a new trip and accesses the 'Material' selection field"",""then"":""The archived material type does not appear in the list of options.""}]","[""Create a new Odoo model `tms.material` with fields for name, handling instructions, and active status."",""Implement a unique constraint on the name field."",""Create standard Odoo form, tree, and search views."",""Configure access control lists to restrict write access to Admins.""]","[""All acceptance criteria validated and passing."",""Unit tests covering model constraints are implemented."",""Integration testing with the Trip model's selection field is completed."",""Access control rules are implemented and verified.""]"
"US-019","Master Data Management","Admin creates and manages pre-defined transportation routes","Admin","As an Admin, I want to create and manage a master list of pre-defined transportation routes, so that Dispatch Managers can quickly select a standard route during trip creation, ensuring consistency and reducing errors.","Improves operational efficiency by reducing manual data entry. Enhances data accuracy by standardizing common routes.","High","2","[""US-001""]","[{""scenario"":""Admin successfully creates a new pre-defined route"",""given"":""The user is an 'Admin' on the 'Routes' management screen"",""when"":""The user creates a new route with a unique 'Route Name', 'Source', 'Destination', and 'Standard Distance'"",""then"":""The system saves the new route record.""},{""scenario"":""System prevents route creation with missing mandatory information"",""given"":""The user is on the new route creation form"",""when"":""The user attempts to save the route without a 'Route Name'"",""then"":""The system prevents saving and displays a validation error.""},{""scenario"":""Non-Admin users cannot access route management"",""given"":""A user is logged in as a 'Dispatch Manager'"",""when"":""The user attempts to navigate to the route management section"",""then"":""The system denies access.""}]","[""Create a new Odoo model `tms.route` with specified fields."",""Implement unique and required constraints on the model fields."",""Create standard Odoo form and tree views."",""Configure access control to restrict write access to Admins.""]","[""All acceptance criteria validated and passing."",""Code for the `tms.route` model, views, and security rules is written and reviewed."",""Unit tests covering model constraints are implemented."",""Security testing confirms that non-Admin roles cannot access the functionality.""]"
"US-018","Master Data Management","Admin sets a customer's status to 'Active' or 'Inactive'","Admin","As an Admin, I want to be able to set a customer's status to 'Active' or 'Inactive', so that I can control which customers are available for new business and keep our master data clean.","Improves data integrity and operational efficiency by preventing the selection of non-serviceable customers for new trips.","High","1","[""US-015"",""US-026"",""US-070""]","[{""scenario"":""Admin deactivates an active customer"",""given"":""I am an Admin viewing an 'Active' customer's record"",""when"":""I change the status to 'Inactive' (Archive)"",""then"":""The customer is marked as 'Inactive' and no longer appears in the customer selection dropdown for new trips.""},{""scenario"":""Attempting to deactivate a customer with active trips"",""given"":""A customer is associated with a trip in 'In-Transit' state"",""when"":""I attempt to change the customer's status to 'Inactive'"",""then"":""The system displays a warning 'This customer has active trips. Are you sure?' and requires confirmation.""}]","[""Leverage the standard Odoo `active` field and archiving functionality on the `res.partner` model."",""Override the `toggle_active` method to check for related active trips before proceeding."",""Ensure the customer selection field on the trip form has a domain filter `[('active', '=', True)]`."",""Restrict write access on the `active` field to the Admin group.""]","[""All acceptance criteria validated and passing."",""Unit tests for the overridden `toggle_active` method are written."",""Automated integration tests confirm the domain filter on the trip form.""]"
"US-017","Master Data Management","Admin creates and manages customer-specific rate agreements","Admin","As an Admin, I want to create and manage customer-specific rate agreements based on routes and materials, so that trip revenue is calculated automatically and accurately.","Ensures accurate and consistent billing, reducing manual errors and customer disputes. Streamlines the trip creation and invoicing process.","High","5","[""US-015"",""US-019"",""US-020""]","[{""scenario"":""Create a new 'Per Km' rate agreement for a customer"",""given"":""I am an Admin viewing the 'ABC Corp' customer record"",""when"":""I navigate to 'Rate Agreements', click 'Add', and enter details for a 'Per Km' rate"",""then"":""The system saves the new rate agreement for 'ABC Corp'.""},{""scenario"":""Attempt to create a duplicate rate agreement"",""given"":""A rate agreement exists for 'ABC Corp', route 'Mumbai-Delhi', material 'Steel'"",""when"":""I attempt to create a new agreement with the exact same parameters"",""then"":""The system prevents saving and displays a uniqueness error.""}]","[""Create a new Odoo model `tms.rate.agreement` with relationships to customer, source, destination, and material."",""Implement a unique constraint on the combination of these fields."",""Modify the `res.partner` form view to add a One2many list for rate agreements."",""Restrict write access to the Admin role.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for model constraints."",""Security permissions are correctly implemented and verified."",""Technical documentation for the new model is created.""]"
"US-016","Master Data Management","Admin manages multiple shipping locations for a customer","Admin","As an Admin, I want to add and manage multiple shipping locations for a single customer, so that Dispatch Managers can quickly and accurately select a pre-defined destination when creating a new trip.","Improves operational efficiency and data accuracy by reducing manual address entry errors and centralizing customer location data.","High","3","[""US-015""]","[{""scenario"":""Admin successfully adds a new shipping location"",""given"":""I am an Admin viewing an existing customer's form"",""when"":""I add a new shipping location with a complete address and save"",""then"":""The new location is saved and displayed in the list for that customer.""},{""scenario"":""Shipping locations are available for selection during trip creation"",""given"":""A customer has multiple shipping locations defined"",""when"":""A Dispatch Manager creates a new trip for that customer"",""then"":""The 'Destination' field dropdown is populated with the customer's active shipping locations.""}]","[""Leverage Odoo's native support for parent/child contacts by using `type='delivery'` for shipping addresses."",""Customize the `res.partner` form view to have a dedicated, clear tab for 'Shipping Locations'."",""Modify the `tms.trip` form's 'Destination' field to have a dynamic domain that shows child addresses of the selected customer.""]","[""All acceptance criteria validated and passing."",""Integration testing with the Trip Creation form completed successfully."",""User interface on the customer form is reviewed and approved.""]"
"US-015","Master Data Management","Admin creates a new customer record","Admin","As an Admin, I want to create a new customer record by entering their essential business details, so that the new customer is available for trip planning and invoicing.","Enables new business by onboarding clients into the system. Ensures data accuracy for logistics and financial operations.","High","2","[]","[{""scenario"":""Successful creation of a new customer with valid data"",""given"":""The Admin is on the Customer management screen"",""when"":""The Admin fills in all mandatory fields (Name, Address, GSTIN) and clicks 'Save'"",""then"":""A new customer record is created and defaults to 'Active' status.""},{""scenario"":""Attempt to save a new customer with an invalid GSTIN format"",""given"":""The Admin is on the new customer creation form"",""when"":""The Admin enters a GSTIN with an incorrect format and attempts to save"",""then"":""The system prevents saving and displays an error: 'Invalid GSTIN format.'""}]","[""Extend the standard Odoo `res.partner` model to add any TMS-specific fields."",""Implement a constraint (`@api.constrains`) to validate the format of the `vat` (GSTIN) field using a regex."",""Ensure the standard `res.partner` views are used and that access is appropriately configured for the Admin role.""]","[""All acceptance criteria validated and passing."",""Unit tests for GSTIN validation logic are written and passing."",""Security check confirms that access is restricted to authorized roles.""]"
"US-014","Master Data Management","Admin sets a driver's status to 'Active' or 'Inactive'","Admin","As an Admin, I want to change a driver's status between 'Active' and 'Inactive' so that I can manage the pool of available drivers and prevent unavailable drivers from being assigned to new trips.","Ensures operational accuracy by preventing assignments to unavailable drivers and preserves historical data by deactivating rather than deleting records.","High","1","[""US-011"",""US-027""]","[{""scenario"":""Inactive driver is excluded from trip assignment"",""given"":""A driver's status has been set to 'Inactive'"",""when"":""A Dispatch Manager accesses the dropdown list to assign a driver to a new trip"",""then"":""The inactive driver's name does NOT appear in the list.""},{""scenario"":""Admin attempts to deactivate a driver with an active trip"",""given"":""A driver is assigned to a trip with a status of 'In-Transit'"",""when"":""I attempt to change that driver's status to 'Inactive'"",""then"":""The system prevents the change and displays an error: 'Cannot deactivate a driver with an active trip.'""}]","[""Use the standard Odoo `active` field on the `hr.employee` model."",""Override the `write` or `toggle_active` method to add a check for active trips before allowing deactivation."",""Ensure the domain filter on the driver selection field of the trip form excludes inactive drivers.""]","[""All acceptance criteria validated and passing."",""Unit tests for the business logic are written and passing."",""Integration testing confirms the trip assignment list is correctly filtered.""]"
"US-013","Master Data Management","Admin uploads a scanned copy of a driver's license","Admin","As an Admin, I want to upload a scanned copy of a driver's license to their profile so that I can maintain a complete digital record for compliance and verification.","Centralizes critical compliance documents, improves operational efficiency, and mitigates risk by ensuring driver records are complete.","High","1","[""US-011""]","[{""scenario"":""Successful upload of a valid license file"",""given"":""I am an Admin on a driver's record form"",""when"":""I upload a valid image file (JPG, PNG) or a PDF under 5MB"",""then"":""The file uploads successfully and a thumbnail or icon is displayed on the driver's form.""},{""scenario"":""Attempt to upload a file with an unsupported format or size"",""given"":""I am an Admin on a driver's record form"",""when"":""I attempt to upload a .docx file or a 6MB JPG"",""then"":""The system rejects the upload and displays an error about invalid format or size.""}]","[""Add a `fields.Binary` to the extended `hr.employee` model."",""Add the new field to the form view using an `image` or `binary` widget."",""Ensure the system is configured to use Amazon S3 for attachment storage."",""Rely on Odoo's built-in file handling for validation and storage.""]","[""All acceptance criteria validated and passing."",""Integration testing with S3 storage is completed successfully."",""Security requirements validated, including role-based access checks.""]"
"US-012","Master Data Management","Admin adds and manages driver license details and expiry date","Admin","As an Admin, I want to add and edit a driver's license number and expiry date so that I can maintain accurate compliance records and enable automated expiry alerts.","Enables enforcement of compliance rules, supports automated alerts, and is a prerequisite for preventing assignment of drivers with expired licenses.","High","1","[""US-011""]","[{""scenario"":""Successfully add license details to a driver record"",""given"":""I am an Admin viewing a driver's record"",""when"":""I enter a 'License Number', select a future 'License Expiry Date', and save"",""then"":""The system saves the record with the new information.""},{""scenario"":""System prevents saving with a past expiry date"",""given"":""I am an Admin editing a driver's record"",""when"":""I select a date in the past for the 'License Expiry Date' and save"",""then"":""The system prevents the save and displays a validation error.""}]","[""Add `license_number` (Char) and `license_expiry_date` (Date) fields to the extended `hr.employee` model."",""Add these fields to a new 'Driver Details' tab on the `hr.employee` form view."",""Implement a Python constraint (`@api.constrains`) to validate the expiry date."",""Restrict write access to these fields to the Admin role.""]","[""All acceptance criteria validated and passing."",""Unit tests for the model constraints have been written and achieve >80% coverage."",""Security requirements (role-based access) have been tested and verified.""]"
"US-011","Master Data Management","Admin creates a new driver record by extending an HR employee","Admin","As an Admin, I want to create a new driver record by adding driver-specific details to an existing HR employee record, so that I can properly onboard drivers into the TMS.","Enables the creation of a compliant and operational driver pool, which is fundamental for trip assignment and management.","High","2","[]","[{""scenario"":""Successfully designate an HR employee as a driver"",""given"":""I am an Admin on an 'hr.employee' record"",""when"":""I enable 'Is a Driver', enter a 'License Number' and 'License Expiry Date', and save"",""then"":""The employee is saved with driver-specific details and appears in the list of available drivers.""},{""scenario"":""Driver-specific fields are hidden for non-driver employees"",""given"":""I am an Admin viewing an 'hr.employee' record"",""when"":""The 'Is a Driver' flag is not enabled"",""then"":""The fields for 'License Number' and 'License Expiry Date' are not visible.""}]","[""Inherit the Odoo `hr.employee` model to add TMS-specific fields."",""Add a boolean 'is_driver' flag, license fields, and a status field."",""Inherit the `hr.employee` form view to add a new 'TMS Driver Information' tab."",""Use the `attrs` attribute in the view XML to make the new tab visible only when 'is_driver' is true.""]","[""All acceptance criteria validated and passing."",""Integration testing completed to ensure the new driver is available for trip assignment."",""Security rules restricting access to the 'Admin' role are implemented and verified.""]"
"US-010","Master Data Management","Admin logs a service history entry for a vehicle","Admin","As an Admin, I want to manage detailed service history entries for each vehicle, so that I can maintain a complete maintenance log, track costs, and schedule future maintenance.","Provides a centralized record of vehicle maintenance, essential for tracking total cost of ownership, ensuring safety, and calculating accurate vehicle profitability.","Medium","2","[""US-006""]","[{""scenario"":""Successfully create a new service history entry"",""given"":""I am an Admin viewing a vehicle's form"",""when"":""I navigate to 'Service History', add a new entry with all mandatory fields (Date, Type, Cost, Odometer), and save"",""then"":""The new service entry is created and appears in the list for that vehicle.""},{""scenario"":""Attempt to save a service entry with a future date or invalid numbers"",""given"":""I am creating a new service entry"",""when"":""I enter a future date or a negative cost"",""then"":""The system prevents saving and displays a validation error.""}]","[""Create new Odoo models `tms.vehicle.service.log` and `tms.service.type`."",""Add a One2many relationship from `tms.vehicle` to the service log model."",""Modify the vehicle form view to include a 'Service History' tab with an editable list view."",""Implement Python constraints for data validation.""]","[""All acceptance criteria validated and passing."",""Unit tests covering model constraints are implemented."",""Security rules have been tested to ensure only Admins can access the functionality.""]"
"US-009","Master Data Management","Admin attaches a document with an expiry date to a vehicle record","Admin","As an Admin, I want to upload vehicle-specific documents, categorize them, and set their expiry dates, so that I can maintain a digital record of compliance documents and enable timely renewal alerts.","Ensures legal and regulatory compliance by tracking critical vehicle documents, preventing fines and operational downtime from expired certifications.","High","5","[""US-006""]","[{""scenario"":""Successfully upload a new, valid document to a vehicle"",""given"":""I am an Admin viewing a vehicle form"",""when"":""I add a document, select a 'Document Type', choose a future 'Expiry Date', upload a valid file, and save"",""then"":""The document is successfully uploaded and appears in the list for that vehicle.""},{""scenario"":""Attempt to upload a file with an unsupported format or size"",""given"":""I am on the 'Add Document' form"",""when"":""I attempt to upload a .zip file or a file larger than 5MB"",""then"":""The system rejects the file and displays a user-friendly error message.""}]","[""Create a new Odoo model `tms.vehicle.document` with a Many2one relationship to `tms.vehicle`."",""Add fields for document type, expiry date, and a binary field for the attachment."",""Integrate Odoo's filestore with Amazon S3."",""Modify the vehicle form view to include a 'Documents' tab with a One2many list view."",""Implement server-side validation for file type and size.""]","[""All acceptance criteria validated and passing."",""Integration testing confirms files are correctly stored in and retrieved from the S3 bucket."",""Security testing has confirmed that file access is restricted to authorized users.""]"
"US-008","Master Data Management","Admin sets a vehicle's status to 'Active' or 'Inactive'","Admin","As an Admin, I want to set the status of a vehicle to 'Active' or 'Inactive', so that I can control which vehicles are available for new trip assignments while preserving historical records.","Improves data integrity by preventing assignment of unavailable vehicles and enhances operational efficiency by simplifying selection lists.","High","1","[""US-006"",""US-027""]","[{""scenario"":""Admin deactivates an available vehicle"",""given"":""I am an Admin viewing an 'Active' vehicle"",""when"":""I change its status to 'Inactive' and save"",""then"":""The vehicle no longer appears in the list of selectable vehicles for new trips.""},{""scenario"":""Attempting to deactivate a vehicle assigned to an active trip"",""given"":""A vehicle is currently assigned to a trip with status 'In-Transit'"",""when"":""I attempt to change the vehicle's status to 'Inactive'"",""then"":""The system prevents the change and displays an error message.""}]","[""Use the standard Odoo `active` boolean field on the `tms.vehicle` model."",""Override the `write` method to add a check for active trips before allowing deactivation."",""Ensure the domain filter on the trip form's vehicle selection field is `[('active', '=', True)]`.""]","[""All acceptance criteria validated and passing."",""Unit tests are written for the business logic (blocking deactivation)."",""Integration testing confirms the vehicle selection list is correctly filtered.""]"
"US-007","Master Data Management","Admin edits an existing vehicle record","Admin","As an Admin, I want to edit the details of an existing vehicle record, so that I can ensure all vehicle information is accurate and up-to-date.","Ensures data integrity for the vehicle fleet, which is foundational for accurate trip planning, compliance tracking, and operational reporting.","High","2","[""US-006"",""US-071"",""US-072"",""US-025""]","[{""scenario"":""Successfully edit and save a vehicle record"",""given"":""I am an 'Admin' viewing an existing vehicle form"",""when"":""I modify a field (e.g., 'Capacity') and click 'Save'"",""then"":""The changes are saved and the updated information is visible.""},{""scenario"":""Attempt to save with a duplicate Truck Number"",""given"":""Another vehicle already exists with the Truck Number 'KA01AB1234'"",""when"":""I change the 'Truck Number' of the current vehicle to 'KA01AB1234' and click 'Save'"",""then"":""The system prevents saving and displays a uniqueness error.""},{""scenario"":""Audit trail is created upon successful edit"",""given"":""I am an 'Admin' editing a vehicle"",""when"":""I successfully change a field and save"",""then"":""An immutable audit log entry is created recording the change.""}]","[""Leverage the standard Odoo edit functionality on the `tms.vehicle` form view."",""Ensure the uniqueness and format validations from US-071 and US-072 are triggered on `write`."",""Ensure the model inherits `mail.thread` and key fields are marked for `tracking=True` to integrate with the audit trail.""]","[""All acceptance criteria validated and passing."",""Integration testing completed successfully."",""Security requirements (role-based access) validated."",""Audit trail generation is confirmed to be working as expected.""]"
"US-006","Master Data Management","Admin creates a new vehicle record","Admin","As an Admin, I want to create a new vehicle record by entering its key details, so that the vehicle is registered in the system and can be managed and assigned to trips.","Establishes the foundational master data for the vehicle fleet, enabling core functionalities like trip assignment, expense tracking, and operational reporting.","High","3","[""US-058"",""US-070""]","[{""scenario"":""Successful creation of a new vehicle record"",""given"":""I am an Admin on the 'Vehicles' list view"",""when"":""I click 'Create', fill in all mandatory fields with valid data, and click 'Save'"",""then"":""A new vehicle record is created and its status defaults to 'Active'.""},{""scenario"":""Attempt to create a vehicle with a duplicate or invalid Truck Number"",""given"":""A vehicle with a specific Truck Number already exists"",""when"":""I attempt to create a new vehicle with the same or an invalidly formatted Truck Number"",""then"":""The system prevents saving and displays a clear error message.""}]","[""Create the `tms.vehicle` Odoo model with all specified fields."",""Implement `sql_constraints` for truck number uniqueness."",""Implement a Python constraint for truck number format validation."",""Create standard form, tree, and search views for the model."",""Configure access control to restrict write access to Admins.""]","[""All acceptance criteria are validated and passing."",""Unit tests for the model's constraints are written and passing."",""The feature is deployed and verified in the staging environment."",""The UI is confirmed to be responsive and meets accessibility standards.""]"
"US-005","User & Access Management","Admin grants additional specific permissions to a user group","Admin","As an Admin, I want to grant specific, granular permissions to a user group, so that I can customize access rights beyond the standard roles to meet unique operational needs.","Provides flexibility to tailor user access to specific business needs, enhancing security by adhering to the principle of least privilege.","High","1","[""US-001"",""US-004""]","[{""scenario"":""Granting a new 'Read' permission to a standard role"",""given"":""A 'Dispatch Manager' user exists"",""when"":""I grant 'Read' access for the 'Invoice' model to the 'Dispatch Manager' group"",""then"":""The 'Dispatch Manager' user can now view invoices in a read-only state.""},{""scenario"":""Revoking a previously granted permission"",""given"":""The 'Dispatch Manager' group has 'Read' access to the 'Invoice' model"",""when"":""I remove this access right from the group"",""then"":""The 'Dispatch Manager' user immediately loses access and receives an 'Access Denied' error when trying to view invoices.""}]","[""Utilize the standard Odoo interface at 'Settings > Users & Companies > Groups'."",""Ensure all custom TMS models are registered and available for permission assignment."",""Verify that Odoo's audit logging (chatter on `res.groups`) tracks these changes.""]","[""All acceptance criteria validated and passing."",""Integration testing completed successfully, confirming permissions are applied correctly."",""Security requirements validated, especially audit logging of permission changes.""]"
"US-004","User & Access Management","Admin assigns a primary role to a user","Admin","As an Admin, I want to assign a single, predefined primary role to a user account, so that I can efficiently manage access control and ensure each user has appropriate permissions.","Enforces a secure and manageable Role-Based Access Control (RBAC) system, simplifies user onboarding, and reduces the risk of unauthorized access.","High","2","[""US-001"",""US-070""]","[{""scenario"":""Assign a primary role to a user"",""given"":""I am an Admin viewing a user's record"",""when"":""I select 'Dispatch Manager' from the 'Primary Role' dropdown and save"",""then"":""The user is assigned the 'Dispatch Manager' role and their permissions are updated.""},{""scenario"":""Admin attempts to change their own role to a non-Admin role"",""given"":""I am an Admin editing my own user profile"",""when"":""I attempt to change my role to 'Driver' and save"",""then"":""The system prevents the change and displays an error: 'Administrators cannot revoke their own admin privileges.'""}]","[""Add a `Selection` field for 'Primary Role' to the `res.users` form view."",""Override the `create` and `write` methods of `res.users` to manage Odoo security group memberships based on the selection."",""Implement logic to remove previous primary role groups when assigning a new one."",""Add a check to prevent an admin from removing their own admin rights.""]","[""All acceptance criteria validated and passing."",""Unit tests for the role-switching logic are implemented with >80% coverage."",""Security requirement to prevent admin self-demotion is validated.""]"
"US-003","User & Access Management","Admin deactivates a user account","Admin","As an Admin, I want to deactivate a user's account, so that I can immediately revoke their system access when they are no longer with the company.","Enhances system security by preventing unauthorized access from former employees and preserves data integrity by retaining historical user actions.","High","2","[""US-001"",""US-002""]","[{""scenario"":""Successful deactivation of a user account"",""given"":""I am an Admin on the user management screen"",""when"":""I select an active user and trigger the 'Deactivate' action"",""then"":""The user's status is set to 'Inactive' and they are immediately unable to log in.""},{""scenario"":""Admin attempts to deactivate their own account"",""given"":""I am an Admin viewing my own user record"",""when"":""I attempt to use the 'Deactivate' action"",""then"":""The action is disabled or results in an error: 'Self-deactivation is not permitted.'""},{""scenario"":""Deactivated user's active session is terminated"",""given"":""A user is currently logged in"",""when"":""An Admin deactivates that user's account"",""then"":""The user's active session is immediately invalidated and they are forcefully logged out.""}]","[""Leverage Odoo's standard 'Archive' functionality on the `res.users` model, which corresponds to the `active` field."",""Implement a check to prevent self-archiving for admins."",""Implement logic to kill active sessions for a user ID upon deactivation.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for self-deactivation prevention."",""Security requirement for immediate session termination is validated."",""Audit trail logging is confirmed to be working.""]"
"US-002","User & Access Management","Admin edits an existing user account's details and permissions","Admin","As an Admin, I want to edit an existing user's details and role, so that I can maintain accurate user records and ensure their access rights align with their current job responsibilities.","Ensures system security by enforcing the principle of least privilege and maintains data accuracy for user records.","High","2","[""US-001"",""US-004""]","[{""scenario"":""Admin successfully changes a user's primary role"",""given"":""I am editing a user whose primary role is 'Driver'"",""when"":""I change their role to 'Dispatch Manager' and save"",""then"":""The user is assigned the permissions of the 'Dispatch Manager' role and the 'Driver' role permissions are removed.""},{""scenario"":""Admin attempts to remove their own administrative privileges"",""given"":""I am an Admin editing my own user account"",""when"":""I attempt to remove the 'Admin' role from my account and save"",""then"":""The system prevents the change and displays a warning: 'You cannot remove administrative privileges from your own account.'""}]","[""Utilize the standard Odoo user form view for editing."",""Implement the role-switching logic in the `write` method of the `res.users` model."",""Add a server-side check to prevent admin self-lockout."",""Ensure all changes are logged via `mail.thread`.""]","[""All acceptance criteria validated and passing."",""Unit tests for self-lockout prevention logic are implemented."",""E2E testing confirms an Admin can edit a user and the user's permissions are correctly enforced.""]"
"US-001","User & Access Management","Admin creates a new user account with a primary role","Admin","As an Admin, I want to create a new user account by providing their name, email, and assigning a primary role, so that I can securely grant a new employee the appropriate level of system access.","Enables secure and controlled onboarding of new employees by provisioning role-based access to the system.","High","1","[""US-SYS-001""]","[{""scenario"":""Successful creation of a new user with a primary role"",""given"":""I am an Admin on the 'Create User' screen"",""when"":""I enter a unique email, name, and select the 'Dispatch Manager' role"",""then"":""The system creates the new user and assigns them to the 'Dispatch Manager' security group.""},{""scenario"":""Attempt to create a user with a non-unique email address"",""given"":""I am on the 'Create User' screen"",""when"":""I enter an email address that already exists"",""then"":""The system prevents creation and displays an error: 'A user with this email address already exists.'""}]","[""Extend the standard Odoo `res.users` form view to include a 'Primary Role' selection field."",""Override the `create` method to automatically assign the correct Odoo security group based on the selected role."",""Rely on Odoo's built-in uniqueness constraints for the email/login field.""]","[""All acceptance criteria validated and passing."",""Unit tests implemented for the role assignment logic."",""Manual end-to-end testing completed successfully in a staging environment.""]"
