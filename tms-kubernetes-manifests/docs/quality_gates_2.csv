"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"Pull Request (PR) Gate","Static Analysis & Unit Tests","Pull request created/updated","Linting (Flake8, Black) passes. Unit test suite passes with >80% coverage on new code (REQ-1-504). No hardcoded secrets.","Block PR merge.","Development Team","Fully Automated","GitHub Actions, Pytest, SonarQube","Every commit on PR","PR author must fix issues.","90","0.5","Prevents broken code and low-quality code from entering the main branch."
"Staging Deployment Gate","Integration & E2E Tests","Merge to 'main' branch","All integration tests pass. Critical path E2E test suite passes.","Block deployment to Staging. Alert DevOps and QA Lead.","DevOps/QA Team","Fully Automated","GitHub Actions, Playwright/Cypress","On every merge to main","On-call developer investigates and rolls back if necessary.","85","4","Ensures the staging environment is always in a stable, testable state."
"Release to Production Gate","UAT & NFR Validation","Manual trigger for production release","UAT sign-off from Product Owner. Performance tests meet benchmarks. Security scan shows zero critical/high vulnerabilities. DR drill completed successfully.","Abort production release. Conduct go/no-go meeting.","Product Owner, QA Lead, Tech Lead","Partially Automated","Manual Sign-off, JMeter, OWASP ZAP","Per release cycle","Project stakeholders meeting.","98","48","Prevents the release of a feature that does not meet business, performance, or security requirements."